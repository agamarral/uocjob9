{"version":3,"sources":["./node_modules/@angular/material/_theming.scss","./src/styles.scss","./src/app/views/company-profile/company-profile.component.scss-theme.scss","./src/app/views/personal-details-dialog/personal-details-dialog.component.scss-theme.scss","./src/app/views/work-experiences/work-experiences.component.scss-theme.scss","./src/app/views/work-experience-details-dialog/work-experience-details-dialog.component.scss-theme.scss","./node_modules/intl-tel-input/build/css/intlTelInput.css"],"names":[],"mappings":"AAk/DE,mBAGE,4CCz+DJ,CDurDE,yCA9NE,mDC38CJ,CD8qDE,sCAnOE,mDCr8CJ,CD6qDE,6CAxOE,mDC/7CJ,CD4qDE,6CA7OE,mDCz7CJ,CD8qDE,2BArPE,sDCp7CJ,CDqrDE,2BAjQE,qDC/6CJ,CD4rDE,6BA7QE,mDC16CJ,CD2rDE,sCAjRE,mDCr6CJ,CD8rDE,wBAzRE,mDC75CJ,CD0rDE,8CA7RE,qDCv5CJ,CDyrDE,8CAlSE,mDCj5CJ,CDwrDE,8CAvSE,mDC34CJ,CDurDE,8CA5SE,mDCr4CJ,CDk7DE,4BA7iBE,mDCh4CJ,CDmlEE,4GAGI,6CACA,cChlEN,CDysEE,6BACE,4CClsEJ,CDqsEE,gBAEI,cClsEN,CDusEE,iCACE,cCpsEJ,CDusEE,qCAEE,cCpsEJ,CDw7EE,yBACE,4CCp6EJ,CDu6EE,iBACE,cCn6EJ,CDu6EE,2BACE,cCp6EJ,CDijFE,cACE,4CC9iFJ,CDqjFE,qDAGI,cC9iFN,CDmjFE,8BAGI,eCjjFN,CDwkFE,kBAtxCE,mDC7yCJ,CDkoFE,4BAEI,6CACA,eACA,eChoFN,CDooFE,6BA71CE,mDClyCJ,CDskJE,gBA1yGE,4CCpxCJ,CDurFE,4CAGE,cChjFJ,CDsgFI,8FACE,cC3/EN,CDi1FE,eAEI,6CACA,eACA,eC30FN,CDw3FE,4DAGI,6CACA,cCt3FN,CDk6GE,qFAzKE,4CCnuGJ,CD44GE,6BAGI,cC/4GN,CDk+GE,8CACE,4CC/9GJ,CDk+GE,gBAEI,eACA,eCh+GN,CDkpHE,4CAHE,4CCxnHJ,CD2nHE,6BAGI,cC9nHN,CD8rHE,6GAhoFE,mDCljCJ,CD0qFE,6CACE,4CCtpFJ,CDm5EI,gHACE,cCz3EN,CD0oFI,8BACE,4CCtoFN,CDm3EI,0MACE,cCz1EN,CD6nFI,qCAEE,cC1nFN,CDyhCE,iDAgmDI,4CCpnFN,CD6iCE,oBArFE,mDCn9BJ,CD0pHE,qBAGI,cCxpHN,CDq1IE,+BA9rBI,4CC5oHN,CD80IE,qCAEE,gBACA,cC30IJ,CDy0BE,YACE,gBAIA,iBCz0BJ,CDg1BI,wBACE,uBC90BN,CDk1BE,iCACE,gBC/0BJ,CDk1BE,oBACE,kBACA,kBACA,oBAEA,wDACA,kBCh1BJ,CDjZI,8CAquCE,YCj1BN,CD/aE,qBACE,SACA,mBACA,WACA,YACA,gBACA,UACA,kBACA,UAGA,UAGA,wBACA,oBC8aJ,CD5jBE,mDAEE,oBAGA,MACA,OACA,YACA,UC4jBJ,CDxjBE,uBACE,eACA,YC2jBJ,CDzjBI,6BAGE,YCyjBN,CD1iBE,8CANE,aACA,kBACA,YC8jBJ,CD1jBE,kBAIE,oBACA,sBAMA,eACA,eC8iBJ,CD3iBE,sBAEE,kBACA,MACA,SACA,OACA,QAEA,YApE2B,CAqE3B,oBACA,wCACA,kDACA,SC4iBJ,CD1iBI,mDACE,SC4iBN,CDtiBM,6CAPF,mDAQI,UCyiBN,CACF,CDriBE,2BACE,0BCwiBJ,CDhiBI,iGACE,SCmiBN,CD7hBE,6CACE,kBACA,YA1GkB,CA+GlB,aAIA,sBAGA,cACA,cCuhBJ,CDnhBE,wBACE,eAKA,WAKA,iBC8gBJ,CDrbE;EAA0C,KCyb5C,CDzbE;EAA0C,KCyb5C,CDxbE;EAAwC,KC2b1C,CD3bE;EAAwC,KC2b1C,CDzbE,oDAEE,qGC0bJ,CDvbE,0DAEE,iGCybJ,CDpbE,+BACE,WCubJ,CDjbE,yCACE,sBACA,0BAGA,wBACA,gCCkbJ,CDg0CE,mBACE,eArLoB,CAsLpB,cAvLkB,CAwLlB,2BC5uCJ,CD+uCE,oCAEE,aC7uCJ,CDgvCE,oCACE,cC7uCJ,CDk7BE,yCA9NE,qCAYF,sBAoNE,eC96BJ,CDi7BE,sCAnOE,oCAYF,sBAyNE,eC76BJ,CDq7BE,0FA7OE,qCAYF,sBA8NE,eCt6BJ,CDi7BE,2BArPE,sCA8PA,eCr7BJ,CDw7BE,2BAjQE,sCA0QA,eC57BJ,CD+7BE,6BA7QE,mCAYF,qBCzrBF,CD87BE,sCAjRE,mCAYF,qBCprBF,CD47BI,4CACE,eC17BN,CD87BE,wBAzRE,qCAYF,qBC5qBF,CD67BE,8CA7RE,qCAYF,sBAmRE,eCz7BJ,CD47BE,8CAlSE,mCAYF,sBAwRE,eCx7BJ,CD27BE,8CAvSE,mCAYF,uBA6RE,eCv7BJ,CD07BE,8CA5SE,mCAYF,sBAkSE,eCt7BJ,CDqrCE,4BA7iBE,mCAYF,qBC/oBF,CDs1CE,4GAGI,4BACA,eACA,eCp1CN,CD48CE,6BACE,2BCr8CJ,CDw8CE,gBAEI,eACA,eCt8CN,CD08CE,iCACE,aCv8CJ,CD08CE,qCAEE,cCv8CJ,CD4iDE,cACE,2BCziDJ,CD6iDE,yCACE,gBC1iDJ,CDsoDE,UACE,eACA,eCnoDJ,CDqoDI,+EAEE,cCnoDN,CD0qDE,WACE,2BCvqDJ,CD0qDE,iBACE,eACA,eCvqDJ,CD0qDE,2BACE,cCvqDJ,CDozDE,cACE,2BCjzDJ,CDozDE,mBACE,cCjzDJ,CDozDE,qDAGI,eACA,eClzDN,CDszDE,8BAEI,cAjJiC,CAkJjC,eCpzDN,CD20DE,kBAtxCE,oCAYF,qBC5jBF,CDq4DE,4BAEI,8BACA,eACA,eCn4DN,CDu4DE,6BA71CE,mCAYF,qBCjjBF,CDy0HE,gBA7yGE,iBAeU,CAdV,eAeY,CAdZ,iBAeY,CAdZ,2BAeY,CAGd,qBCziBF,CDq0HE,wBACE,wBCl0HJ,CDw0HI,kEACE,cAvB2B,CAwB3B,iBCp0HN,CDw0HI,gFACE,aACA,WCr0HN,CDu0HM,oGACE,eACA,iBCp0HR,CDy0HE,sBACE,eAEA,qCCv0HJ,CD20HI,kLArEF,4CAEA,qBClwHF,CD60HI,yHA7EF,4CAEA,qBC9vHF,CDg1HE,8BACE,cACA,oBC70HJ,CDg1HE,sBACE,aC70HJ,CDg1HE,0BAGE,gBC/0HJ,CDk1HE,kCACE,aA/EoB,CAgFpB,wBAzEqB,CA6ErB,0BCl1HJ,CDy4GI,0DACE,qBCt4GN,CDy4GI,wDACE,iBCv4GN,CD24GM,oPAzDJ,kFAIA,gDAGA,qBCn1GF,CD44GM,iKAhEJ,oFAIA,gDAGA,qBC90GF,CD+4GM,0JAxEJ,oFAIA,gDAGA,qBCz0GF,CDi5GI,wDACE,aC/4GN,CDk5GI,4DAGE,aCl5GN,CDq5GI,oEACE,wBAjDmB,CAqDnB,0BCt5GN,CD45GE,aAGM,oPAvFN,2CCl0GA,CDg6GM,iKA9FN,2CC/zGA,CDq6GM,0JAtGN,0CC5zGA,CACF,CDguGI,sDACE,qBC9tGN,CDiuGI,sDACE,cACA,gBC/tGN,CDmuGM,gPAhCJ,2CAEA,qBChsGF,CDuuGM,wJAzCJ,2CAEA,qBC5rGF,CDigHI,yDACE,aC9/GN,CDigHI,yDACE,cACA,iBC//GN,CDmgHM,sPAvCJ,4CAEA,qBCz9GF,CDugHM,2JAhDJ,4CAEA,qBCr9GF,CDqzDE,4CAGE,cCnzDJ,CDmwDE,gEARA,mBACA,gBACA,uBAQE,cACA,qBC9vDJ,CDiwDI,8FACE,cC9vDN,CDw8DE,wBACE,mBCr8DJ,CDglEE,eAEI,4BACA,eACA,eC9kEN,CD2nEE,4DAGI,8BACA,cCznEN,CD21EE,8BACE,2BCp1EJ,CDu1EE,oBACE,cCp1EJ,CD++EE,0BACE,2BC5+EJ,CDqpFE,6BAEI,4BACA,eACA,eCnpFN,CDquFE,8CACE,2BCluFJ,CDquFE,gBAEI,eACA,eCnuFN,CDuuFE,0BACE,eCpuFJ,CDuuFE,sBACE,cCpuFJ,CDuuFE,yBAEI,eACA,eCruFN,CDo4FE,eACE,2BCj4FJ,CDo4FE,6BAEI,4BACA,eACA,eCl4FN,CDi8FE,6GAhoFE,oCAYF,sBA4nFE,QC77FJ,CDu9FE,aACE,4BACA,cAnBoB,CAoBpB,eAnB2B,CAoB3B,kBCp9FJ,CDu9FE,qBACE,cArB4B,CAsB5B,eApBA,CAqBA,kBCp9FJ,CDg6DE,gCACE,2BCz5DJ,CD85DI,8BACE,cC35DN,CD4oDE,wCARA,mBACA,gBACA,uBAQE,cACA,qBCxoDJ,CDw5DI,uFACE,cCn5DN,CD+nDE,0CARA,mBACA,gBACA,uBAQE,cACA,qBC3nDJ,CD8nDI,yDACE,cC5nDN,CD64DI,8BACE,4BACA,eACA,eC34DN,CDi5DI,qCACE,cC94DN,CD4mDE,+CARA,mBACA,gBACA,uBAQE,cACA,qBCxmDJ,CD24DI,qGACE,cCt4DN,CD+lDE,iDARA,mBACA,gBACA,uBAQE,cACA,qBC3lDJ,CD8lDI,gEACE,cC5lDN,CDg4DI,qCAGE,eC93DN,CD4RE,iDAgmDI,2BA1CU,CA2CV,cCx3DN,CDgTE,oBArFE,mCAYF,qBClOF,CD65FE,qBAEI,4BACA,cC35FN,CD+5FE,4BACE,cAEE,oBACA,kBACA,eC75FN,CDilHE,UACE,2BC9kHJ,CDilHE,qCAEE,gBACA,cC9kHJ,CDqHE,oBAII,+BCrHN,CDmNE,YACE,qBChNJ,CD4NI,4LAHE,0BC/MN,CDkNI,uBAEE,qBCpNN,CDuNI,gCACE,qBCrNN,CDyNE,gEACE,aCtNJ,CDyNE,+DACE,aCtNJ,CDyNE,6DACE,aCtNJ,CD0OE,oBACE,qBCvOJ,CD0OE,2CACE,qBCvOJ,CDkQE,qBACE,qBC/PJ,CDiQI,2BACE,aC/PN,CDmQE,8BACE,aChQJ,CDmQE,0FAEE,kBChQJ,CDwQE,wJAIE,kBCrQJ,CDwQE,oFAEE,kBCrQJ,CD0QI,0HACE,kBCtQN,CD2kHI,kBAj9IF,iFC04BF,CDukHI,kBAj9IF,gGC84BF,CDmkHI,kBAj9IF,gGCk5BF,CD+jHI,kBAj9IF,gGCs5BF,CD2jHI,kBAj9IF,iGC05BF,CDujHI,kBAj9IF,iGC85BF,CDmjHI,kBAj9IF,kGCk6BF,CD+iHI,kBAj9IF,sGCs6BF,CD2iHI,kBAj9IF,sGC06BF,CDuiHI,kBAj9IF,sGC86BF,CDmiHI,mBAj9IF,uGCk7BF,CD+hHI,mBAj9IF,uGCs7BF,CD2hHI,mBAj9IF,uGC07BF,CDuhHI,mBAj9IF,uGC87BF,CDmhHI,mBAj9IF,uGCk8BF,CD+gHI,mBAj9IF,uGCs8BF,CD2gHI,mBAj9IF,wGC08BF,CDugHI,mBAj9IF,wGC88BF,CDmgHI,mBAj9IF,wGCk9BF,CD+/GI,mBAj9IF,wGCs9BF,CD2/GI,mBAj9IF,yGC09BF,CDu/GI,mBAj9IF,yGC89BF,CDm/GI,mBAj9IF,yGCk+BF,CD++GI,mBAj9IF,yGCs+BF,CD2+GI,mBAj9IF,yGC0+BF,CD++GE,oBAIE,yBACA,qBC/+GJ,CDsUE,wBAEE,gBACA,qBChUJ,CDr+BE,sDAnBA,iGC2/BF,CDoUI,8EACE,eClUN,CDoUM,wGACE,qBClUR,CD2aE,mBACE,WACA,kBCxaJ,CDp0CI,6CA+uDE,kBACA,eCxaN,CD6aI,qCACE,mBACA,qBC1aN,CD+aI,mCACE,WACA,kBC5aN,CDgbE,WACE,iBC7aJ,CDibI,qCACE,YC9aN,CDmbI,uCAWI,mBAMF,qBC/bN,CDmcE,mBACE,kBACA,kBACA,qBACA,kBACA,qCACA,oBACA,gBACA,mBACA,uBACA,mBChcJ,CDmcE,mFAEE,eChcJ,CDqcE,oCAEE,cCncJ,CDqSE,oCACE,UANmB,CAOnB,WAPmB,CAQnB,gBClSJ,CDsSI,oDACE,QCpSN,CDySI,oDACE,WCvSN,CD4SI,qDACE,UC1SN,CD+SI,+DACE,UACA,WC7SN,CDkTI,oDACE,WChTN,CDqTI,8DACE,WACA,UCnTN,CDyTM,uEACE,SCvTR,CD4TM,iFACE,UACA,UC1TR,CD+TM,sEACE,UC7TR,CDkUM,gFACE,WACA,SChUR,CD6PE,qCACE,UAPqB,CAQrB,WARqB,CASrB,gBC1PJ,CD8PI,qDACE,SC5PN,CDiQI,qDACE,YC/PN,CDoQI,sDACE,UClQN,CDuQI,gEACE,UACA,WCrQN,CD0QI,qDACE,WCxQN,CD6QI,+DACE,WACA,UC3QN,CDiRM,wEACE,UC/QR,CDoRM,kFACE,UACA,WClRR,CDuRM,uEACE,WCrRR,CD0RM,iFACE,WACA,UCxRR,CDqNE,oCACE,UALmB,CAMnB,WANmB,CAOnB,gBClNJ,CDsNI,oDACE,SCpNN,CDyNI,oDACE,YCvNN,CD4NI,qDACE,UC1NN,CD+NI,+DACE,UACA,WC7NN,CDkOI,oDACE,WChON,CDqOI,8DACE,WACA,UCnON,CDyOM,uEACE,UCvOR,CD4OM,iFACE,UACA,WC1OR,CD+OM,sEACE,WC7OR,CDkPM,gFACE,WACA,UChPR,CDkXE,4BAjiDA,yGAmiDE,gBACA,qBC/WJ,CDodE,iDAKE,cACA,sBCrdJ,CDsbE,qFACE,aCpbJ,CDsbE,kFACE,aCpbJ,CDsbE,4EACE,aCpbJ,CDwbI,0bAEE,qBCvbN,CDoXE,mKACE,wBClXJ,CDqXE,gKACE,wBCnXJ,CDsXE,0JACE,wBCpXJ,CDuXE,6JACE,4BCrXJ,CDqcI,6GACE,UAtGuB,CAuGvB,6BCncN,CDucE,0BACE,eCpcJ,CDycE,oCACE,4BCtcJ,CDycE,2DAEE,sBACA,qBCvcJ,CD6YE,2GACE,UC3YJ,CD6YE,uGACE,qBC3YJ,CD6YE,+FACE,UC3YJ,CD+YI,ojBAEE,qBC9YN,CDiYE,2GACE,wBC/XJ,CDiYE,uGACE,wBC/XJ,CDiYE,+FACE,wBC/XJ,CDmYI,ojBAEE,gCClYN,CDgWE,2LAXA,mCClVF,CDiWE,uLAfA,+BC/UF,CDkWE,+KAnBA,mCC5UF,CDjvCE,iGAnBA,iFCwwCF,CDrvCE,iDAnBA,gGC4wCF,CDzvCE,wEAnBA,sGC+wCF,CD5vCE,2DAnBA,iFCkxCF,CD/vCE,mFAnBA,kGCsxCF,CDnwCE,iIAnBA,uGCyxCF,CDtwCE,uGAnBA,iFC4xCF,CDucE,uDAnuDA,gGCiyCF,CDucE,iHAEE,eCpcJ,CDucE,mBACE,qBCpcJ,CDscI,oDACE,gCCpcN,CDwcE,uCACE,sBACA,eCrcJ,CDucI,wEACE,qBCrcN,CDycE,mFACE,qCCtcJ,CDycE,6FACE,iBACA,sCCtcJ,CD0cI,8GACE,iBACA,kBACA,oCCvcN,CD2cE,2BACE,yBACA,qBCxcJ,CD0cI,iEACE,qBCxcN,CD4cE,4BACE,sBACA,qBCzcJ,CD2cI,kEACE,eCzcN,CD4cI,sDACE,wBC1cN,CD8cE,iHAEE,gCC3cJ,CD+dE,UAEE,gBACA,qBC7dJ,CD90CE,wCAnBA,gGCo2CF,CDj1CE,sDAnBA,iFCu2CF,CD+dE,mBACE,qBC5dJ,CD6gBE,oBACE,4BC1gBJ,CD6gBE,wBACE,YC1gBJ,CD6gBE,6BAGE,wBC5gBJ,CD+gBE,wBACE,wBC5gBJ,CDghBI,4HACE,wBC7gBN,CDghBI,0HACE,wBC9gBN,CDihBI,sHACE,wBC/gBN,CDshBM,gJACE,wBCnhBR,CDwhBM,sEACE,oBCthBR,CD0hBI,2CACE,qBCxhBN,CD8hBE,kCACE,qBC3hBJ,CDgiBI,mKACE,kBC5hBN,CD+hBI,iKACE,kBC5hBN,CD+hBI,6JACE,kBC5hBN,CD8lBE,4BA1CA,wBAuCwB,CAtCxB,qBChjBF,CDkjBE,6CACE,qBAoCsB,CAnCtB,UChjBJ,CDylBM,2DAlgEJ,gGC46CF,CD0lBM,2EACE,WCxlBR,CD4lBI,8CACE,UC1lBN,CD6lBI,kCACE,eC3lBN,CDgmBI,0DAjEF,wBAwBgE,CAvBhE,UC3hBF,CD6hBE,2EACE,UAoBuB,CAnBvB,UC3hBJ,CDgjBE,8EATA,mCCpiBF,CDwlBI,uDArEF,wBAwBgE,CAvBhE,UChhBF,CDkhBE,wEACE,UAoBuB,CAnBvB,UChhBJ,CDqiBE,2EATA,mCCzhBF,CDilBI,yDAzEF,wBAwBgE,CAvBhE,qBCrgBF,CDugBE,0EACE,qBAoBuB,CAnBvB,UCrgBJ,CD0hBE,6EATA,+BC9gBF,CDgmBE,WACE,eC7lBJ,CDgmBE,uJAIE,kBC7lBJ,CDgmBE,wFAEE,mCC7lBJ,CDgmBE,iBACE,qBC7lBJ,CDgmBE,2BACE,qBC7lBJ,CD2xBE,sBA1wEA,0GA4wEE,gBACA,qBCtrBJ,CDo6FE,aACE,gCCj6FJ,CDo6FE,sBACE,kCCj6FJ,CDisBE,qBAEE,gBACA,qBC/rBJ,CDjlDE,mDAnBA,gGCumDF,CD+rBE,gBACE,gCC5rBJ,CDmsBM,mSACE,0BChsBR,CDusBE,oBACE,oGAEE,eCrsBJ,CACF,CDwsBE,kCACE,qBCtsBJ,CDysBE,uEAEE,qBCtsBJ,CDysBE,gDACE,qBCtsBJ,CDwsBI,0KAEE,aCtsBN,CDgiFE,gCACE,oBCzhFJ,CD4hFE,kDACE,aCzhFJ,CD2hFI,6DACE,aCzhFN,CD4hFI,2DACE,aC1hFN,CD8hFE,6CACE,aC3hFJ,CD8hFE,uBACE,gCC3hFJ,CD+hFI,mDACE,wBC5hFN,CD8hFM,8DACE,wBC5hFR,CD+hFM,4DACE,wBC7hFR,CDmiFI,4GACE,aChiFN,CDmiFI,uHACE,aCjiFN,CDgjFM,uVAEE,aCviFR,CD2iFI,uIAEE,wBCziFN,CD6iFE,WACE,aC1iFJ,CDipEI,oGACE,qBC3oEN,CD8oEI,4DACE,gCC5oEN,CD+oEI,oFAx5CF,4FACA,yBACA,0BCpvBF,CD86EI,8DACE,gCC36EN,CD86EI,sFAhsDF,4FACA,yBACA,0BC3uBF,CDkhEI,qDACE,gCC/gEN,CDkhEI,6EACE,gCChhEN,CDmhEI,iEACE,gCCjhEN,CDqhEM,8EACE,qBCnhER,CDshEM,yFACE,4BCphER,CD2xEI,2DACE,qBCxxEN,CD2xEI,iEACE,qBCzxEN,CD6xEM,6EACE,aC3xER,CD8xEM,wFACE,aC5xER,CDsyEM,qMACE,aCjyER,CDsyEM,iFACE,qBCpyER,CDuyEM,mFACE,qBCryER,CDwqBI,sBACE,aCrqBN,CDwqBI,qBACE,aCtqBN,CDyqBI,mBACE,aCvqBN,CDuvBE,mEACE,qBCpvBJ,CDuvBE,uHAEE,qBCpvBJ,CDuvBE,mBACE,mBCpvBJ,CDisBE,0CAsDI,qBCpvBN,CD8rBE,gCAsDI,qBCpvBN,CDksBE,qCAkDI,qBCjvBN,CDmsBE,8CA8CI,qBC9uBN,CDosBE,yCA0CI,qBC3uBN,CD8vBE,+BACE,mBC3vBJ,CD8vBE,wEAEE,mBC3vBJ,CD8vBE,0FACE,aC3vBJ,CD6xBI,8DACE,qBCvxBN,CD0xBI,8BACE,qBCxxBN,CD4xBE,wBACE,qBCzxBJ,CD+xBI,gMACE,0BCxxBN,CD6xBI,+GACE,0BC1xBN,CD21BE,gBAEE,eCz1BJ,CD/zDE,8CAnBA,iGCq1DF,CDy1BE,eACE,uBACA,qBCt1BJ,CDy1BM,wDACE,qBCv1BR,CD41BE,uEAEE,qBCz1BJ,CDg2BI,uLACE,0BC11BN,CDk3BE,eACE,eC/2BJ,CDk3BE,4DAEE,qBC/2BJ,CDk3BE,kDAEE,qCACA,sCC/2BJ,CDk3BE,yCAEE,oCC/2BJ,CDm3BI,uMAIE,4BCh3BN,CDw4BE,6BACE,YCr4BJ,CDw4BE,yBACE,wBCr4BJ,CDw4BE,6BACE,wBCr4BJ,CDy4BI,0DACE,YCt4BN,CDy4BI,sDACE,wBCv4BN,CD04BI,0DACE,wBCx4BN,CD64BI,wDACE,YC14BN,CD64BI,oDACE,wBC34BN,CD84BI,wDACE,wBC54BN,CD85BI,iDACE,cC35BN,CD85BI,uEACE,cC55BN,CD+5BI,mEACE,cC75BN,CD47BE,wBACE,4BCz7BJ,CDq6BE,wEACE,oBCl6BJ,CDq6BE,2SAIE,wBCr6BJ,CD65BE,uEACE,oBC35BJ,CD85BE,uSAIE,wBC95BJ,CDs5BE,qEACE,oBCp5BJ,CDu5BE,+RAIE,wBCv5BJ,CDu7BM,4IAEE,4BCr7BR,CDw7BM,wIAEE,gCCt7BR,CDy7BM,8DACE,qBCv7BR,CD67BI,sCACE,qBC37BN,CDo9BE,kBACE,qBCj9BJ,CDo9BE,wBACE,qBCj9BJ,CDo9BE,uCACE,qBCj9BJ,CDo9BE,kBACE,qBCj9BJ,CDo9BE,kBACE,eCj9BJ,CDv9DE,gDAnBA,iGC6+DF,CDi9BI,qEACE,0BC/8BN,CDq9BM,0DACE,aCl9BR,CDq9BM,yDACE,aCn9BR,CD29BI,wHACE,aCt9BN,CDy9BI,kEACE,qBCv9BN,CD0/BE,sBACE,wBALmC,CAMnC,qBCv/BJ,CD0/BE,YAEE,qBCv/BJ,CDy/BI,wCAHA,qBCn/BJ,CD0/BI,kCAvgGF,wGCghEF,CD8/BE,iBACE,sCC3/BJ,CDmgCE,2DACE,qCAhCmB,CAiCnB,iBC5/BJ,CD8/BI,0CACE,iBACA,sCC5/BN,CDggCE,sCAQI,+BCpgCN,CDwhCI,sDACE,wBCrhCN,CDwhCI,oDAGE,qCCxhCN,CD2hCI,kDAGE,wBC3hCN,CD8gCI,kEACE,wBC5gCN,CD+gCI,gEAGE,oCC/gCN,CDkhCI,8DAGE,wBClhCN,CDqgCI,+DACE,wBCngCN,CDsgCI,6DAGE,oCCtgCN,CDygCI,2DAGE,wBCzgCN,CD6iCI,wDAGE,qBC7iCN,CDijCE,wBArnGA,iGAunGE,wBC9iCJ,CDijCE,sBACE,gCC9iCJ,CDwlCE,6BACE,gCCrlCJ,CDyjCE,wGAGE,wBCtjCJ,CDyjCE,0CACE,UCvjCJ,CDgjCE,qGAGE,wBC7iCJ,CDgjCE,yCACE,qBC9iCJ,CDuiCE,+FAGE,wBCpiCJ,CDuiCE,uCACE,UCriCJ,CDykCE,uBAGE,oCCxkCJ,CDmlCI,yFACE,gCC/kCN,CD2lCM,6LACE,gCCnlCR,CDylCI,6CAGE,gCCxlCN,CDkmCM,oJAEE,gCChmCR,CDomCQ,4KAEE,gCClmCV,CDwmCM,6EACE,4BAvFiB,CAwFjB,4BCtmCR,CD2mCQ,4KACE,4BCzmCV,CD4mCQ,oNACE,4BC1mCV,CDgnCE,gDACE,2BC7mCJ,CDsnCE,yCACE,8GAIA,qHCtnCJ,CDgoCE,uCACE,8GC7nCJ,CD6pCI,kGAGE,gCC5pCN,CDkqCI,oBACE,uBACE,eChqCN,CACF,CDmqCI,qEAIE,qBCnqCN,CDsqCI,gCAGE,iCACA,UCtqCN,CDyqCI,+HAGE,yBACA,UCvqCN,CD0qCI,4CACE,6BACA,aCxqCN,CD2qCI,uDACE,qBCzqCN,CD4qCI,sDACE,aC1qCN,CD8qCE,8CACE,qBC3qCJ,CD8qCE,kCACE,iCC3qCJ,CD8qCE,wGAGE,gCC3qCJ,CD+sCE,uBAYI,aCvtCN,CD6uCE,iCAEE,uCC1uCJ,CD8uCI,+FAEE,oCAVY,CAWZ,kBC3uCN,CD+uCE,6BACE,qBC5uCJ,CD8uCI,+DACE,qBC5uCN,CDgvCE,mCACE,4BC7uCJ,CDgvCE,uEACE,4BC7uCJ,CDivCE,gGAEE,mBACA,eC9uCJ,CD0xCM,grBACE,qCCnxCR,CDwwCE,kFACE,wBCtwCJ,CDqwCE,gIACE,qBCnwCJ,CD4wCM,wqBACE,qCCtwCR,CD2vCE,gFACE,wBCzvCJ,CDwvCE,4HACE,gCCtvCJ,CD+vCM,wpBACE,oCCzvCR,CD8uCE,4EACE,wBC5uCJ,CD2uCE,oHACE,qBCzuCJ,CDkvCM,wwBACE,qCC5uCR,CDovCE,8VACE,wBClvCJ,CDsvCE,sNACE,UCpvCJ,CDsvCI,0RACE,wBCpvCN,CDyvCE,oJACE,iBCvvCJ,CD0vCE,4NACE,+BCxvCJ,CD6vCE,sHACE,oCC3vCJ,CDytCM,gwBACE,qCCntCR,CD2tCE,wVACE,wBCztCJ,CD6tCE,kNACE,qBC3tCJ,CD6tCI,sRACE,oBC3tCN,CDguCE,kJACE,4BC9tCJ,CDiuCE,0NACE,2BC/tCJ,CDouCE,oHACE,gCCluCJ,CDgsCM,gvBACE,oCC1rCR,CDksCE,4UACE,wBChsCJ,CDosCE,0MACE,UClsCJ,CDosCI,8QACE,wBClsCN,CDusCE,8IACE,iBCrsCJ,CDwsCE,sNACE,+BCtsCJ,CD2sCE,gHACE,oCCzsCJ,CDgwCE,aACE,mBACA,qBC7vCJ,CD+vCI,yBAnCF,mBACA,UCztCF,CD+vCI,wBAvCF,mBACA,qBCrtCF,CD+vCI,sBA3CF,mBACA,UCjtCF,CDqtCE,4HAGE,6BCntCJ,CDstCE,4MAKE,aCptCJ,CDutCE,gCACE,wBCrtCJ,CDixCE,aACE,4BC9wCJ,CD6+DE,UACE,eC1+DJ,CD6+DE,qCAEE,qBC1+DJ,CDgyCE,yBAGE,yBACA,mBAxrHF,kGC05EF,CDmyCE,4BACE,aChyCJ,CC93FI,+BACI,aD65FR,CC15FI,qBACI,wBD65FR,CC35FI,sBACI,aD85FR,CEz6FI,yBACI,aFs+FR,CGp+FI,GACI,aH6/FR,CG3/FI,gBACI,yBACA,sBACA,wBH8/FR,CG5/FI,sBACI,qBH+/FR,CI1gGI,oCACI,aJ6gGR,CDpaE,oBACE,gCCuaJ,CDlaE,+HAGE,qBCqaJ,CDlaE,2BACE,qBCqaJ,CDlaE,yCACE,0BCqaJ,CDlaE,yBACE,qBCqaJ,CDlaE,gCACE,sBACA,wBCqaJ,CDlaE,6FACE,qBCqaJ,CD/ZI,iWACE,gCCoaN,CDhaE,0DAGE,4BCiaJ,CD9ZE,sFAII,4BC8ZN,CD7eE,4BACE,yBACA,UCgfJ,CD7eE,wDAII,mCC6eN,CDpeE,oDACE,+BCueJ,CD9ZE,wBAxsEA,kGA0sEE,sBACA,qBCiaJ,CDhgBE,+DACE,yBACA,qBCkgBJ,CD/fE,2FAII,oCC8fN,CDrfE,uFACE,0CCufJ,CD1gBE,6DACE,yBACA,UC4gBJ,CDzgBE,yFAII,mCCwgBN,CD/fE,qFACE,+BCigBJ,CD1aE,8BAttEA,iFCooFF,CD1aE,8BACE,aC6aJ,CD3aI,yCACE,aC6aN,CD1aI,uCACE,aC4aN,CD7tDE,iCAII,+BC6tDN,CD/nDE,yBACE,qBCioDJ,CDznDI,4MACE,0BC8nDN,CD3nDI,oCACE,2BACA,qBC6nDN,CD1nDI,6CACE,qBC4nDN,CDxnDE,6EACE,aC0nDJ,CDvnDE,4EACE,aCynDJ,CDtnDE,0EACE,aCwnDJ,CDpmDE,iCACE,qBCsmDJ,CDnmDE,wDACE,qBCqmDJ,CD1kDE,kCACE,qBC4kDJ,CD1kDI,wCACE,aC4kDN,CDxkDE,2CACE,aC0kDJ,CDvkDE,oHAEE,kBCykDJ,CDjkDE,4MAIE,kBCmkDJ,CDhkDE,8GAEE,kBCkkDJ,CD7jDI,oJACE,kBCgkDN,CDqwDI,+BAj9IF,iFC+sFF,CDkwDI,+BAj9IF,gGCktFF,CD+vDI,+BAj9IF,gGCqtFF,CD4vDI,+BAj9IF,gGCwtFF,CDyvDI,+BAj9IF,iGC2tFF,CDsvDI,+BAj9IF,iGC8tFF,CDmvDI,+BAj9IF,kGCiuFF,CDgvDI,+BAj9IF,sGCouFF,CD6uDI,+BAj9IF,sGCuuFF,CD0uDI,+BAj9IF,sGC0uFF,CDuuDI,gCAj9IF,uGC6uFF,CDouDI,gCAj9IF,uGCgvFF,CDiuDI,gCAj9IF,uGCmvFF,CD8tDI,gCAj9IF,uGCsvFF,CD2tDI,gCAj9IF,uGCyvFF,CDwtDI,gCAj9IF,uGC4vFF,CDqtDI,gCAj9IF,wGC+vFF,CDktDI,gCAj9IF,wGCkwFF,CD+sDI,gCAj9IF,wGCqwFF,CD4sDI,gCAj9IF,wGCwwFF,CDysDI,gCAj9IF,yGC2wFF,CDssDI,gCAj9IF,yGC8wFF,CDmsDI,gCAj9IF,yGCixFF,CDgsDI,gCAj9IF,yGCoxFF,CD6rDI,gCAj9IF,yGCuxFF,CDksDE,iEAIE,yBACA,qBCnsDJ,CDt+CE,qCAEE,gBACA,qBC2+CJ,CDhxFE,mEAnBA,iGCsyFF,CDv+CI,2FACE,eCy+CN,CDv+CM,qHACE,qBCy+CR,CDh4CE,gCACE,sBACA,kBCk4CJ,CD9mGI,0DA+uDE,kBACA,eCk4CN,CD73CI,kDACE,mBACA,qBCg4CN,CD33CI,gDACE,WACA,kBC63CN,CDz3CE,wBACE,iBC23CJ,CDv3CI,kDACE,YCy3CN,CDp3CI,oDAWI,mBAMF,qBCu2CN,CDn2CE,gCACE,kBACA,kBACA,qBACA,kBACA,qCACA,oBACA,gBACA,mBACA,uBACA,mBCq2CJ,CDl2CE,6GAEE,eCo2CJ,CD/1CE,iDAEE,cCg2CJ,CD9/CE,iDACE,UANmB,CAOnB,WAPmB,CAQnB,gBCggDJ,CD5/CI,iEACE,QC8/CN,CDz/CI,iEACE,WC2/CN,CDt/CI,kEACE,UCw/CN,CDn/CI,4EACE,UACA,WCq/CN,CDh/CI,iEACE,WCk/CN,CD7+CI,2EACE,WACA,UC++CN,CDz+CM,oFACE,SC2+CR,CDt+CM,8FACE,UACA,UCw+CR,CDn+CM,mFACE,UCq+CR,CDh+CM,6FACE,WACA,SCk+CR,CDriDE,kDACE,UAPqB,CAQrB,WARqB,CASrB,gBCuiDJ,CDniDI,kEACE,SCqiDN,CDhiDI,kEACE,YCkiDN,CD7hDI,mEACE,UC+hDN,CD1hDI,6EACE,UACA,WC4hDN,CDvhDI,kEACE,WCyhDN,CDphDI,4EACE,WACA,UCshDN,CDhhDM,qFACE,UCkhDR,CD7gDM,+FACE,UACA,WC+gDR,CD1gDM,oFACE,WC4gDR,CDvgDM,8FACE,WACA,UCygDR,CD5kDE,iDACE,UALmB,CAMnB,WANmB,CAOnB,gBC8kDJ,CD1kDI,iEACE,SC4kDN,CDvkDI,iEACE,YCykDN,CDpkDI,kEACE,UCskDN,CDjkDI,4EACE,UACA,WCmkDN,CD9jDI,iEACE,WCgkDN,CD3jDI,2EACE,WACA,UC6jDN,CDvjDM,oFACE,UCyjDR,CDpjDM,8FACE,UACA,WCsjDR,CDjjDM,mFACE,WCmjDR,CD9iDM,6FACE,WACA,UCgjDR,CD96CE,yCAjiDA,yGAmiDE,gBACA,qBCg7CJ,CD30CE,wFAKE,cACA,sBCy0CJ,CDx2CE,4HACE,aC02CJ,CDx2CE,yHACE,aC02CJ,CDx2CE,mHACE,aC02CJ,CDt2CI,slBAEE,qBCu2CN,CD16CE,0MACE,wBC46CJ,CDz6CE,uMACE,wBC26CJ,CDx6CE,iMACE,wBC06CJ,CDv6CE,oMACE,4BCy6CJ,CDz1CI,oJACE,UAtGuB,CAuGvB,6BC21CN,CDv1CE,uCACE,eCy1CJ,CDp1CE,iDACE,4BCs1CJ,CDn1CE,+GAEE,sBACA,qBCo1CJ,CD34CE,0TACE,qBCg5CJ,CD94CE,mJACE,UCg5CJ,CD54CI,owBAEE,qBC64CN,CD15CE,+JACE,wBC45CJ,CD15CE,2JACE,wBC45CJ,CD15CE,mJACE,wBC45CJ,CDx5CI,owBAEE,gCCy5CN,CDv7CE,0dAfA,+BC48CF,CDz7CE,mOAnBA,mCC+8CF,CD5gGE,2HAnBA,iFCkiGF,CD/gGE,8DAnBA,gGCqiGF,CDlhGE,qFAnBA,sGCwiGF,CDrhGE,wEAnBA,iFC2iGF,CDxhGE,6GAnBA,kGC8iGF,CD3hGE,2JAnBA,uGCijGF,CD9hGE,iIAnBA,iFCojGF,CDj1CE,iFAnuDA,gGCwjGF,CDh1CE,2IAEE,eCk1CJ,CD/0CE,gCACE,qBCi1CJ,CD/0CI,iEACE,gCCi1CN,CD70CE,oDACE,sBACA,eC+0CJ,CD70CI,qFACE,qBC+0CN,CD30CE,gGACE,qCC60CJ,CD10CE,0GACE,iBACA,sCC40CJ,CDx0CI,2HACE,iBACA,kBACA,oCC00CN,CDt0CE,wCACE,yBACA,qBCw0CJ,CDt0CI,8EACE,qBCw0CN,CDp0CE,yCACE,sBACA,qBCs0CJ,CDp0CI,+EACE,eCs0CN,CDn0CI,mEACE,wBCq0CN,CDj0CE,2IAEE,gCCm0CJ,CD/yCE,uBAEE,gBACA,qBCgzCJ,CD3lGE,qDAnBA,gGCinGF,CD9lGE,mEAnBA,iFConGF,CD9yCE,gCACE,qBCgzCJ,CD/vCE,iCACE,4BCiwCJ,CD9vCE,qCACE,YCgwCJ,CD7vCE,0CAGE,wBC6vCJ,CD1vCE,qCACE,wBC4vCJ,CDxvCI,sJACE,wBC0vCN,CDvvCI,oJACE,wBCyvCN,CDtvCI,gJACE,wBCwvCN,CDjvCM,0KACE,wBCmvCR,CD9uCM,mFACE,oBCgvCR,CD5uCI,wDACE,qBC8uCN,CDxuCE,+CACE,qBC0uCJ,CDruCI,6LACE,kBCwuCN,CDruCI,2LACE,kBCwuCN,CDruCI,uLACE,kBCwuCN,CDtqCE,yCA1CA,wBAuCwB,CAtCxB,qBCmtCF,CDjtCE,0DACE,qBAoCsB,CAnCtB,UCmtCJ,CD1qCM,wEAlgEJ,gGC+qGF,CDzqCM,wFACE,WC2qCR,CDvqCI,2DACE,UCyqCN,CDtqCI,+CACE,eCwqCN,CDnqCI,uEAjEF,wBAwBgE,CAvBhE,qBCuuCF,CDruCE,wFACE,qBAoBuB,CAnBvB,UCuuCJ,CDltCE,2FATA,+BC8tCF,CD1qCI,oEArEF,wBAwBgE,CAvBhE,UCkvCF,CDhvCE,qFACE,UAoBuB,CAnBvB,UCkvCJ,CD7tCE,wFATA,mCCyuCF,CDjrCI,sEAzEF,wBAwBgE,CAvBhE,qBC6vCF,CD3vCE,uFACE,qBAoBuB,CAnBvB,UC6vCJ,CDxuCE,0FATA,+BCovCF,CDlqCE,wBACE,eCoqCJ,CDjqCE,yRAIE,kBCmqCJ,CDhqCE,sKAEE,mCCkqCJ,CD/pCE,8BACE,qBCiqCJ,CD9pCE,qDACE,qBCgqCJ,CDl+BE,mCA1wEA,0GA4wEE,gBACA,qBCsjCJ,CDwrCE,0BACE,gCCtrCJ,CDyrCE,mCACE,kCCvrCJ,CDziCE,kCAEE,gBACA,qBC0iCJ,CD1zGE,gEAnBA,gGCg1GF,CD1iCE,6BACE,gCC4iCJ,CDriCM,0UACE,0BCuiCR,CDhiCE,oBACE,iHAEE,eCiiCJ,CACF,CD9hCE,+CACE,qBCgiCJ,CD7hCE,iGAEE,qBC+hCJ,CD5hCE,6DACE,qBC8hCJ,CD5hCI,oMAEE,aC8hCN,CD4zBE,0DACE,oBCvzBJ,CD0zBE,+DACE,aCxzBJ,CD0zBI,0EACE,aCxzBN,CD2zBI,wEACE,aCzzBN,CD6zBE,0DACE,aC3zBJ,CD8zBE,oCACE,gCC5zBJ,CDg0BI,gEACE,wBC9zBN,CDg0BM,2EACE,wBC9zBR,CDi0BM,yEACE,wBC/zBR,CDq0BI,yHACE,aCn0BN,CDs0BI,oIACE,aCp0BN,CDm1BM,2YAEE,aC30BR,CD+0BI,iKAEE,wBC70BN,CDi1BE,wBACE,aC/0BJ,CDsbI,8HACE,qBCjbN,CDobI,yEACE,gCClbN,CDqbI,iGAx5CF,4FACA,yBACA,0BCs+BF,CDotBI,2EACE,gCCltBN,CDqtBI,mGAhsDF,4FACA,yBACA,0BC8+BF,CDyTI,kEACE,gCCvTN,CD0TI,0FACE,gCCxTN,CD2TI,8EACE,gCCzTN,CD6TM,2FACE,qBC3TR,CD8TM,sGACE,4BC5TR,CDmkBI,wEACE,qBCjkBN,CDokBI,8EACE,qBClkBN,CDskBM,0FACE,aCpkBR,CDukBM,qGACE,aCrkBR,CD+kBM,+NACE,aC1kBR,CD+kBM,8FACE,qBC7kBR,CDglBM,gGACE,qBC9kBR,CD/iCI,mCACE,aCijCN,CD9iCI,kCACE,aCgjCN,CD7iCI,gCACE,aC+iCN,CD/9BE,gFACE,qBCi+BJ,CD99BE,iJAEE,qBCg+BJ,CD79BE,gCACE,mBC+9BJ,CDlhCE,uDAsDI,qBC+9BN,CDrhCE,6CAsDI,qBC+9BN,CDjhCE,kDAkDI,qBCk+BN,CDhhCE,2DA8CI,qBCq+BN,CD/gCE,sDA0CI,qBCw+BN,CDr9BE,4CACE,mBCu9BJ,CDp9BE,kGAEE,mBCs9BJ,CDn9BE,uGACE,aCq9BJ,CDn7BI,wFACE,qBCw7BN,CDr7BI,2CACE,qBCu7BN,CDn7BE,qCACE,qBCq7BJ,CD/6BI,8QACE,0BCq7BN,CDh7BI,sJACE,0BCk7BN,CDj3BE,6BAEE,eCk3BJ,CD1gHE,2DAnBA,iGCgiHF,CDl3BE,4BACE,uBACA,qBCo3BJ,CDj3BM,kFACE,qBCm3BR,CD92BE,iGAEE,qBCg3BJ,CDz2BI,2OACE,0BC82BN,CDt1BE,4BACE,eCw1BJ,CDr1BE,sFAEE,qBCu1BJ,CDp1BE,4EAEE,qCACA,sCCs1BJ,CDn1BE,mEAEE,oCCq1BJ,CDj1BI,2PAIE,4BCm1BN,CD3zBE,0CACE,YC6zBJ,CD1zBE,sCACE,wBC4zBJ,CDzzBE,0CACE,wBC2zBJ,CDvzBI,uEACE,YCyzBN,CDtzBI,mEACE,wBCwzBN,CDrzBI,uEACE,wBCuzBN,CDlzBI,qEACE,YCozBN,CDjzBI,iEACE,wBCmzBN,CDhzBI,qEACE,wBCkzBN,CDhyBI,2EACE,cCkyBN,CD/xBI,iGACE,cCiyBN,CD9xBI,6FACE,cCgyBN,CDjwBE,qCACE,4BCmwBJ,CDvxBE,qFACE,oBCyxBJ,CDtxBE,+VAIE,wBCsxBJ,CD9xBE,oFACE,oBCgyBJ,CD7xBE,2VAIE,wBC6xBJ,CDryBE,kFACE,oBCuyBJ,CDpyBE,mVAIE,wBCoyBJ,CDpwBM,sKAEE,4BCswBR,CDnwBM,kKAEE,gCCqwBR,CDlwBM,2EACE,qBCowBR,CD9vBI,mDACE,qBCgwBN,CDvuBE,+BACE,qBCyuBJ,CDtuBE,qCACE,qBCwuBJ,CDruBE,oDACE,qBCuuBJ,CDpuBE,+BACE,qBCsuBJ,CDnuBE,+BACE,eCquBJ,CD7oHE,6DAnBA,iGCmqHF,CDruBI,kFACE,0BCuuBN,CDjuBM,uEACE,aCmuBR,CDhuBM,sEACE,aCkuBR,CD1tBI,kJACE,aC+tBN,CD5tBI,+EACE,qBC8tBN,CD3rBE,mCACE,wBALmC,CAMnC,qBC6rBJ,CD1rBE,yBACE,qBAXwB,CAYxB,qBC4rBJ,CD1rBI,yCACE,qBC4rBN,CDzrBI,+CAvgGF,wGCmsHF,CDrrBE,8BACE,sCCurBJ,CD/qBE,qFACE,qCAhCmB,CAiCnB,iBCqrBJ,CDnrBI,uDACE,iBACA,sCCqrBN,CDjrBE,mDAQI,+BC4qBN,CDxpBI,mEACE,wBC0pBN,CDvpBI,iEAGE,oCCupBN,CDppBI,+DAGE,wBCopBN,CDjqBI,+EACE,wBCmqBN,CDhqBI,6EAGE,qCCgqBN,CD7pBI,2EAGE,wBC6pBN,CD1qBI,4EACE,wBC4qBN,CDzqBI,0EAGE,oCCyqBN,CDtqBI,wEAGE,wBCsqBN,CDloBI,qEAGE,qBCkoBN,CD9nBE,qCArnGA,iGAunGE,wBCgoBJ,CD7nBE,mCACE,gCC+nBJ,CDrlBE,0CACE,gCCulBJ,CDnnBE,+IAGE,wBCqnBJ,CDlnBE,uDACE,qBConBJ,CD3nBE,4IAGE,wBC6nBJ,CD1nBE,sDACE,qBC4nBJ,CDnoBE,sIAGE,wBCqoBJ,CDloBE,oDACE,UCooBJ,CDhmBE,oCAGE,mCCgmBJ,CDrlBI,mHACE,gCCwlBN,CD5kBM,iPACE,gCCmlBR,CD7kBI,0DAGE,gCC6kBN,CDnkBM,8KAEE,gCCqkBR,CDjkBQ,sMAEE,gCCmkBV,CD7jBM,0FACE,4BAvFiB,CAwFjB,4BC+jBR,CD1jBQ,sMACE,4BC4jBV,CDzjBQ,8OACE,4BC2jBV,CDrjBE,6DACE,2BCujBJ,CD9iBE,sDACE,8GAIA,qHC6iBJ,CDniBE,oDACE,8GCqiBJ,CDrgBI,yIAGE,gCCqgBN,CD/fI,oBACE,oCACE,eCigBN,CACF,CD9fI,+FAIE,qBC8fN,CD3fI,6CAGE,iCACA,qBC2fN,CDxfI,sKAGE,yBACA,qBC0fN,CDvfI,yDACE,6BACA,aCyfN,CDtfI,oEACE,qBCwfN,CDrfI,mEACE,aCufN,CDnfE,wEACE,qBCqfJ,CDlfE,+CACE,iCCofJ,CDjfE,+IAGE,gCCmfJ,CD/cE,oCAYI,aCscN,CDhbE,2DAEE,uCCkbJ,CD9aI,yHAEE,oCAVY,CAWZ,kBCgbN,CD5aE,uDACE,qBC8aJ,CD5aI,yFACE,qBC8aN,CD1aE,gDACE,4BC4aJ,CDzaE,oFACE,4BC2aJ,CDvaE,0HAEE,mBACA,eCyaJ,CD7XM,wxBACE,qCCmYR,CD9YE,4GACE,wBCgZJ,CDjZE,0JACE,gCCmZJ,CD1YM,gxBACE,qCCgZR,CD3ZE,0GACE,wBC6ZJ,CD9ZE,sJACE,gCCgaJ,CDvZM,gwBACE,qCC6ZR,CDxaE,sGACE,wBC0aJ,CD3aE,8IACE,qBC6aJ,CDpaM,g3BACE,qCC0aR,CDlaE,4aACE,wBCoaJ,CDhaE,0QACE,qBCkaJ,CDhaI,8UACE,oBCkaN,CD7ZE,8KACE,4BC+ZJ,CD5ZE,sPACE,2BC8ZJ,CDzZE,gJACE,gCC2ZJ,CD7bM,w2BACE,qCCmcR,CD3bE,saACE,wBC6bJ,CDzbE,sQACE,qBC2bJ,CDzbI,0UACE,oBC2bN,CDtbE,4KACE,4BCwbJ,CDrbE,oPACE,2BCubJ,CDlbE,8IACE,gCCobJ,CDtdM,w1BACE,qCC4dR,CDpdE,0ZACE,wBCsdJ,CDldE,8PACE,UCodJ,CDldI,kUACE,wBCodN,CD/cE,wKACE,iBCidJ,CD9cE,gPACE,+BCgdJ,CD3cE,0IACE,oCC6cJ,CDtZE,0BACE,mBACA,qBCwZJ,CDtZI,sCAnCF,mBACA,qBC4bF,CDtZI,qCAvCF,mBACA,qBCgcF,CDtZI,mCA3CF,mBACA,UCocF,CDhcE,mKAGE,6BCkcJ,CD/bE,6QAKE,aCicJ,CD9bE,6CACE,wBCgcJ,CDpYE,0BACE,4BCsYJ,CDyVE,uBACE,eCvVJ,CD0VE,+DAEE,qBCxVJ,CDlXE,sCAGE,yBACA,mBAxrHF,kGC2iIF,CD9WE,yCACE,aCgXJ,CC9gJI,yDACI,aDsiJR,CCniJI,kCACI,wBDqiJR,CCniJI,mCACI,aDqiJR,CEhjJI,sCACI,aF+lJR,CG7lJI,gBACI,aHgnJR,CG9mJI,6BACI,yBACA,sBACA,wBHgnJR,CG9mJI,mCACI,qBHgnJR,CI3nJI,iDACI,aJ6nJR,CDphEE,iCACE,gCCshEJ,CDjhEE,sKAGE,qBCmhEJ,CDhhEE,wCACE,qBCkhEJ,CD/gEE,sDACE,0BCihEJ,CD9gEE,sCACE,qBCghEJ,CD7gEE,6CACE,sBACA,wBC+gEJ,CD5gEE,0GACE,qBC8gEJ,CDxgEI,wYACE,gCC4gEN,CDxgEE,uEAGE,4BCwgEJ,CDrgEE,mGAII,4BCogEN,CDnlEE,yCACE,yBACA,qBCqlEJ,CDllEE,qEAII,oCCilEN,CDxkEE,iEACE,0CC0kEJ,CDjgEE,qCAxsEA,kGA0sEE,sBACA,qBCmgEJ,CDlmEE,4EACE,yBACA,qBComEJ,CDjmEE,wGAII,mCCgmEN,CDvlEE,oGACE,0CCylEJ,CD5mEE,0EACE,yBACA,UC8mEJ,CD3mEE,sGAII,mCC0mEN,CDjmEE,kGACE,+BCmmEJ,CD5gEE,2CAttEA,iFCquIF,CD3gEE,2CACE,aC6gEJ,CD3gEI,sDACE,aC6gEN,CD1gEI,oDACE,aC4gEN,CD7zGE,kCAII,+BC6zGN,CD/tGE,0BACE,qBCiuGJ,CDztGI,+MACE,0BC8tGN,CD3tGI,qCACE,2BACA,qBC6tGN,CD1tGI,8CACE,qBC4tGN,CDptGE,2JACE,aCytGJ,CDttGE,2EACE,aCwtGJ,CDpsGE,kCACE,qBCssGJ,CDnsGE,yDACE,qBCqsGJ,CD1qGE,mCACE,qBC4qGJ,CD1qGI,yCACE,aC4qGN,CDxqGE,4CACE,aC0qGJ,CD7pGE,sUAIE,kBCmqGJ,CDhqGE,gHAEE,kBCkqGJ,CD7pGI,sJACE,kBCgqGN,CDqKI,gCAj9IF,iFC+yIF,CDkKI,gCAj9IF,gGCkzIF,CD+JI,gCAj9IF,gGCqzIF,CD4JI,gCAj9IF,gGCwzIF,CDyJI,gCAj9IF,iGC2zIF,CDsJI,gCAj9IF,iGC8zIF,CDmJI,gCAj9IF,kGCi0IF,CDgJI,gCAj9IF,sGCo0IF,CD6II,gCAj9IF,sGCu0IF,CD0II,gCAj9IF,sGC00IF,CDuII,iCAj9IF,uGC60IF,CDoII,iCAj9IF,uGCg1IF,CDiII,iCAj9IF,uGCm1IF,CD8HI,iCAj9IF,uGCs1IF,CD2HI,iCAj9IF,uGCy1IF,CDwHI,iCAj9IF,uGC41IF,CDqHI,iCAj9IF,wGC+1IF,CDkHI,iCAj9IF,wGCk2IF,CD+GI,iCAj9IF,wGCq2IF,CD4GI,iCAj9IF,wGCw2IF,CDyGI,iCAj9IF,yGC22IF,CDsGI,iCAj9IF,yGC82IF,CDmGI,iCAj9IF,yGCi3IF,CDgGI,iCAj9IF,yGCo3IF,CD6FI,iCAj9IF,yGCu3IF,CDkGE,mEAIE,yBACA,qBCnGJ,CDwGI,yBACE,YCtGN,CDzkGE,sCAEE,gBACA,qBC2kGJ,CDh3IE,oEAnBA,iGCs4IF,CDvkGI,4FACE,eCykGN,CDvkGM,sHACE,qBCykGR,CDh+FE,iCACE,WACA,kBCk+FJ,CD9sJI,2DA+uDE,kBACA,eCk+FN,CD79FI,mDACE,mBACA,UCg+FN,CD39FI,iDACE,WACA,kBC69FN,CDz9FE,yBACE,iBC29FJ,CDv9FI,mDACE,YCy9FN,CDp9FI,qDAWI,mBAMF,qBCu8FN,CDn8FE,iCACE,kBACA,kBACA,qBACA,kBACA,qCACA,oBACA,gBACA,mBACA,uBACA,mBCq8FJ,CDl8FE,+GAEE,eCo8FJ,CD/7FE,kDAEE,cCg8FJ,CD9lGE,kDACE,UANmB,CAOnB,WAPmB,CAQnB,gBCgmGJ,CD5lGI,kEACE,QC8lGN,CDzlGI,kEACE,WC2lGN,CDtlGI,mEACE,UCwlGN,CDnlGI,6EACE,UACA,WCqlGN,CDhlGI,kEACE,WCklGN,CD7kGI,4EACE,WACA,UC+kGN,CDzkGM,qFACE,SC2kGR,CDtkGM,+FACE,UACA,UCwkGR,CDnkGM,oFACE,UCqkGR,CDhkGM,8FACE,WACA,SCkkGR,CDroGE,mDACE,UAPqB,CAQrB,WARqB,CASrB,gBCuoGJ,CDnoGI,mEACE,SCqoGN,CDhoGI,mEACE,YCkoGN,CD7nGI,oEACE,UC+nGN,CD1nGI,8EACE,UACA,WC4nGN,CDvnGI,mEACE,WCynGN,CDpnGI,6EACE,WACA,UCsnGN,CDhnGM,sFACE,UCknGR,CD7mGM,gGACE,UACA,WC+mGR,CD1mGM,qFACE,WC4mGR,CDvmGM,+FACE,WACA,UCymGR,CD5qGE,kDACE,UALmB,CAMnB,WANmB,CAOnB,gBC8qGJ,CD1qGI,kEACE,SC4qGN,CDvqGI,kEACE,YCyqGN,CDpqGI,mEACE,UCsqGN,CDjqGI,6EACE,UACA,WCmqGN,CD9pGI,kEACE,WCgqGN,CD3pGI,4EACE,WACA,UC6pGN,CDvpGM,qFACE,UCypGR,CDppGM,+FACE,UACA,WCspGR,CDjpGM,oFACE,WCmpGR,CD9oGM,8FACE,WACA,UCgpGR,CD9gGE,0CAjiDA,yGAmiDE,gBACA,qBCghGJ,CD36FE,2FAKE,cACA,sBCy6FJ,CDr8FE,2PACE,aC08FJ,CDx8FE,sHACE,aC08FJ,CDt8FI,kmBAEE,qBCu8FN,CDtgGE,uZACE,wBC2gGJ,CDxgGE,oMACE,wBC0gGJ,CDvgGE,uMACE,4BCygGJ,CDz7FI,uJACE,UAtGuB,CAuGvB,6BC27FN,CDv7FE,wCACE,eCy7FJ,CDp7FE,kDACE,4BCs7FJ,CDn7FE,mHAEE,sBACA,qBCo7FJ,CDx+FE,ydACE,UCg/FJ,CD5+FI,oxBAEE,qBC6+FN,CDv/FE,kUACE,wBC4/FJ,CD1/FE,uJACE,wBC4/FJ,CDx/FI,oxBAEE,gCCy/FN,CDnhGE,ysBAnBA,mCC+iGF,CD5mJE,6HAnBA,iFCkoJF,CD/mJE,+DAnBA,gGCqoJF,CDlnJE,sFAnBA,sGCwoJF,CDrnJE,yEAnBA,iFC2oJF,CDxnJE,+GAnBA,kGC8oJF,CD3nJE,6JAnBA,uGCipJF,CD9nJE,mIAnBA,iFCopJF,CDj7FE,mFAnuDA,gGCwpJF,CDh7FE,6IAEE,eCk7FJ,CD/6FE,iCACE,qBCi7FJ,CD/6FI,kEACE,gCCi7FN,CD76FE,qDACE,sBACA,eC+6FJ,CD76FI,sFACE,qBC+6FN,CD36FE,iGACE,qCC66FJ,CD16FE,2GACE,iBACA,sCC46FJ,CDx6FI,4HACE,iBACA,kBACA,oCC06FN,CDt6FE,yCACE,yBACA,qBCw6FJ,CDt6FI,+EACE,qBCw6FN,CDp6FE,0CACE,sBACA,qBCs6FJ,CDp6FI,gFACE,eCs6FN,CDn6FI,oEACE,wBCq6FN,CDj6FE,6IAEE,gCCm6FJ,CD/4FE,wBAEE,gBACA,qBCg5FJ,CD3rJE,sDAnBA,gGCitJF,CD9rJE,oEAnBA,iFCotJF,CD94FE,iCACE,qBCg5FJ,CD/1FE,kCACE,4BCi2FJ,CD91FE,sCACE,YCg2FJ,CD71FE,2CAGE,wBC61FJ,CD11FE,sCACE,wBC41FJ,CDp1FI,8SACE,wBCy1FN,CDt1FI,kJACE,wBCw1FN,CDj1FM,4KACE,wBCm1FR,CD90FM,oFACE,oBCg1FR,CD50FI,yDACE,qBC80FN,CDx0FE,gDACE,qBC00FJ,CDj0FI,4XACE,kBCw0FN,CDr0FI,yLACE,kBCw0FN,CDtwFE,0CA1CA,wBAuCwB,CAtCxB,qBCmzFF,CDjzFE,2DACE,qBAoCsB,CAnCtB,UCmzFJ,CD1wFM,yEAlgEJ,gGC+wJF,CDzwFM,yFACE,WC2wFR,CDvwFI,4DACE,UCywFN,CDtwFI,gDACE,eCwwFN,CDnwFI,wEAjEF,wBAwBgE,CAvBhE,UCu0FF,CDr0FE,yFACE,UAoBuB,CAnBvB,UCu0FJ,CDlzFE,4FATA,mCC8zFF,CD1wFI,qEArEF,wBAwBgE,CAvBhE,UCk1FF,CDh1FE,sFACE,UAoBuB,CAnBvB,UCk1FJ,CD7zFE,yFATA,mCCy0FF,CDjxFI,uEAzEF,wBAwBgE,CAvBhE,UC61FF,CD31FE,wFACE,UAoBuB,CAnBvB,UC61FJ,CDx0FE,2FATA,mCCo1FF,CDlwFE,yBACE,eCowFJ,CDjwFE,mSAIE,kBCmwFJ,CDhwFE,4KAEE,mCCkwFJ,CD/vFE,+BACE,qBCiwFJ,CD9vFE,uDACE,qBCgwFJ,CDlkFE,oCA1wEA,0GA4wEE,gBACA,qBCspFJ,CDxaE,2BACE,gCC0aJ,CDvaE,oCACE,kCCyaJ,CDzoFE,mCAEE,gBACA,qBC0oFJ,CD15JE,iEAnBA,gGCg7JF,CD1oFE,8BACE,gCC4oFJ,CDroFM,6UACE,0BCuoFR,CDhoFE,oBACE,kHAEE,eCioFJ,CACF,CD9nFE,gDACE,qBCgoFJ,CD7nFE,mGAEE,qBC+nFJ,CD5nFE,8DACE,qBC8nFJ,CD5nFI,sMAEE,aC8nFN,CDpyBE,4DACE,oBCyyBJ,CDnyBI,2IACE,aCwyBN,CDryBI,yEACE,aCuyBN,CDnyBE,2DACE,aCqyBJ,CDlyBE,qCACE,gCCoyBJ,CD7xBM,6IACE,wBCkyBR,CD/xBM,0EACE,wBCiyBR,CDvxBI,+PACE,aC4xBN,CD7wBM,+YAEE,aCqxBR,CDjxBI,mKAEE,wBCmxBN,CD/wBE,yBACE,aCixBJ,CD1qCI,gIACE,qBC+qCN,CD5qCI,0EACE,gCC8qCN,CD3qCI,kGAx5CF,4FACA,yBACA,0BCskFF,CD54BI,4EACE,gCC84BN,CD34BI,oGAhsDF,4FACA,yBACA,0BC8kFF,CDvyCI,mEACE,gCCyyCN,CDtyCI,2FACE,gCCwyCN,CDryCI,+EACE,gCCuyCN,CDnyCM,4FACE,qBCqyCR,CDlyCM,uGACE,4BCoyCR,CD7hCI,yEACE,qBC+hCN,CD5hCI,+EACE,qBC8hCN,CDthCM,iMACE,aC2hCR,CDjhCM,iOACE,aCshCR,CDjhCM,+FACE,qBCmhCR,CDhhCM,iGACE,qBCkhCR,CD3oFI,uEACE,aCgpFN,CD7oFI,iCACE,aC+oFN,CD/jFE,iFACE,qBCikFJ,CD9jFE,mJAEE,qBCgkFJ,CD7jFE,iCACE,mBC+jFJ,CDlnFE,wDAsDI,qBC+jFN,CDrnFE,8CAsDI,qBC+jFN,CDjnFE,mDAkDI,qBCkkFN,CDhnFE,4DA8CI,qBCqkFN,CD/mFE,uDA0CI,qBCwkFN,CDrjFE,6CACE,mBCujFJ,CDpjFE,oGAEE,mBCsjFJ,CDnjFE,wGACE,aCqjFJ,CDnhFI,0FACE,qBCwhFN,CDrhFI,4CACE,qBCuhFN,CDnhFE,sCACE,qBCqhFJ,CD/gFI,oRACE,0BCqhFN,CDhhFI,yJACE,0BCkhFN,CDj9EE,8BAEE,eCk9EJ,CD1mKE,4DAnBA,iGCgoKF,CDl9EE,6BACE,uBACA,qBCo9EJ,CDj9EM,oFACE,qBCm9ER,CD98EE,mGAEE,qBCg9EJ,CDz8EI,+OACE,0BC88EN,CDt7EE,6BACE,eCw7EJ,CDr7EE,wFAEE,qBCu7EJ,CDp7EE,8EAEE,qCACA,sCCs7EJ,CDn7EE,qEAEE,oCCq7EJ,CDj7EI,+PAIE,4BCm7EN,CD35EE,2CACE,YC65EJ,CD15EE,uCACE,wBC45EJ,CDz5EE,2CACE,wBC25EJ,CDv5EI,wEACE,YCy5EN,CDt5EI,oEACE,wBCw5EN,CDr5EI,wEACE,wBCu5EN,CDl5EI,sEACE,YCo5EN,CDj5EI,kEACE,wBCm5EN,CDh5EI,sEACE,wBCk5EN,CD53EI,gLACE,cCi4EN,CD93EI,+FACE,cCg4EN,CDj2EE,sCACE,4BCm2EJ,CDv3EE,sFACE,oBCy3EJ,CDt3EE,mWAIE,wBCs3EJ,CD93EE,qFACE,oBCg4EJ,CD73EE,+VAIE,wBC63EJ,CDr4EE,mFACE,oBCu4EJ,CDp4EE,uVAIE,wBCo4EJ,CDp2EM,wKAEE,4BCs2ER,CDn2EM,oKAEE,gCCq2ER,CDl2EM,4EACE,qBCo2ER,CD91EI,oDACE,qBCg2EN,CDv0EE,gCACE,qBCy0EJ,CDt0EE,sCACE,qBCw0EJ,CDr0EE,qDACE,qBCu0EJ,CDp0EE,gCACE,qBCs0EJ,CDn0EE,gCACE,eCq0EJ,CD7uKE,8DAnBA,iGCmwKF,CDr0EI,mFACE,0BCu0EN,CD7zEM,+IACE,aCk0ER,CD1zEI,oJACE,aC+zEN,CD5zEI,gFACE,qBC8zEN,CD3xEE,oCACE,wBALmC,CAMnC,qBC6xEJ,CD1xEE,0BACE,qBAXwB,CAYxB,qBC4xEJ,CD1xEI,0CACE,qBC4xEN,CDzxEI,gDAvgGF,wGCmyKF,CDrxEE,+BACE,sCCuxEJ,CD/wEE,uFACE,qCAhCmB,CAiCnB,iBCqxEJ,CDnxEI,wDACE,iBACA,sCCqxEN,CDjxEE,oDAQI,+BC4wEN,CDxvEI,oEACE,wBC0vEN,CDvvEI,kEAGE,oCCuvEN,CD9vEI,gJACE,wBCmwEN,CDhwEI,8EAGE,oCCgwEN,CD7vEI,4EAGE,wBC6vEN,CD1wEI,6EACE,wBC4wEN,CDzwEI,2EAGE,oCCywEN,CDtwEI,yEAGE,wBCswEN,CDluEI,sEAGE,qBCkuEN,CD9tEE,sCArnGA,iGAunGE,wBCguEJ,CD7tEE,oCACE,gCC+tEJ,CDrrEE,2CACE,gCCurEJ,CDntEE,kJAGE,wBCqtEJ,CDltEE,wDACE,UCotEJ,CD3tEE,+IAGE,wBC6tEJ,CD1tEE,uDACE,UC4tEJ,CDnuEE,yIAGE,wBCquEJ,CDluEE,qDACE,UCouEJ,CDhsEE,qCAGE,mCCgsEJ,CDrrEI,qHACE,gCCwrEN,CD5qEM,qPACE,gCCmrER,CD7qEI,2DAGE,gCC6qEN,CDnqEM,gLAEE,gCCqqER,CDjqEQ,wMAEE,gCCmqEV,CD7pEM,2FACE,4BAvFiB,CAwFjB,4BC+pER,CD1pEQ,wMACE,4BC4pEV,CDzpEQ,gPACE,4BC2pEV,CDrpEE,8DACE,2BCupEJ,CD9oEE,uDACE,8GAIA,qHC6oEJ,CDnoEE,qDACE,8GCqoEJ,CDrmEI,4IAGE,gCCqmEN,CD/lEI,oBACE,qCACE,eCimEN,CACF,CD9lEI,iGAIE,qBC8lEN,CD3lEI,8CAGE,iCACA,UC2lEN,CDxlEI,yKAGE,yBACA,UC0lEN,CDvlEI,0DACE,6BACA,aCylEN,CDtlEI,qEACE,qBCwlEN,CDrlEI,oEACE,aCulEN,CDnlEE,0EACE,qBCqlEJ,CDllEE,gDACE,iCColEJ,CDjlEE,kJAGE,gCCmlEJ,CD/iEE,qCAYI,aCsiEN,CDhhEE,6DAEE,uCCkhEJ,CD9gEI,2HAEE,oCAVY,CAWZ,kBCghEN,CD5gEE,yDACE,qBC8gEJ,CD5gEI,2FACE,qBC8gEN,CD1gEE,iDACE,4BC4gEJ,CDzgEE,qFACE,4BC2gEJ,CDvgEE,4HAEE,mBACA,eCygEJ,CD79DM,gyBACE,qCCm+DR,CD9+DE,8GACE,wBCg/DJ,CDj/DE,4JACE,qBCm/DJ,CD1+DM,wxBACE,qCCg/DR,CD3/DE,4GACE,wBC6/DJ,CD9/DE,wJACE,qBCggEJ,CDv/DM,wwBACE,qCC6/DR,CDxgEE,wGACE,wBC0gEJ,CD3gEE,gJACE,qBC6gEJ,CDpgEM,w3BACE,qCC0gER,CDlgEE,kbACE,wBCogEJ,CDhgEE,8QACE,UCkgEJ,CDhgEI,kVACE,wBCkgEN,CD7/DE,gLACE,iBC+/DJ,CD5/DE,wPACE,+BC8/DJ,CDz/DE,kJACE,oCC2/DJ,CD7hEM,g3BACE,qCCmiER,CD3hEE,4aACE,wBC6hEJ,CDzhEE,0QACE,UC2hEJ,CDzhEI,8UACE,wBC2hEN,CDthEE,8KACE,iBCwhEJ,CDrhEE,sPACE,+BCuhEJ,CDlhEE,gJACE,oCCohEJ,CDtjEM,g2BACE,qCC4jER,CDpjEE,gaACE,wBCsjEJ,CDljEE,kQACE,UCojEJ,CDljEI,sUACE,wBCojEN,CD/iEE,0KACE,iBCijEJ,CD9iEE,kPACE,+BCgjEJ,CD3iEE,4IACE,oCC6iEJ,CDt/DE,2BACE,mBACA,qBCw/DJ,CDl/DI,6EAvCF,mBACA,UCgiEF,CDt/DI,oCA3CF,mBACA,UCoiEF,CDhiEE,sKAGE,6BCkiEJ,CD/hEE,kRAKE,aCiiEJ,CD9hEE,8CACE,wBCgiEJ,CDp+DE,2BACE,4BCs+DJ,CDvwCE,wBACE,eCywCJ,CDtwCE,iEAEE,qBCwwCJ,CDl9DE,uCAGE,yBACA,mBAxrHF,kGC2oLF,CD98DE,0CACE,aCg9DJ,CC9mMI,2DACI,aDsoMR,CCnoMI,mCACI,wBDqoMR,CCnoMI,oCACI,aDqoMR,CEhpMI,uCACI,aF+rMR,CG7rMI,iBACI,aHgtMR,CG9sMI,8BACI,yBACA,sBACA,wBHgtMR,CG9sMI,oCACI,qBHgtMR,CI3tMI,kDACI,aJ6tMR,CDpnHE,kCACE,gCCsnHJ,CDjnHE,yKAGE,qBCmnHJ,CDhnHE,yCACE,qBCknHJ,CD/mHE,uDACE,0BCinHJ,CD9mHE,uCACE,qBCgnHJ,CD7mHE,8CACE,sBACA,wBC+mHJ,CD5mHE,2GACE,qBC8mHJ,CDxmHI,2YACE,gCC4mHN,CDxmHE,wEAGE,4BCwmHJ,CDrmHE,oGAII,4BComHN,CDnrHE,0CACE,yBACA,UCqrHJ,CDlrHE,sEAII,mCCirHN,CDxqHE,kEACE,+BC0qHJ,CDjmHE,sCAxsEA,kGA0sEE,sBACA,qBCmmHJ,CDlsHE,6EACE,yBACA,UCosHJ,CDjsHE,yGAII,mCCgsHN,CDvrHE,qGACE,+BCyrHJ,CD5sHE,2EACE,yBACA,UC8sHJ,CD3sHE,uGAII,mCC0sHN,CDjsHE,mGACE,+BCmsHJ,CD5mHE,4CAttEA,iFCq0LF,CDxmHI,mGACE,aC6mHN,CD1mHI,qDACE,aC4mHN,CKvzMA,KACE,iBAAkB,CAClB,oBAAuB,CACvB,OACE,qBAAsB,CACtB,0BAA6B,CAC/B,WACE,YAAe,CACjB,aACE,iBAAoB,CACtB,sDACE,iBAAkB,CAClB,SAAU,CACV,sBAAwB,CACxB,yBAA2B,CAC3B,kBAAmB,CACnB,cAAiB,CACnB,qBACE,iBAAkB,CAClB,KAAM,CACN,QAAS,CACT,OAAQ,CACR,WAAc,CAChB,oBACE,SAAU,CACV,iBAAkB,CAClB,YAAa,CACb,kBAAmB,CACnB,WAAY,CACZ,mBAAsB,CACxB,YACE,eAAgB,CAChB,OAAQ,CACR,QAAS,CACT,iCAAkC,CAClC,kCAAmC,CACnC,yBAA4B,CAC5B,gBACE,eAAgB,CAChB,4BAA+B,CACnC,mBACE,iBAAkB,CAClB,SAAU,CACV,eAAgB,CAChB,eAAgB,CAChB,SAAU,CACV,iBAAkB,CAClB,qCAA0C,CAC1C,qBAAuB,CACvB,qBAAsB,CACtB,kBAAmB,CACnB,gBAAiB,CACjB,iBAAkB,CAClB,gCAAmC,CACnC,2BACE,WAAY,CACZ,kBAAqB,CACvB,yBACE,mBACE,kBAAqB,CAAE,CAC7B,eACE,oBAAqB,CACrB,UAAa,CACf,cACE,kBAAmB,CACnB,iBAAkB,CAClB,4BAA+B,CACjC,cACE,gBAAiB,CACjB,YAAe,CACjB,gBACE,UAAa,CACf,6BACE,gCAAuC,CACzC,kDACE,qBAAwB,CAC1B,kCACE,gBAAmB,CACrB,wNACE,iBAAkB,CAClB,iBAAkB,CAClB,aAAgB,CAClB,wFACE,UAAW,CACX,MAAS,CACX,gDACE,cAAiB,CACjB,oEACE,gCAAuC,CAC3C,gIAEE,cAAiB,CACjB,wKAEE,4BAA+B,CACnC,6CACE,gCAAuC,CACzC,kDACE,eAAkB,CACpB,gBACE,iBAAkB,CAClB,WAAY,CACZ,YAAa,CACb,YAAa,CACb,WAAc,CACd,sBACE,cAAiB,CAEvB,4BACE,QAAS,CACT,WAAY,CACZ,SAAU,CACV,UAAW,CACX,cAAiB,CAEnB,+BACE,eAAgB,CAChB,UAAa,CAEf,0BACE,YAAkB,CAClB,iBAAoB,CAEtB,WACE,UAAa,CACb,mBACE,UAAa,CACf,mBACE,UAAa,CACf,mBACE,UAAa,CACf,mBACE,UAAa,CACf,mBACE,UAAa,CACf,mBACE,UAAa,CACf,kEACE,WACE,2BAA8B,CAAE,CACpC,mBACE,WAAY,CACZ,uBAA8B,CAChC,mBACE,WAAY,CACZ,2BAAgC,CAClC,mBACE,WAAY,CACZ,2BAAgC,CAClC,mBACE,WAAY,CACZ,2BAAgC,CAClC,mBACE,WAAY,CACZ,2BAAgC,CAClC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,4BAAiC,CACnC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,UAAW,CACX,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CACpC,mBACE,WAAY,CACZ,6BAAkC,CAEtC,WACE,WAAY,CACZ,yBAAgC,CAChC,oDAAyC,CACzC,2BAA4B,CAC5B,wBAAyB,CACzB,0BAA6B,CAC7B,kEACE,WACE,uDAA8C,CAAE,CAEtD,mBACE,4BAA+B","file":"styles.8894c7fd6935665ef3bd.css","sourcesContent":["// Import all the theming functionality.\n// We want overlays to always appear over user content, so set a baseline\n// very high z-index for the overlay container, which is where we create the new\n// stacking context for all overlays.\n$cdk-z-index-overlay-container: 1000 !default;\n$cdk-z-index-overlay: 1000 !default;\n$cdk-z-index-overlay-backdrop: 1000 !default;\n\n// Background color for all of the backdrops\n$cdk-overlay-dark-backdrop-background: rgba(0, 0, 0, 0.32) !default;\n\n// Default backdrop animation is based on the Material Design swift-ease-out.\n$backdrop-animation-duration: 400ms !default;\n$backdrop-animation-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n\n\n@mixin cdk-overlay() {\n  .cdk-overlay-container, .cdk-global-overlay-wrapper {\n    // Disable events from being captured on the overlay container.\n    pointer-events: none;\n\n    // The container should be the size of the viewport.\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n  }\n\n  // The overlay-container is an invisible element which contains all individual overlays.\n  .cdk-overlay-container {\n    position: fixed;\n    z-index: $cdk-z-index-overlay-container;\n\n    &:empty {\n      // Hide the element when it doesn't have any child nodes. This doesn't\n      // include overlays that have been detached, rather than disposed.\n      display: none;\n    }\n  }\n\n  // We use an extra wrapper element in order to use make the overlay itself a flex item.\n  // This makes centering the overlay easy without running into the subpixel rendering\n  // problems tied to using `transform` and without interfering with the other position\n  // strategies.\n  .cdk-global-overlay-wrapper {\n    display: flex;\n    position: absolute;\n    z-index: $cdk-z-index-overlay;\n  }\n\n  // A single overlay pane.\n  .cdk-overlay-pane {\n    // Note: it's important for this one to start off `absolute`,\n    // in order for us to be able to measure it correctly.\n    position: absolute;\n    pointer-events: auto;\n    box-sizing: border-box;\n    z-index: $cdk-z-index-overlay;\n\n    // For connected-position overlays, we set `display: flex` in\n    // order to force `max-width` and `max-height` to take effect.\n    display: flex;\n    max-width: 100%;\n    max-height: 100%;\n  }\n\n  .cdk-overlay-backdrop {\n    // TODO(jelbourn): reuse sidenav fullscreen mixin.\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    z-index: $cdk-z-index-overlay-backdrop;\n    pointer-events: auto;\n    -webkit-tap-highlight-color: transparent;\n    transition: opacity $backdrop-animation-duration $backdrop-animation-timing-function;\n    opacity: 0;\n\n    &.cdk-overlay-backdrop-showing {\n      opacity: 1;\n\n      // In high contrast mode the rgba background will become solid so we need to fall back\n      // to making it opaque using `opacity`. Note that we can't use the `cdk-high-contrast`\n      // mixin, because we can't normalize the import path to the _a11y.scss both for the\n      // source and when this file is distributed. See #10908.\n      @media screen and (-ms-high-contrast: active) {\n        opacity: 0.6;\n      }\n    }\n  }\n\n  .cdk-overlay-dark-backdrop {\n    background: $cdk-overlay-dark-backdrop-background;\n  }\n\n  .cdk-overlay-transparent-backdrop {\n    // Note: as of Firefox 57, having the backdrop be `background: none` will prevent it from\n    // capturing the user's mouse scroll events. Since we also can't use something like\n    // `rgba(0, 0, 0, 0)`, we work around the inconsistency by not setting the background at\n    // all and using `opacity` to make the element transparent.\n    &, &.cdk-overlay-backdrop-showing {\n      opacity: 0;\n    }\n  }\n\n  // Overlay parent element used with the connected position strategy. Used to constrain the\n  // overlay element's size to fit within the viewport.\n  .cdk-overlay-connected-position-bounding-box {\n    position: absolute;\n    z-index: $cdk-z-index-overlay;\n\n    // We use `display: flex` on this element exclusively for centering connected overlays.\n    // When *not* centering, a top/left/bottom/right will be set which overrides the normal\n    // flex layout.\n    display: flex;\n\n    // We use the `column` direction here to avoid some flexbox issues in Edge\n    // when using the \"grow after open\" options.\n    flex-direction: column;\n\n    // Add some dimensions so the element has an `innerText` which some people depend on in tests.\n    min-width: 1px;\n    min-height: 1px;\n  }\n\n  // Used when disabling global scrolling.\n  .cdk-global-scrollblock {\n    position: fixed;\n\n    // Necessary for the content not to lose its width. Note that we're using 100%, instead of\n    // 100vw, because 100vw includes the width plus the scrollbar, whereas 100% is the width\n    // that the element had before we made it `fixed`.\n    width: 100%;\n\n    // Note: this will always add a scrollbar to whatever element it is on, which can\n    // potentially result in double scrollbars. It shouldn't be an issue, because we won't\n    // block scrolling on a page that doesn't have a scrollbar in the first place.\n    overflow-y: scroll;\n  }\n}\n\n@mixin cdk-a11y {\n  .cdk-visually-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n\n    // Avoid browsers rendering the focus ring in some cases.\n    outline: 0;\n\n    // Avoid some cases where the browser will still render the native controls (see #9049).\n    -webkit-appearance: none;\n    -moz-appearance: none;\n  }\n}\n\n/// Emits the mixin's content nested under `$selector-context` if `$selector-context`\n/// is non-empty.\n/// @param selector-context The selector under which to nest the mixin's content.\n@mixin _cdk-optionally-nest-content($selector-context) {\n  @if ($selector-context == '') {\n    @content;\n  }\n  @else {\n    #{$selector-context} {\n      @content;\n    }\n  }\n}\n\n/// Applies styles for users in high contrast mode. Note that this only applies\n/// to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n/// attribute, however Chrome handles high contrast differently.\n///\n/// @param target Which kind of high contrast setting to target. Defaults to `active`, can be\n///    `white-on-black` or `black-on-white`.\n/// @param encapsulation Whether to emit styles for view encapsulation. Values are:\n///     * `on` - works for `Emulated`, `Native`, and `ShadowDom`\n///     * `off` - works for `None`\n///     * `any` - works for all encapsulation modes by emitting the CSS twice (default).\n@mixin cdk-high-contrast($target: active, $encapsulation: 'any') {\n  @if ($target != 'active' and $target != 'black-on-white' and $target != 'white-on-black') {\n    @error 'Unknown cdk-high-contrast value \"#{$target}\" provided. ' +\n           'Allowed values are \"active\", \"black-on-white\", and \"white-on-black\"';\n  }\n\n  @if ($encapsulation != 'on' and $encapsulation != 'off' and $encapsulation != 'any') {\n    @error 'Unknown cdk-high-contrast encapsulation \"#{$encapsulation}\" provided. ' +\n           'Allowed values are \"on\", \"off\", and \"any\"';\n  }\n\n  // If the selector context has multiple parts, such as `.section, .region`, just doing\n  // `.cdk-high-contrast-xxx #{&}` will only apply the parent selector to the first part of the\n  // context. We address this by nesting the selector context under .cdk-high-contrast.\n  @at-root {\n    $selector-context: #{&};\n\n    @if ($encapsulation != 'on') {\n      .cdk-high-contrast-#{$target} {\n        @include _cdk-optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n\n    @if ($encapsulation != 'off') {\n      .cdk-high-contrast-#{$target} :host {\n        @include _cdk-optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n  }\n}\n\n// Core styles that enable monitoring autofill state of text fields.\n@mixin cdk-text-field {\n  // Keyframes that apply no styles, but allow us to monitor when an text field becomes autofilled\n  // by watching for the animation events that are fired when they start. Note: the /*!*/ comment is\n  // needed to prevent LibSass from stripping the keyframes out.\n  // Based on: https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n  @keyframes cdk-text-field-autofill-start {/*!*/}\n  @keyframes cdk-text-field-autofill-end {/*!*/}\n\n  .cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms;\n  }\n\n  .cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-end 0s 1ms;\n  }\n\n  // Remove the resize handle on autosizing textareas, because whatever height\n  // the user resized to will be overwritten once they start typing again.\n  textarea.cdk-textarea-autosize {\n    resize: none;\n  }\n\n  // This class is temporarily applied to the textarea when it is being measured. It is immediately\n  // removed when measuring is complete. We use `!important` rules here to make sure user-specified\n  // rules do not interfere with the measurement.\n  textarea.cdk-textarea-autosize-measuring {\n    height: auto !important;\n    overflow: hidden !important;\n    // Having 2px top and bottom padding seems to fix a bug where Chrome gets an incorrect\n    // measurement. We just have to account for it later and subtract it off the final result.\n    padding: 2px 0 !important;\n    box-sizing: content-box !important;\n  }\n}\n\n// Used to generate UIDs for keyframes used to change the text field autofill styles.\n$cdk-text-field-autofill-color-frame-count: 0;\n\n// Mixin used to apply custom background and foreground colors to an autofilled text field.\n// Based on: https://stackoverflow.com/questions/2781549/\n// removing-input-background-colour-for-chrome-autocomplete#answer-37432260\n@mixin cdk-text-field-autofill-color($background, $foreground:'') {\n  @keyframes cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count} {\n    to {\n      background: $background;\n      @if $foreground != '' { color: $foreground; }\n    }\n  }\n\n  &:-webkit-autofill {\n    animation: cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count} both;\n  }\n\n  &.cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay for cdk-text-field-autofill-start, or the animationstart\n    // event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms,\n               cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count} both;\n  }\n\n  $cdk-text-field-autofill-color-frame-count:\n      $cdk-text-field-autofill-color-frame-count + 1 !global;\n}\n\n\n// Core styles that can be used to apply material design treatments to any element.\n// Media queries\n// TODO(josephperrott): Change $mat-xsmall and $mat-small usages to rely on BreakpointObserver,\n$mat-xsmall: 'max-width: 599px';\n$mat-small: 'max-width: 959px';\n\n// TODO: Revisit all z-indices before beta\n// z-index master list\n\n$z-index-fab: 20 !default;\n$z-index-drawer: 100 !default;\n\n// Global constants\n$pi: 3.14159265;\n\n// Padding between input toggles and their labels\n$mat-toggle-padding: 8px !default;\n// Width and height of input toggles\n$mat-toggle-size: 20px !default;\n\n// Easing Curves\n// TODO(jelbourn): all of these need to be revisited\n\n// The default animation curves used by material design.\n$mat-linear-out-slow-in-timing-function: cubic-bezier(0, 0, 0.2, 0.1) !default;\n$mat-fast-out-slow-in-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;\n$mat-fast-out-linear-in-timing-function: cubic-bezier(0.4, 0, 1, 1) !default;\n\n$ease-in-out-curve-function: cubic-bezier(0.35, 0, 0.25, 1) !default;\n\n$swift-ease-out-duration: 400ms !default;\n$swift-ease-out-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n$swift-ease-out: all $swift-ease-out-duration $swift-ease-out-timing-function !default;\n\n$swift-ease-in-duration: 300ms !default;\n$swift-ease-in-timing-function: cubic-bezier(0.55, 0, 0.55, 0.2) !default;\n$swift-ease-in: all $swift-ease-in-duration $swift-ease-in-timing-function !default;\n\n$swift-ease-in-out-duration: 500ms !default;\n$swift-ease-in-out-timing-function: $ease-in-out-curve-function !default;\n$swift-ease-in-out: all $swift-ease-in-out-duration $swift-ease-in-out-timing-function !default;\n\n$swift-linear-duration: 80ms !default;\n$swift-linear-timing-function: linear !default;\n$swift-linear: all $swift-linear-duration $swift-linear-timing-function !default;\n\n\n\n// A collection of mixins and CSS classes that can be used to apply elevation to a material\n// element.\n// See: https://material.io/design/environment/elevation.html\n// Examples:\n//\n//\n// .mat-foo {\n//   @include $mat-elevation(2);\n//\n//   &:active {\n//     @include $mat-elevation(8);\n//   }\n// }\n//\n// <div id=\"external-card\" class=\"mat-elevation-z2\"><p>Some content</p></div>\n//\n// For an explanation of the design behind how elevation is implemented, see the design doc at\n// https://goo.gl/Kq0k9Z.\n\n// Colors for umbra, penumbra, and ambient shadows. As described in the design doc, each elevation\n// level is created using a set of 3 shadow values, one for umbra (the shadow representing the\n// space completely obscured by an object relative to its light source), one for penumbra (the\n// space partially obscured by an object), and one for ambient (the space which contains the object\n// itself). For a further explanation of these terms and their meanings, see\n// https://en.wikipedia.org/wiki/Umbra,_penumbra_and_antumbra.\n\n// Maps for the different shadow sets and their values within each z-space. These values were\n// created by taking a few reference shadow sets created by Google's Designers and interpolating\n// all of the values between them.\n\n@function _get-umbra-map($color, $opacity) {\n  $shadow-color: if(type-of($color) == color, rgba($color, $opacity * 0.2), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 2px 1px -1px #{$shadow-color}',\n    2: '0px 3px 1px -2px #{$shadow-color}',\n    3: '0px 3px 3px -2px #{$shadow-color}',\n    4: '0px 2px 4px -1px #{$shadow-color}',\n    5: '0px 3px 5px -1px #{$shadow-color}',\n    6: '0px 3px 5px -1px #{$shadow-color}',\n    7: '0px 4px 5px -2px #{$shadow-color}',\n    8: '0px 5px 5px -3px #{$shadow-color}',\n    9: '0px 5px 6px -3px #{$shadow-color}',\n    10: '0px 6px 6px -3px #{$shadow-color}',\n    11: '0px 6px 7px -4px #{$shadow-color}',\n    12: '0px 7px 8px -4px #{$shadow-color}',\n    13: '0px 7px 8px -4px #{$shadow-color}',\n    14: '0px 7px 9px -4px #{$shadow-color}',\n    15: '0px 8px 9px -5px #{$shadow-color}',\n    16: '0px 8px 10px -5px #{$shadow-color}',\n    17: '0px 8px 11px -5px #{$shadow-color}',\n    18: '0px 9px 11px -5px #{$shadow-color}',\n    19: '0px 9px 12px -6px #{$shadow-color}',\n    20: '0px 10px 13px -6px #{$shadow-color}',\n    21: '0px 10px 13px -6px #{$shadow-color}',\n    22: '0px 10px 14px -6px #{$shadow-color}',\n    23: '0px 11px 14px -7px #{$shadow-color}',\n    24: '0px 11px 15px -7px #{$shadow-color}'\n  );\n}\n\n@function _get-penumbra-map($color, $opacity) {\n  $shadow-color: if(type-of($color) == color, rgba($color, $opacity * 0.14), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 1px 1px 0px #{$shadow-color}',\n    2: '0px 2px 2px 0px #{$shadow-color}',\n    3: '0px 3px 4px 0px #{$shadow-color}',\n    4: '0px 4px 5px 0px #{$shadow-color}',\n    5: '0px 5px 8px 0px #{$shadow-color}',\n    6: '0px 6px 10px 0px #{$shadow-color}',\n    7: '0px 7px 10px 1px #{$shadow-color}',\n    8: '0px 8px 10px 1px #{$shadow-color}',\n    9: '0px 9px 12px 1px #{$shadow-color}',\n    10: '0px 10px 14px 1px #{$shadow-color}',\n    11: '0px 11px 15px 1px #{$shadow-color}',\n    12: '0px 12px 17px 2px #{$shadow-color}',\n    13: '0px 13px 19px 2px #{$shadow-color}',\n    14: '0px 14px 21px 2px #{$shadow-color}',\n    15: '0px 15px 22px 2px #{$shadow-color}',\n    16: '0px 16px 24px 2px #{$shadow-color}',\n    17: '0px 17px 26px 2px #{$shadow-color}',\n    18: '0px 18px 28px 2px #{$shadow-color}',\n    19: '0px 19px 29px 2px #{$shadow-color}',\n    20: '0px 20px 31px 3px #{$shadow-color}',\n    21: '0px 21px 33px 3px #{$shadow-color}',\n    22: '0px 22px 35px 3px #{$shadow-color}',\n    23: '0px 23px 36px 3px #{$shadow-color}',\n    24: '0px 24px 38px 3px #{$shadow-color}'\n  );\n}\n\n@function _get-ambient-map($color, $opacity) {\n  $shadow-color: if(type-of($color) == color, rgba($color, $opacity * 0.12), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 1px 3px 0px #{$shadow-color}',\n    2: '0px 1px 5px 0px #{$shadow-color}',\n    3: '0px 1px 8px 0px #{$shadow-color}',\n    4: '0px 1px 10px 0px #{$shadow-color}',\n    5: '0px 1px 14px 0px #{$shadow-color}',\n    6: '0px 1px 18px 0px #{$shadow-color}',\n    7: '0px 2px 16px 1px #{$shadow-color}',\n    8: '0px 3px 14px 2px #{$shadow-color}',\n    9: '0px 3px 16px 2px #{$shadow-color}',\n    10: '0px 4px 18px 3px #{$shadow-color}',\n    11: '0px 4px 20px 3px #{$shadow-color}',\n    12: '0px 5px 22px 4px #{$shadow-color}',\n    13: '0px 5px 24px 4px #{$shadow-color}',\n    14: '0px 5px 26px 4px #{$shadow-color}',\n    15: '0px 6px 28px 5px #{$shadow-color}',\n    16: '0px 6px 30px 5px #{$shadow-color}',\n    17: '0px 6px 32px 5px #{$shadow-color}',\n    18: '0px 7px 34px 6px #{$shadow-color}',\n    19: '0px 7px 36px 6px #{$shadow-color}',\n    20: '0px 8px 38px 7px #{$shadow-color}',\n    21: '0px 8px 40px 7px #{$shadow-color}',\n    22: '0px 8px 42px 7px #{$shadow-color}',\n    23: '0px 9px 44px 8px #{$shadow-color}',\n    24: '0px 9px 46px 8px #{$shadow-color}'\n  );\n}\n\n// The default duration value for elevation transitions.\n$mat-elevation-transition-duration: 280ms !default;\n\n// The default easing value for elevation transitions.\n$mat-elevation-transition-timing-function: $mat-fast-out-slow-in-timing-function;\n\n// The default color for elevation shadows.\n$mat-elevation-color: black !default;\n\n// The default opacity scaling value for elevation shadows.\n$mat-elevation-opacity: 1 !default;\n\n// Prefix for elevation-related selectors.\n$_mat-elevation-prefix: 'mat-elevation-z';\n\n// Applies the correct css rules to an element to give it the elevation specified by $zValue.\n// The $zValue must be between 0 and 24.\n@mixin mat-elevation($zValue, $color: $mat-elevation-color, $opacity: $mat-elevation-opacity) {\n  @if type-of($zValue) != number or not unitless($zValue) {\n    @error '$zValue must be a unitless number';\n  }\n  @if $zValue < 0 or $zValue > 24 {\n    @error '$zValue must be between 0 and 24';\n  }\n\n  box-shadow: #{map-get(_get-umbra-map($color, $opacity), $zValue)},\n              #{map-get(_get-penumbra-map($color, $opacity), $zValue)},\n              #{map-get(_get-ambient-map($color, $opacity), $zValue)};\n}\n\n@mixin _mat-theme-elevation($zValue, $theme, $opacity: $mat-elevation-opacity) {\n  $foreground: map-get($theme, foreground);\n  $elevation-color: map-get($foreground, elevation);\n  $elevation-color-or-default: if($elevation-color == null, $mat-elevation-color, $elevation-color);\n\n  @include mat-elevation($zValue, $elevation-color-or-default, $opacity);\n}\n\n// Applies the elevation to an element in a manner that allows\n// consumers to override it via the Material elevation classes.\n@mixin mat-overridable-elevation(\n    $zValue,\n    $color: $mat-elevation-color,\n    $opacity: $mat-elevation-opacity) {\n  &:not([class*='#{$_mat-elevation-prefix}']) {\n    @include mat-elevation($zValue, $color, $opacity);\n  }\n}\n\n@mixin _mat-theme-overridable-elevation($zValue, $theme, $opacity: $mat-elevation-opacity) {\n  $foreground: map-get($theme, foreground);\n  $elevation-color: map-get($foreground, elevation);\n  $elevation-color-or-default: if($elevation-color == null, $mat-elevation-color, $elevation-color);\n\n  @include mat-overridable-elevation($zValue, $elevation-color-or-default, $opacity);\n}\n\n// Returns a string that can be used as the value for a transition property for elevation.\n// Calling this function directly is useful in situations where a component needs to transition\n// more than one property.\n//\n// .foo {\n//   transition: mat-elevation-transition-property-value(), opacity 100ms ease;\n// }\n@function mat-elevation-transition-property-value(\n    $duration: $mat-elevation-transition-duration,\n    $easing: $mat-elevation-transition-timing-function) {\n  @return box-shadow #{$duration} #{$easing};\n}\n\n// Applies the correct css rules needed to have an element transition between elevations.\n// This mixin should be applied to elements whose elevation values will change depending on their\n// context (e.g. when active or disabled).\n//\n// NOTE(traviskaufman): Both this mixin and the above function use default parameters so they can\n// be used in the same way by clients.\n@mixin mat-elevation-transition(\n    $duration: $mat-elevation-transition-duration,\n    $easing: $mat-elevation-transition-timing-function) {\n  transition: mat-elevation-transition-property-value($duration, $easing);\n}\n\n// Color palettes from the Material Design spec.\n// See https://material.io/design/color/\n//\n// Contrast colors are hard-coded because it is too difficult (probably impossible) to\n// calculate them. These contrast colors are pulled from the public Material Design spec swatches.\n// While the contrast colors in the spec are not prescriptive, we use them for convenience.\n\n\n// @deprecated renamed to $dark-primary-text.\n// @breaking-change 8.0.0\n$black-87-opacity: rgba(black, 0.87);\n// @deprecated renamed to $light-primary-text.\n// @breaking-change 8.0.0\n$white-87-opacity: rgba(white, 0.87);\n// @deprecated use $dark-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$black-12-opacity: rgba(black, 0.12);\n// @deprecated use $light-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$white-12-opacity: rgba(white, 0.12);\n// @deprecated use $dark-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$black-6-opacity: rgba(black, 0.06);\n// @deprecated use $light-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$white-6-opacity: rgba(white, 0.06);\n\n$dark-primary-text: rgba(black, 0.87);\n$dark-secondary-text: rgba(black, 0.54);\n$dark-disabled-text: rgba(black, 0.38);\n$dark-dividers: rgba(black, 0.12);\n$dark-focused: rgba(black, 0.12);\n$light-primary-text: white;\n$light-secondary-text: rgba(white, 0.7);\n$light-disabled-text: rgba(white, 0.5);\n$light-dividers: rgba(white, 0.12);\n$light-focused: rgba(white, 0.12);\n\n$mat-red: (\n  50: #ffebee,\n  100: #ffcdd2,\n  200: #ef9a9a,\n  300: #e57373,\n  400: #ef5350,\n  500: #f44336,\n  600: #e53935,\n  700: #d32f2f,\n  800: #c62828,\n  900: #b71c1c,\n  A100: #ff8a80,\n  A200: #ff5252,\n  A400: #ff1744,\n  A700: #d50000,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-pink: (\n  50: #fce4ec,\n  100: #f8bbd0,\n  200: #f48fb1,\n  300: #f06292,\n  400: #ec407a,\n  500: #e91e63,\n  600: #d81b60,\n  700: #c2185b,\n  800: #ad1457,\n  900: #880e4f,\n  A100: #ff80ab,\n  A200: #ff4081,\n  A400: #f50057,\n  A700: #c51162,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-purple: (\n  50: #f3e5f5,\n  100: #e1bee7,\n  200: #ce93d8,\n  300: #ba68c8,\n  400: #ab47bc,\n  500: #9c27b0,\n  600: #8e24aa,\n  700: #7b1fa2,\n  800: #6a1b9a,\n  900: #4a148c,\n  A100: #ea80fc,\n  A200: #e040fb,\n  A400: #d500f9,\n  A700: #aa00ff,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-deep-purple: (\n  50: #ede7f6,\n  100: #d1c4e9,\n  200: #b39ddb,\n  300: #9575cd,\n  400: #7e57c2,\n  500: #673ab7,\n  600: #5e35b1,\n  700: #512da8,\n  800: #4527a0,\n  900: #311b92,\n  A100: #b388ff,\n  A200: #7c4dff,\n  A400: #651fff,\n  A700: #6200ea,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-indigo: (\n  50: #e8eaf6,\n  100: #c5cae9,\n  200: #9fa8da,\n  300: #7986cb,\n  400: #5c6bc0,\n  500: #3f51b5,\n  600: #3949ab,\n  700: #303f9f,\n  800: #283593,\n  900: #1a237e,\n  A100: #8c9eff,\n  A200: #536dfe,\n  A400: #3d5afe,\n  A700: #304ffe,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-blue: (\n  50: #e3f2fd,\n  100: #bbdefb,\n  200: #90caf9,\n  300: #64b5f6,\n  400: #42a5f5,\n  500: #2196f3,\n  600: #1e88e5,\n  700: #1976d2,\n  800: #1565c0,\n  900: #0d47a1,\n  A100: #82b1ff,\n  A200: #448aff,\n  A400: #2979ff,\n  A700: #2962ff,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-light-blue: (\n  50: #e1f5fe,\n  100: #b3e5fc,\n  200: #81d4fa,\n  300: #4fc3f7,\n  400: #29b6f6,\n  500: #03a9f4,\n  600: #039be5,\n  700: #0288d1,\n  800: #0277bd,\n  900: #01579b,\n  A100: #80d8ff,\n  A200: #40c4ff,\n  A400: #00b0ff,\n  A700: #0091ea,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-cyan: (\n  50: #e0f7fa,\n  100: #b2ebf2,\n  200: #80deea,\n  300: #4dd0e1,\n  400: #26c6da,\n  500: #00bcd4,\n  600: #00acc1,\n  700: #0097a7,\n  800: #00838f,\n  900: #006064,\n  A100: #84ffff,\n  A200: #18ffff,\n  A400: #00e5ff,\n  A700: #00b8d4,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-teal: (\n  50: #e0f2f1,\n  100: #b2dfdb,\n  200: #80cbc4,\n  300: #4db6ac,\n  400: #26a69a,\n  500: #009688,\n  600: #00897b,\n  700: #00796b,\n  800: #00695c,\n  900: #004d40,\n  A100: #a7ffeb,\n  A200: #64ffda,\n  A400: #1de9b6,\n  A700: #00bfa5,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-green: (\n  50: #e8f5e9,\n  100: #c8e6c9,\n  200: #a5d6a7,\n  300: #81c784,\n  400: #66bb6a,\n  500: #4caf50,\n  600: #43a047,\n  700: #388e3c,\n  800: #2e7d32,\n  900: #1b5e20,\n  A100: #b9f6ca,\n  A200: #69f0ae,\n  A400: #00e676,\n  A700: #00c853,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-light-green: (\n  50: #f1f8e9,\n  100: #dcedc8,\n  200: #c5e1a5,\n  300: #aed581,\n  400: #9ccc65,\n  500: #8bc34a,\n  600: #7cb342,\n  700: #689f38,\n  800: #558b2f,\n  900: #33691e,\n  A100: #ccff90,\n  A200: #b2ff59,\n  A400: #76ff03,\n  A700: #64dd17,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-lime: (\n  50: #f9fbe7,\n  100: #f0f4c3,\n  200: #e6ee9c,\n  300: #dce775,\n  400: #d4e157,\n  500: #cddc39,\n  600: #c0ca33,\n  700: #afb42b,\n  800: #9e9d24,\n  900: #827717,\n  A100: #f4ff81,\n  A200: #eeff41,\n  A400: #c6ff00,\n  A700: #aeea00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-yellow: (\n  50: #fffde7,\n  100: #fff9c4,\n  200: #fff59d,\n  300: #fff176,\n  400: #ffee58,\n  500: #ffeb3b,\n  600: #fdd835,\n  700: #fbc02d,\n  800: #f9a825,\n  900: #f57f17,\n  A100: #ffff8d,\n  A200: #ffff00,\n  A400: #ffea00,\n  A700: #ffd600,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $dark-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-amber: (\n  50: #fff8e1,\n  100: #ffecb3,\n  200: #ffe082,\n  300: #ffd54f,\n  400: #ffca28,\n  500: #ffc107,\n  600: #ffb300,\n  700: #ffa000,\n  800: #ff8f00,\n  900: #ff6f00,\n  A100: #ffe57f,\n  A200: #ffd740,\n  A400: #ffc400,\n  A700: #ffab00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $dark-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-orange: (\n  50: #fff3e0,\n  100: #ffe0b2,\n  200: #ffcc80,\n  300: #ffb74d,\n  400: #ffa726,\n  500: #ff9800,\n  600: #fb8c00,\n  700: #f57c00,\n  800: #ef6c00,\n  900: #e65100,\n  A100: #ffd180,\n  A200: #ffab40,\n  A400: #ff9100,\n  A700: #ff6d00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: black,\n  )\n);\n\n$mat-deep-orange: (\n  50: #fbe9e7,\n  100: #ffccbc,\n  200: #ffab91,\n  300: #ff8a65,\n  400: #ff7043,\n  500: #ff5722,\n  600: #f4511e,\n  700: #e64a19,\n  800: #d84315,\n  900: #bf360c,\n  A100: #ff9e80,\n  A200: #ff6e40,\n  A400: #ff3d00,\n  A700: #dd2c00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-brown: (\n  50: #efebe9,\n  100: #d7ccc8,\n  200: #bcaaa4,\n  300: #a1887f,\n  400: #8d6e63,\n  500: #795548,\n  600: #6d4c41,\n  700: #5d4037,\n  800: #4e342e,\n  900: #3e2723,\n  A100: #d7ccc8,\n  A200: #bcaaa4,\n  A400: #8d6e63,\n  A700: #5d4037,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-grey: (\n  50: #fafafa,\n  100: #f5f5f5,\n  200: #eeeeee,\n  300: #e0e0e0,\n  400: #bdbdbd,\n  500: #9e9e9e,\n  600: #757575,\n  700: #616161,\n  800: #424242,\n  900: #212121,\n  A100: #ffffff,\n  A200: #eeeeee,\n  A400: #bdbdbd,\n  A700: #616161,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n// Alias for alternate spelling.\n$mat-gray: $mat-grey;\n\n$mat-blue-grey: (\n  50: #eceff1,\n  100: #cfd8dc,\n  200: #b0bec5,\n  300: #90a4ae,\n  400: #78909c,\n  500: #607d8b,\n  600: #546e7a,\n  700: #455a64,\n  800: #37474f,\n  900: #263238,\n  A100: #cfd8dc,\n  A200: #b0bec5,\n  A400: #78909c,\n  A700: #455a64,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n// Alias for alternate spelling.\n$mat-blue-gray: $mat-blue-grey;\n\n\n// Background palette for light themes.\n$mat-light-theme-background: (\n  status-bar: map_get($mat-grey, 300),\n  app-bar:    map_get($mat-grey, 100),\n  background: map_get($mat-grey, 50),\n  hover:      rgba(black, 0.04), // TODO(kara): check style with Material Design UX\n  card:       white,\n  dialog:     white,\n  disabled-button: rgba(black, 0.12),\n  raised-button: white,\n  focused-button: $dark-focused,\n  selected-button: map_get($mat-grey, 300),\n  selected-disabled-button: map_get($mat-grey, 400),\n  disabled-button-toggle: map_get($mat-grey, 200),\n  unselected-chip: map_get($mat-grey, 300),\n  disabled-list-option: map_get($mat-grey, 200),\n  tooltip: map_get($mat-grey, 700),\n);\n\n// Background palette for dark themes.\n$mat-dark-theme-background: (\n  status-bar: black,\n  app-bar:    map_get($mat-grey, 900),\n  background: #303030,\n  hover:      rgba(white, 0.04), // TODO(kara): check style with Material Design UX\n  card:       map_get($mat-grey, 800),\n  dialog:     map_get($mat-grey, 800),\n  disabled-button: rgba(white, 0.12),\n  raised-button: map-get($mat-grey, 800),\n  focused-button: $light-focused,\n  selected-button: map_get($mat-grey, 900),\n  selected-disabled-button: map_get($mat-grey, 800),\n  disabled-button-toggle: black,\n  unselected-chip: map_get($mat-grey, 700),\n  disabled-list-option: black,\n  tooltip: map_get($mat-grey, 700),\n);\n\n// Foreground palette for light themes.\n$mat-light-theme-foreground: (\n  base:              black,\n  divider:           $dark-dividers,\n  dividers:          $dark-dividers,\n  disabled:          $dark-disabled-text,\n  disabled-button:   rgba(black, 0.26),\n  disabled-text:     $dark-disabled-text,\n  elevation:         black,\n  hint-text:         $dark-disabled-text,\n  secondary-text:    $dark-secondary-text,\n  icon:              rgba(black, 0.54),\n  icons:             rgba(black, 0.54),\n  text:              rgba(black, 0.87),\n  slider-min:        rgba(black, 0.87),\n  slider-off:        rgba(black, 0.26),\n  slider-off-active: rgba(black, 0.38),\n);\n\n// Foreground palette for dark themes.\n$mat-dark-theme-foreground: (\n  base:              white,\n  divider:           $light-dividers,\n  dividers:          $light-dividers,\n  disabled:          $light-disabled-text,\n  disabled-button:   rgba(white, 0.3),\n  disabled-text:     $light-disabled-text,\n  elevation:         black,\n  hint-text:         $light-disabled-text,\n  secondary-text:    $light-secondary-text,\n  icon:              white,\n  icons:             white,\n  text:              white,\n  slider-min:        white,\n  slider-off:        rgba(white, 0.3),\n  slider-off-active: rgba(white, 0.3),\n);\n\n\n\n// For a given hue in a palette, return the contrast color from the map of contrast palettes.\n// @param $color-map\n// @param $hue\n@function mat-contrast($palette, $hue) {\n  @return map-get(map-get($palette, contrast), $hue);\n}\n\n\n// Creates a map of hues to colors for a theme. This is used to define a theme palette in terms\n// of the Material Design hues.\n// @param $color-map\n// @param $primary\n// @param $lighter\n@function mat-palette($base-palette, $default: 500, $lighter: 100, $darker: 700, $text: $default) {\n  $result: map_merge($base-palette, (\n    default: map-get($base-palette, $default),\n    lighter: map-get($base-palette, $lighter),\n    darker: map-get($base-palette, $darker),\n    text: map-get($base-palette, $text),\n\n    default-contrast: mat-contrast($base-palette, $default),\n    lighter-contrast: mat-contrast($base-palette, $lighter),\n    darker-contrast: mat-contrast($base-palette, $darker)\n  ));\n\n  // For each hue in the palette, add a \"-contrast\" color to the map.\n  @each $hue, $color in $base-palette {\n    $result: map_merge($result, (\n      '#{$hue}-contrast': mat-contrast($base-palette, $hue)\n    ));\n  }\n\n  @return $result;\n}\n\n\n// Gets a color from a theme palette (the output of mat-palette).\n// The hue can be one of the standard values (500, A400, etc.), one of the three preconfigured\n// hues (default, lighter, darker), or any of the aforementioned prefixed with \"-contrast\".\n//\n// @param $color-map The theme palette (output of mat-palette).\n// @param $hue The hue from the palette to use. If this is a value between 0 and 1, it will\n//     be treated as opacity.\n// @param $opacity The alpha channel value for the color.\n@function mat-color($palette, $hue: default, $opacity: null) {\n  // If hueKey is a number between zero and one, then it actually contains an\n  // opacity value, so recall this function with the default hue and that given opacity.\n  @if type-of($hue) == number and $hue >= 0 and $hue <= 1 {\n    @return mat-color($palette, default, $hue);\n  }\n\n  $color: map-get($palette, $hue);\n\n  @if (type-of($color) != color) {\n    // If the $color resolved to something different from a color (e.g. a CSS variable),\n    // we can't apply the opacity anyway so we return the value as is, otherwise Sass can\n    // throw an error or output something invalid.\n    @return $color;\n  }\n\n  @return rgba($color, if($opacity == null, opacity($color), $opacity));\n}\n\n\n// Creates a container object for a light theme to be given to individual component theme mixins.\n@function mat-light-theme($primary, $accent, $warn: mat-palette($mat-red)) {\n  @return (\n    primary: $primary,\n    accent: $accent,\n    warn: $warn,\n    is-dark: false,\n    foreground: $mat-light-theme-foreground,\n    background: $mat-light-theme-background,\n  );\n}\n\n\n// Creates a container object for a dark theme to be given to individual component theme mixins.\n@function mat-dark-theme($primary, $accent, $warn: mat-palette($mat-red)) {\n  @return (\n    primary: $primary,\n    accent: $accent,\n    warn: $warn,\n    is-dark: true,\n    foreground: $mat-dark-theme-foreground,\n    background: $mat-dark-theme-background,\n  );\n}\n\n\n\n$mat-ripple-color-opacity: 0.1;\n\n@mixin mat-ripple() {\n\n  // The host element of an mat-ripple directive should always have a position of \"absolute\" or\n  // \"relative\" so that the ripples inside are correctly positioned relatively to the container.\n  .mat-ripple {\n    overflow: hidden;\n\n    // By default, every ripple container should have position: relative in favor of creating an\n    // easy API for developers using the MatRipple directive.\n    position: relative;\n\n    // Promote containers that have ripples to a new layer. We want to target `:not(:empty)`,\n    // because we don't want all ripple containers to have their own layer since they're used in a\n    // lot of places and the layer is only relevant while animating. Note that ideally we'd use\n    // the `contain` property here (see #13175), because `:empty` can be broken by having extra\n    // text inside the element, but it isn't very well supported yet.\n    &:not(:empty) {\n      transform: translateZ(0);\n    }\n  }\n\n  .mat-ripple.mat-ripple-unbounded {\n    overflow: visible;\n  }\n\n  .mat-ripple-element {\n    position: absolute;\n    border-radius: 50%;\n    pointer-events: none;\n\n    transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n    transform: scale(0);\n\n    // In high contrast mode the ripple is opaque, causing it to obstruct the content.\n    @include cdk-high-contrast(active, off) {\n      display: none;\n    }\n  }\n}\n\n/* Theme for the ripple elements.*/\n@mixin mat-ripple-theme($theme) {\n  $foreground: map_get($theme, foreground);\n  $foreground-base: map_get($foreground, base);\n\n  .mat-ripple-element {\n    // If the ripple color is resolves to a color *type*, we can use it directly, otherwise\n    // (e.g. it resolves to a CSS variable) we fall back to using the color and setting an opacity.\n    @if (type-of($foreground-base) == color) {\n      background-color: rgba($foreground-base, $mat-ripple-color-opacity);\n    }\n    @else {\n      background-color: $foreground-base;\n      opacity: $mat-ripple-color-opacity;\n    }\n  }\n}\n\n\n\n// Utility for fetching a nested value from a typography config.\n@function _mat-get-type-value($config, $level, $name) {\n  @return map-get(map-get($config, $level), $name);\n}\n\n// Gets the font size for a level inside a typography config.\n@function mat-font-size($config, $level) {\n  @return _mat-get-type-value($config, $level, font-size);\n}\n\n// Gets the line height for a level inside a typography config.\n@function mat-line-height($config, $level) {\n  @return _mat-get-type-value($config, $level, line-height);\n}\n\n// Gets the font weight for a level inside a typography config.\n@function mat-font-weight($config, $level) {\n  @return _mat-get-type-value($config, $level, font-weight);\n}\n\n// Gets the letter spacing for a level inside a typography config.\n@function mat-letter-spacing($config, $level) {\n  @return _mat-get-type-value($config, $level, letter-spacing);\n}\n\n// Gets the font-family from a typography config and removes the quotes around it.\n@function mat-font-family($config, $level: null) {\n  $font-family: map-get($config, font-family);\n\n  @if $level != null {\n    $font-family: _mat-get-type-value($config, $level, font-family);\n  }\n\n  // Guard against unquoting non-string values, because it's deprecated.\n  @return if(type-of($font-family) == string, unquote($font-family), $font-family);\n}\n\n// Outputs the shorthand `font` CSS property, based on a set of typography values. Falls back to\n// the individual properties if a value that isn't allowed in the shorthand is passed in.\n@mixin mat-typography-font-shorthand($font-size, $font-weight, $line-height, $font-family) {\n  // If any of the values are set to `inherit`, we can't use the shorthand\n  // so we fall back to passing in the individual properties.\n  @if ($font-size == inherit or\n       $font-weight == inherit or\n       $line-height == inherit or\n       $font-family == inherit or\n       $font-size == null or\n       $font-weight == null or\n       $line-height == null or\n       $font-family == null) {\n\n    font-size: $font-size;\n    font-weight: $font-weight;\n    line-height: $line-height;\n    font-family: $font-family;\n  }\n  @else {\n    // Otherwise use the shorthand `font`, because it's the least amount of bytes. Note\n    // that we need to use interpolation for `font-size/line-height` in order to prevent\n    // Sass from dividing the two values.\n    font: $font-weight #{$font-size}/#{$line-height} $font-family;\n  }\n}\n\n// Converts a typography level into CSS styles.\n@mixin mat-typography-level-to-styles($config, $level) {\n  $font-size: mat-font-size($config, $level);\n  $font-weight: mat-font-weight($config, $level);\n  $line-height: mat-line-height($config, $level);\n  $font-family: mat-font-family($config, $level);\n\n  @include mat-typography-font-shorthand($font-size, $font-weight, $line-height, $font-family);\n  letter-spacing: mat-letter-spacing($config, $level);\n}\n\n\n@mixin mat-option-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .mat-option {\n    color: mat-color($foreground, text);\n\n    &:hover:not(.mat-option-disabled),\n    &:focus:not(.mat-option-disabled) {\n      background: mat-color($background, hover);\n    }\n\n    // In multiple mode there is a checkbox to show that the option is selected.\n    &.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\n      background: mat-color($background, hover);\n    }\n\n    &.mat-active {\n      background: mat-color($background, hover);\n      color: mat-color($foreground, text);\n    }\n\n    &.mat-option-disabled {\n      color: mat-color($foreground, hint-text);\n    }\n  }\n\n  .mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($primary, text);\n  }\n\n  .mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($accent, text);\n  }\n\n  .mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($warn, text);\n  }\n}\n\n@mixin mat-option-typography($config) {\n  .mat-option {\n    font: {\n      family: mat-font-family($config);\n      size: mat-font-size($config, subheading-2);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-optgroup-theme($theme) {\n  $foreground: map-get($theme, foreground);\n\n  .mat-optgroup-label {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-optgroup-disabled .mat-optgroup-label {\n    color: mat-color($foreground, hint-text);\n  }\n}\n\n@mixin mat-optgroup-typography($config) {\n  .mat-optgroup-label {\n    @include mat-typography-level-to-styles($config, body-2);\n  }\n}\n\n\n\n@mixin mat-pseudo-checkbox-theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n  $colored-box-selector: '.mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate';\n\n  .mat-pseudo-checkbox {\n    color: mat-color(map-get($theme, foreground), secondary-text);\n\n    &::after {\n      color: mat-color($background, background);\n    }\n  }\n\n  .mat-pseudo-checkbox-disabled {\n    color: $disabled-color;\n  }\n\n  .mat-primary .mat-pseudo-checkbox-checked,\n  .mat-primary .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($theme, primary));\n  }\n\n  // Default to the accent color. Note that the pseudo checkboxes are meant to inherit the\n  // theme from their parent, rather than implementing their own theming, which is why we\n  // don't attach to the `mat-*` classes. Also note that this needs to be below `.mat-primary`\n  // in order to allow for the color to be overwritten if the checkbox is inside a parent that\n  // has `mat-accent` and is placed inside another parent that has `mat-primary`.\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate,\n  .mat-accent .mat-pseudo-checkbox-checked,\n  .mat-accent .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($theme, accent));\n  }\n\n  .mat-warn .mat-pseudo-checkbox-checked,\n  .mat-warn .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($theme, warn));\n  }\n\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-disabled {\n      background: $disabled-color;\n    }\n  }\n}\n\n\n\n// Represents a typography level from the Material design spec.\n@function mat-typography-level(\n  $font-size,\n  $line-height: $font-size,\n  $font-weight: 400,\n  $font-family: null,\n  $letter-spacing: normal) {\n\n  @return (\n    font-size: $font-size,\n    line-height: $line-height,\n    font-weight: $font-weight,\n    font-family: $font-family,\n    letter-spacing: $letter-spacing\n  );\n}\n\n// Represents a collection of typography levels.\n// Defaults come from https://material.io/guidelines/style/typography.html\n// Note: The spec doesn't mention letter spacing. The values here come from\n// eyeballing it until it looked exactly like the spec examples.\n@function mat-typography-config(\n  $font-family:   'Roboto, \"Helvetica Neue\", sans-serif',\n  $display-4:     mat-typography-level(112px, 112px, 300, $letter-spacing: -0.05em),\n  $display-3:     mat-typography-level(56px, 56px, 400, $letter-spacing: -0.02em),\n  $display-2:     mat-typography-level(45px, 48px, 400, $letter-spacing: -0.005em),\n  $display-1:     mat-typography-level(34px, 40px, 400),\n  $headline:      mat-typography-level(24px, 32px, 400),\n  $title:         mat-typography-level(20px, 32px, 500),\n  $subheading-2:  mat-typography-level(16px, 28px, 400),\n  $subheading-1:  mat-typography-level(15px, 24px, 400),\n  $body-2:        mat-typography-level(14px, 24px, 500),\n  $body-1:        mat-typography-level(14px, 20px, 400),\n  $caption:       mat-typography-level(12px, 20px, 400),\n  $button:        mat-typography-level(14px, 14px, 500),\n  // Line-height must be unit-less fraction of the font-size.\n  $input:         mat-typography-level(inherit, 1.125, 400)\n) {\n\n  // Declare an initial map with all of the levels.\n  $config: (\n    display-4:      $display-4,\n    display-3:      $display-3,\n    display-2:      $display-2,\n    display-1:      $display-1,\n    headline:       $headline,\n    title:          $title,\n    subheading-2:   $subheading-2,\n    subheading-1:   $subheading-1,\n    body-2:         $body-2,\n    body-1:         $body-1,\n    caption:        $caption,\n    button:         $button,\n    input:          $input,\n  );\n\n  // Loop through the levels and set the `font-family` of the ones that don't have one to the base.\n  // Note that Sass can't modify maps in place, which means that we need to merge and re-assign.\n  @each $key, $level in $config {\n    @if map-get($level, font-family) == null {\n      $new-level: map-merge($level, (font-family: $font-family));\n      $config: map-merge($config, ($key: $new-level));\n    }\n  }\n\n  // Add the base font family to the config.\n  @return map-merge($config, (font-family: $font-family));\n}\n\n// Adds the base typography styles, based on a config.\n@mixin mat-base-typography($config, $selector: '.mat-typography') {\n  .mat-h1, .mat-headline, #{$selector} h1 {\n    @include mat-typography-level-to-styles($config, headline);\n    margin: 0 0 16px;\n  }\n\n  .mat-h2, .mat-title, #{$selector} h2 {\n    @include mat-typography-level-to-styles($config, title);\n    margin: 0 0 16px;\n  }\n\n  .mat-h3, .mat-subheading-2, #{$selector} h3 {\n    @include mat-typography-level-to-styles($config, subheading-2);\n    margin: 0 0 16px;\n  }\n\n  .mat-h4, .mat-subheading-1, #{$selector} h4 {\n    @include mat-typography-level-to-styles($config, subheading-1);\n    margin: 0 0 16px;\n  }\n\n  // Note: the spec doesn't have anything that would correspond to h5 and h6, but we add these for\n  // consistency. The font sizes come from the Chrome user agent styles which have h5 at 0.83em\n  // and h6 at 0.67em.\n  .mat-h5, #{$selector} h5 {\n    @include mat-typography-font-shorthand(\n       // calc is used here to support css variables\n      calc(#{mat-font-size($config, body-1)} * 0.83),\n      mat-font-weight($config, body-1),\n      mat-line-height($config, body-1),\n      mat-font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-h6, #{$selector} h6 {\n    @include mat-typography-font-shorthand(\n       // calc is used here to support css variables\n      calc(#{mat-font-size($config, body-1)} * 0.67),\n      mat-font-weight($config, body-1),\n      mat-line-height($config, body-1),\n      mat-font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-body-strong, .mat-body-2 {\n    @include mat-typography-level-to-styles($config, body-2);\n  }\n\n  .mat-body, .mat-body-1, #{$selector} {\n    @include mat-typography-level-to-styles($config, body-1);\n\n    p {\n      margin: 0 0 12px;\n    }\n  }\n\n  .mat-small, .mat-caption {\n    @include mat-typography-level-to-styles($config, caption);\n  }\n\n  .mat-display-4, #{$selector} .mat-display-4 {\n    @include mat-typography-level-to-styles($config, display-4);\n    margin: 0 0 56px;\n  }\n\n  .mat-display-3, #{$selector} .mat-display-3 {\n    @include mat-typography-level-to-styles($config, display-3);\n    margin: 0 0 64px;\n  }\n\n  .mat-display-2, #{$selector} .mat-display-2 {\n    @include mat-typography-level-to-styles($config, display-2);\n    margin: 0 0 64px;\n  }\n\n  .mat-display-1, #{$selector} .mat-display-1 {\n    @include mat-typography-level-to-styles($config, display-1);\n    margin: 0 0 64px;\n  }\n}\n\n\n\n\n@mixin mat-autocomplete-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n\n  .mat-autocomplete-panel {\n    @include _mat-theme-overridable-elevation(4, $theme);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    // Selected options in autocompletes should not be gray, but we\n    // only want to override the background for selected options if\n    // they are *not* in hover or focus state. This change has to be\n    // made here because base option styles are shared between the\n    // autocomplete and the select.\n    .mat-option.mat-selected:not(.mat-active):not(:hover) {\n      background: mat-color($background, card);\n\n      &:not(.mat-option-disabled) {\n        color: mat-color($foreground, text);\n      }\n    }\n  }\n\n}\n\n@mixin mat-autocomplete-typography($config) { }\n\n// This contains all of the styles for the badge\n// rather than just the color/theme because of\n// no style sheet support for directives.\n\n\n\n\n\n$mat-badge-font-size: 12px;\n$mat-badge-font-weight: 600;\n$mat-badge-default-size: 22px !default;\n$mat-badge-small-size: $mat-badge-default-size - 6;\n$mat-badge-large-size: $mat-badge-default-size + 6;\n\n// Mixin for building offset given different sizes\n@mixin _mat-badge-size($size) {\n  .mat-badge-content {\n    width: $size;\n    height: $size;\n    line-height: $size;\n  }\n\n  &.mat-badge-above {\n    .mat-badge-content {\n      top: -$size / 2;\n    }\n  }\n\n  &.mat-badge-below {\n    .mat-badge-content {\n      bottom: -$size / 2;\n    }\n  }\n\n  &.mat-badge-before {\n    .mat-badge-content {\n      left: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-before {\n    .mat-badge-content {\n      left: auto;\n      right: -$size;\n    }\n  }\n\n  &.mat-badge-after {\n    .mat-badge-content {\n      right: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-after {\n    .mat-badge-content {\n      right: auto;\n      left: -$size;\n    }\n  }\n\n  &.mat-badge-overlap {\n    &.mat-badge-before {\n      .mat-badge-content {\n        left: -$size / 2;\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-before {\n      .mat-badge-content {\n        left: auto;\n        right: -$size / 2;\n      }\n    }\n\n    &.mat-badge-after {\n      .mat-badge-content {\n        right: -$size / 2;\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-after {\n      .mat-badge-content {\n        right: auto;\n        left: -$size / 2;\n      }\n    }\n  }\n}\n\n@mixin mat-badge-theme($theme) {\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $primary: map-get($theme, primary);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-badge-content {\n    color: mat-color($primary, default-contrast);\n    background: mat-color($primary);\n\n    @include cdk-high-contrast(active, off) {\n      outline: solid 1px;\n      border-radius: 0;\n    }\n  }\n\n  .mat-badge-accent {\n    .mat-badge-content {\n      background: mat-color($accent);\n      color: mat-color($accent, default-contrast);\n    }\n  }\n\n  .mat-badge-warn {\n    .mat-badge-content {\n      color: mat-color($warn, default-contrast);\n      background: mat-color($warn);\n    }\n  }\n\n  .mat-badge {\n    position: relative;\n  }\n\n  .mat-badge-hidden {\n    .mat-badge-content {\n      display: none;\n    }\n  }\n\n  .mat-badge-disabled {\n    .mat-badge-content {\n      $app-background: mat-color($background, 'background');\n      $badge-color: mat-color($foreground, disabled-button);\n\n      // The disabled color usually has some kind of opacity, but because the badge is overlayed\n      // on top of something else, it won't look good if it's opaque. If it is a color *type*,\n      // we convert it into a solid color by taking the opacity from the rgba value and using\n      // the value to determine the percentage of the background to put into foreground when\n      // mixing the colors together.\n      @if (type-of($badge-color) == color and type-of($app-background) == color) {\n        $badge-opacity: opacity($badge-color);\n        background: mix($app-background, rgba($badge-color, 1), (1 - $badge-opacity) * 100%);\n      }\n      @else {\n        background: $badge-color;\n      }\n\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n\n  .mat-badge-content {\n    position: absolute;\n    text-align: center;\n    display: inline-block;\n    border-radius: 50%;\n    transition: transform 200ms ease-in-out;\n    transform: scale(0.6);\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    pointer-events: none;\n  }\n\n  .ng-animate-disabled .mat-badge-content,\n  .mat-badge-content._mat-animation-noopable {\n    transition: none;\n  }\n\n  // The active class is added after the element is added\n  // so it can animate scale to default\n  .mat-badge-content.mat-badge-active {\n    // Scale to `none` instead of `1` to avoid blurry text in some browsers.\n    transform: none;\n  }\n\n  .mat-badge-small {\n    @include _mat-badge-size($mat-badge-small-size);\n  }\n  .mat-badge-medium {\n    @include _mat-badge-size($mat-badge-default-size);\n  }\n  .mat-badge-large {\n    @include _mat-badge-size($mat-badge-large-size);\n  }\n}\n\n@mixin mat-badge-typography($config) {\n  .mat-badge-content {\n    font-weight: $mat-badge-font-weight;\n    font-size: $mat-badge-font-size;\n    font-family: mat-font-family($config);\n  }\n\n  .mat-badge-small .mat-badge-content {\n    // Set the font size to 75% of the original.\n    font-size: $mat-badge-font-size * 0.75;\n  }\n\n  .mat-badge-large .mat-badge-content {\n    font-size: $mat-badge-font-size * 2;\n  }\n}\n\n\n\n\n\n@mixin mat-bottom-sheet-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-bottom-sheet-container {\n    @include _mat-theme-elevation(16, $theme);\n    background: mat-color($background, dialog);\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-bottom-sheet-typography($config) {\n  .mat-bottom-sheet-container {\n    @include mat-typography-level-to-styles($config, body-1);\n  }\n}\n\n\n\n\n\n$_mat-button-ripple-opacity: 0.1;\n\n// Applies a focus style to an mat-button element for each of the supported palettes.\n@mixin _mat-button-focus-overlay-color($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  &.mat-primary .mat-button-focus-overlay {\n    background-color: mat-color($primary);\n  }\n\n  &.mat-accent .mat-button-focus-overlay {\n    background-color: mat-color($accent);\n  }\n\n  &.mat-warn .mat-button-focus-overlay {\n    background-color: mat-color($warn);\n  }\n\n  &[disabled] .mat-button-focus-overlay {\n    background-color: transparent;\n  }\n}\n\n// Applies the background color for a ripple. If the value provided is not a Sass color,\n// we assume that we've been given a CSS variable. Since we can't perform alpha-blending\n// on a CSS variable, we instead add the opacity directly to the ripple element.\n@mixin _mat-button-ripple-background($palette, $hue, $opacity) {\n  $background-color: mat-color($palette, $hue, $opacity);\n  background-color: $background-color;\n  @if (type-of($background-color) != color) {\n    opacity: $opacity;\n  }\n}\n\n@mixin _mat-button-ripple-color($theme, $hue, $opacity: $_mat-button-ripple-opacity) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  &.mat-primary .mat-ripple-element {\n    @include _mat-button-ripple-background($primary, $hue, $opacity);\n  }\n\n  &.mat-accent .mat-ripple-element {\n    @include _mat-button-ripple-background($accent, $hue, $opacity);\n  }\n\n  &.mat-warn .mat-ripple-element {\n    @include _mat-button-ripple-background($warn, $hue, $opacity);\n  }\n}\n\n// Applies a property to an mat-button element for each of the supported palettes.\n@mixin _mat-button-theme-property($theme, $property, $hue) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  &.mat-primary {\n    #{$property}: mat-color($primary, $hue);\n  }\n  &.mat-accent {\n    #{$property}: mat-color($accent, $hue);\n  }\n  &.mat-warn {\n    #{$property}: mat-color($warn, $hue);\n  }\n\n  &.mat-primary, &.mat-accent, &.mat-warn, &[disabled] {\n    &[disabled] {\n      $palette: if($property == 'color', $foreground, $background);\n      #{$property}: mat-color($palette, disabled-button);\n    }\n  }\n}\n\n@mixin mat-button-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-button, .mat-icon-button, .mat-stroked-button {\n    // Buttons without a background color should inherit the font color. This is necessary to\n    // ensure that the button is readable on custom background colors. It's wrong to always assume\n    // that those buttons are always placed inside of containers with the default background\n    // color of the theme (e.g. themed toolbars).\n    color: inherit;\n    background: transparent;\n\n    @include _mat-button-theme-property($theme, 'color', text);\n    @include _mat-button-focus-overlay-color($theme);\n\n    // Setup the ripple color to be based on the text color. This ensures that the ripples\n    // are matching with the current theme palette and are in contrast to the background color\n    // (e.g in themed toolbars).\n    .mat-ripple-element {\n      opacity: $_mat-button-ripple-opacity;\n      background-color: currentColor;\n    }\n  }\n\n  .mat-button-focus-overlay {\n    background: map_get($foreground, base);\n  }\n\n  // Note: this needs a bit extra specificity, because we're not guaranteed the inclusion\n  // order of the theme styles and the button reset may end up resetting this as well.\n  .mat-stroked-button:not([disabled]) {\n    border-color: mat-color($foreground, divider);\n  }\n\n  .mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {\n    // Default font and background color when not using any color palette.\n    color: mat-color($foreground, text);\n    background-color: mat-color($background, raised-button);\n\n    @include _mat-button-theme-property($theme, 'color', default-contrast);\n    @include _mat-button-theme-property($theme, 'background-color', default);\n    @include _mat-button-ripple-color($theme, default-contrast);\n  }\n\n  .mat-stroked-button, .mat-flat-button {\n    @include _mat-theme-overridable-elevation(0, $theme);\n  }\n\n  .mat-raised-button {\n    @include _mat-theme-overridable-elevation(2, $theme);\n\n    &:not([disabled]):active {\n      @include _mat-theme-overridable-elevation(8, $theme);\n    }\n\n    &[disabled] {\n      @include _mat-theme-overridable-elevation(0, $theme);\n    }\n  }\n\n  .mat-fab, .mat-mini-fab {\n    @include _mat-theme-overridable-elevation(6, $theme);\n\n    &:not([disabled]):active {\n      @include _mat-theme-overridable-elevation(12, $theme);\n    }\n\n    &[disabled] {\n      @include _mat-theme-overridable-elevation(0, $theme);\n    }\n  }\n}\n\n@mixin mat-button-typography($config) {\n  .mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\n  .mat-flat-button, .mat-fab, .mat-mini-fab {\n    font: {\n      family: mat-font-family($config, button);\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-button-toggle-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  $divider-color: mat-color($foreground, divider);\n\n  .mat-button-toggle-standalone,\n  .mat-button-toggle-group {\n    @include _mat-theme-elevation(2, $theme);\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    box-shadow: none;\n  }\n\n  .mat-button-toggle {\n    color: mat-color($foreground, hint-text);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: mat-color($background, focused-button);\n    }\n  }\n\n  .mat-button-toggle-appearance-standard {\n    color: mat-color($foreground, text);\n    background: mat-color($background, card);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: mat-color($background, focused-button, 1);\n    }\n  }\n\n  .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: solid 1px $divider-color;\n  }\n\n  [dir='rtl'] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: none;\n    border-right: solid 1px $divider-color;\n  }\n\n  .mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical {\n    .mat-button-toggle + .mat-button-toggle {\n      border-left: none;\n      border-right: none;\n      border-top: solid 1px $divider-color;\n    }\n  }\n\n  .mat-button-toggle-checked {\n    background-color: mat-color($background, selected-button);\n    color: mat-color($foreground, secondary-text);\n\n    &.mat-button-toggle-appearance-standard {\n      color: mat-color($foreground, text);\n    }\n  }\n\n  .mat-button-toggle-disabled {\n    color: mat-color($foreground, disabled-button);\n    background-color: mat-color($background, disabled-button-toggle);\n\n    &.mat-button-toggle-appearance-standard {\n      background: mat-color($background, card);\n    }\n\n    &.mat-button-toggle-checked {\n      background-color: mat-color($background, selected-disabled-button);\n    }\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    border: solid 1px $divider-color;\n  }\n}\n\n@mixin mat-button-toggle-typography($config) {\n  .mat-button-toggle {\n    font-family: mat-font-family($config);\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-card-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-card {\n    @include _mat-theme-overridable-elevation(1, $theme);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    // Needs extra specificity to be able to override the elevation selectors.\n    &.mat-card-flat {\n      @include _mat-theme-overridable-elevation(0, $theme);\n    }\n  }\n\n  .mat-card-subtitle {\n    color: mat-color($foreground, secondary-text);\n  }\n}\n\n@mixin mat-card-typography($config) {\n  .mat-card {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-card-title {\n    font: {\n      size: mat-font-size($config, headline);\n      weight: mat-font-weight($config, title);\n    }\n  }\n\n  .mat-card-header .mat-card-title {\n    font-size: mat-font-size($config, title);\n  }\n\n  .mat-card-subtitle,\n  .mat-card-content {\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n\n\n\n\n@mixin mat-checkbox-theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n\n  // The color of the checkbox's checkmark / mixedmark.\n  $checkbox-mark-color: mat-color($background, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n\n  .mat-checkbox-frame {\n    border-color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-checkbox-checkmark {\n    fill: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-checkmark-path {\n    // !important is needed here because a stroke must be set as an\n    // attribute on the SVG in order for line animation to work properly.\n    stroke: $checkbox-mark-color !important;\n  }\n\n  .mat-checkbox-mixedmark {\n    background-color: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-indeterminate, .mat-checkbox-checked {\n    &.mat-primary .mat-checkbox-background {\n      background-color: mat-color($primary);\n    }\n\n    &.mat-accent .mat-checkbox-background {\n      background-color: mat-color($accent);\n    }\n\n    &.mat-warn .mat-checkbox-background {\n      background-color: mat-color($warn);\n    }\n  }\n\n  .mat-checkbox-disabled {\n    &.mat-checkbox-checked,\n    &.mat-checkbox-indeterminate {\n      .mat-checkbox-background {\n        background-color: $disabled-color;\n      }\n    }\n\n    &:not(.mat-checkbox-checked) {\n      .mat-checkbox-frame {\n        border-color: $disabled-color;\n      }\n    }\n\n    .mat-checkbox-label {\n      color: mat-color($foreground, secondary-text);\n    }\n  }\n\n  // Switch this to a solid color since we're using `opacity`\n  // to control how opaque the ripple should be.\n  .mat-checkbox .mat-ripple-element {\n    background-color: map_get(map-get($theme, foreground), base);\n  }\n\n  .mat-checkbox-checked:not(.mat-checkbox-disabled),\n  .mat-checkbox:active:not(.mat-checkbox-disabled) {\n    &.mat-primary .mat-ripple-element {\n      background: mat-color($primary);\n    }\n\n    &.mat-accent .mat-ripple-element {\n      background: mat-color($accent);\n    }\n\n    &.mat-warn .mat-ripple-element {\n      background: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-checkbox-typography($config) {\n  .mat-checkbox {\n    font-family: mat-font-family($config);\n  }\n\n  // TODO(kara): Remove this style when fixing vertical baseline\n  .mat-checkbox-layout .mat-checkbox-label {\n    line-height: mat-line-height($config, body-2);\n  }\n}\n\n\n\n\n\n\n$mat-chip-remove-font-size: 18px;\n\n@mixin mat-chips-color($foreground, $background) {\n  background-color: $background;\n  color: $foreground;\n\n  .mat-chip-remove {\n    color: $foreground;\n    opacity: 0.4;\n  }\n}\n\n\n// Applies the background color for a ripple element.\n// If the color value provided is not a Sass color,\n// we assume that we've been given a CSS variable.\n// Since we can't perform alpha-blending on a CSS variable,\n// we instead add the opacity directly to the ripple element.\n@mixin _mat-chips-ripple-background($palette, $default-contrast, $opacity) {\n  $background-color: mat-color($palette, $default-contrast, $opacity);\n  background-color: $background-color;\n  @if (type-of($background-color) != color) {\n    opacity: $opacity;\n  }\n}\n\n@mixin mat-chips-theme-color($palette) {\n  @include mat-chips-color(mat-color($palette, default-contrast), mat-color($palette));\n\n  .mat-ripple-element {\n   @include _mat-chips-ripple-background($palette, default-contrast, 0.1);\n  }\n}\n\n@mixin mat-chips-theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  $unselected-background: mat-color($background, unselected-chip);\n  $unselected-foreground: mat-color($foreground, text);\n\n  .mat-chip.mat-standard-chip {\n    @include mat-chips-color($unselected-foreground, $unselected-background);\n\n    &:not(.mat-chip-disabled) {\n      &:active {\n        @include _mat-theme-elevation(3, $theme);\n      }\n\n      .mat-chip-remove:hover {\n        opacity: 0.54;\n      }\n    }\n\n    &.mat-chip-disabled {\n      opacity: 0.4;\n    }\n\n    &::after {\n      background: map_get($foreground, base);\n    }\n  }\n\n  .mat-chip.mat-standard-chip.mat-chip-selected {\n    &.mat-primary {\n      @include mat-chips-theme-color($primary);\n    }\n\n    &.mat-warn {\n      @include mat-chips-theme-color($warn);\n    }\n\n    &.mat-accent {\n      @include mat-chips-theme-color($accent);\n    }\n  }\n}\n\n@mixin mat-chips-typography($config) {\n  .mat-chip {\n    font-size: mat-font-size($config, body-2);\n    font-weight: mat-font-weight($config, body-2);\n\n    .mat-chip-trailing-icon.mat-icon,\n    .mat-chip-remove.mat-icon {\n      font-size: $mat-chip-remove-font-size;\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-table-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-table {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-table thead, .mat-table tbody, .mat-table tfoot,\n  mat-header-row, mat-row, mat-footer-row,\n  [mat-header-row], [mat-row], [mat-footer-row],\n  .mat-table-sticky {\n    background: inherit;\n  }\n\n  mat-row, mat-header-row, mat-footer-row,\n  th.mat-header-cell, td.mat-cell, td.mat-footer-cell {\n    border-bottom-color: mat-color($foreground, divider);\n  }\n\n  .mat-header-cell {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-table-typography($config) {\n  .mat-table {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-header-cell {\n    font-size: mat-font-size($config, caption);\n    font-weight: mat-font-weight($config, body-2);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n\n\n\n\n\n\n$mat-datepicker-selected-today-box-shadow-width: 1px;\n$mat-datepicker-selected-fade-amount: 0.6;\n$mat-datepicker-today-fade-amount: 0.2;\n$mat-calendar-body-font-size: 13px !default;\n$mat-calendar-weekday-table-font-size: 11px !default;\n\n@mixin _mat-datepicker-color($palette) {\n  .mat-calendar-body-selected {\n    background-color: mat-color($palette);\n    color: mat-color($palette, default-contrast);\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-selected {\n    $background: mat-color($palette);\n\n    @if (type-of($background) == color) {\n      background-color: fade-out($background, $mat-datepicker-selected-fade-amount);\n    }\n    @else {\n      // If we couldn't resolve to background to a color (e.g. it's a CSS variable),\n      // fall back to fading the content out via `opacity`.\n      opacity: $mat-datepicker-today-fade-amount;\n    }\n  }\n\n  .mat-calendar-body-today.mat-calendar-body-selected {\n    box-shadow: inset 0 0 0 $mat-datepicker-selected-today-box-shadow-width\n                mat-color($palette, default-contrast);\n  }\n}\n\n@mixin mat-datepicker-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n\n  .mat-calendar-arrow {\n    border-top-color: mat-color($foreground, icon);\n  }\n\n  // The prev/next buttons need a bit more specificity to\n  // avoid being overwritten by the .mat-icon-button.\n  .mat-datepicker-toggle,\n  .mat-datepicker-content .mat-calendar-next-button,\n  .mat-datepicker-content .mat-calendar-previous-button {\n    color: mat-color($foreground, icon);\n  }\n\n  .mat-calendar-table-header {\n    color: mat-color($foreground, hint-text);\n  }\n\n  .mat-calendar-table-header-divider::after {\n    background: mat-color($foreground, divider);\n  }\n\n  .mat-calendar-body-label {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-calendar-body-cell-content {\n    color: mat-color($foreground, text);\n    border-color: transparent;\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected) {\n    color: mat-color($foreground, disabled-text);\n  }\n\n  .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover,\n  .cdk-keyboard-focused .mat-calendar-body-active,\n  .cdk-program-focused .mat-calendar-body-active {\n    & > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected) {\n      background-color: mat-color($background, hover);\n    }\n  }\n\n  .mat-calendar-body-today:not(.mat-calendar-body-selected) {\n    // Note: though it's not text, the border is a hint about the fact that this is today's date,\n    // so we use the hint color.\n    border-color: mat-color($foreground, hint-text);\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-today:not(.mat-calendar-body-selected) {\n    $color: mat-color($foreground, hint-text);\n\n    @if (type-of($color) == color) {\n      border-color: fade-out($color, $mat-datepicker-today-fade-amount);\n    }\n    @else {\n      // If the color didn't resolve to a color value, but something like a CSS variable, we can't\n      // fade it out so we fall back to reducing the element opacity. Note that we don't use the\n      // $mat-datepicker-today-fade-amount, because hint text usually has some opacity applied\n      // to it already and we don't want them to stack on top of each other.\n      opacity: 0.5;\n    }\n  }\n\n  @include _mat-datepicker-color(map-get($theme, primary));\n\n  .mat-datepicker-content {\n    @include _mat-theme-elevation(4, $theme);\n    background-color: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    &.mat-accent {\n      @include _mat-datepicker-color(map-get($theme, accent));\n    }\n\n    &.mat-warn {\n      @include _mat-datepicker-color(map-get($theme, warn));\n    }\n  }\n\n  .mat-datepicker-content-touch {\n    @include _mat-theme-elevation(0, $theme);\n  }\n\n  .mat-datepicker-toggle-active {\n    color: mat-color(map-get($theme, primary), text);\n\n    &.mat-accent {\n      color: mat-color(map-get($theme, accent), text);\n    }\n\n    &.mat-warn {\n      color: mat-color(map-get($theme, warn), text);\n    }\n  }\n}\n\n@mixin mat-datepicker-typography($config) {\n  .mat-calendar {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-calendar-body {\n    font-size: $mat-calendar-body-font-size;\n  }\n\n  .mat-calendar-body-label,\n  .mat-calendar-period-button {\n    font: {\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n\n  .mat-calendar-table-header th {\n    font: {\n      size: $mat-calendar-weekday-table-font-size;\n      weight: mat-font-weight($config, body-1);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-dialog-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-dialog-container {\n    @include _mat-theme-elevation(24, $theme);\n    background: mat-color($background, dialog);\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-dialog-typography($config) {\n  .mat-dialog-title {\n    @include mat-typography-level-to-styles($config, title);\n  }\n}\n\n\n\n\n\n\n@mixin mat-expansion-panel-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-expansion-panel {\n    @include _mat-theme-overridable-elevation(2, $theme);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n  }\n\n  .mat-action-row {\n    border-top-color: mat-color($foreground, divider);\n  }\n\n  .mat-expansion-panel {\n    & .mat-expansion-panel-header.cdk-keyboard-focused,\n    & .mat-expansion-panel-header.cdk-program-focused,\n    &:not(.mat-expanded) .mat-expansion-panel-header:hover {\n      &:not([aria-disabled='true']) {\n        background: mat-color($background, hover);\n      }\n    }\n  }\n\n  // Disable the hover on touch devices since it can appear like it is stuck. We can't use\n  // `@media (hover)` above, because the desktop support browser support isn't great.\n  @media (hover: none) {\n    .mat-expansion-panel:not(.mat-expanded):not([aria-disabled='true'])\n      .mat-expansion-panel-header:hover {\n      background: mat-color($background, card);\n    }\n  }\n\n  .mat-expansion-panel-header-title {\n    color: mat-color($foreground, text);\n  }\n\n  .mat-expansion-panel-header-description,\n  .mat-expansion-indicator::after {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-expansion-panel-header[aria-disabled='true'] {\n    color: mat-color($foreground, disabled-button);\n\n    .mat-expansion-panel-header-title,\n    .mat-expansion-panel-header-description {\n      color: inherit;\n    }\n  }\n}\n\n@mixin mat-expansion-panel-typography($config) {\n  .mat-expansion-panel-header {\n    font: {\n      family: mat-font-family($config, subheading-1);\n      size: mat-font-size($config, subheading-1);\n      weight: mat-font-weight($config, subheading-1);\n    }\n  }\n\n  .mat-expansion-panel-content {\n    @include mat-typography-level-to-styles($config, body-1);\n  }\n}\n\n\n\n\n// This mixin will ensure that lines that overflow the container will hide the overflow and\n// truncate neatly with an ellipsis.\n@mixin mat-truncate-line() {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n// Mixin to provide all mat-line styles, changing secondary font size based on whether the list\n// is in dense mode.\n@mixin mat-line-base($secondary-font-size) {\n  .mat-line {\n    @include mat-truncate-line();\n    display: block;\n    box-sizing: border-box;\n\n    // all lines but the top line should have smaller text\n    &:nth-child(n+2) {\n      font-size: $secondary-font-size;\n    }\n  }\n}\n\n// This mixin normalizes default element styles, e.g. font weight for heading text.\n@mixin mat-normalize-text() {\n  & > * {\n    margin: 0;\n    padding: 0;\n    font-weight: normal;\n    font-size: inherit;\n  }\n}\n\n// This mixin provides base styles for the wrapper around mat-line elements in a list.\n@mixin mat-line-wrapper-base() {\n  @include mat-normalize-text();\n\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  box-sizing: border-box;\n  overflow: hidden;\n\n  // Must remove wrapper when lines are empty or it takes up horizontal\n  // space and pushes other elements to the right.\n  &:empty {\n    display: none;\n  }\n}\n\n\n\n// Include this empty mixin for consistency with the other components.\n@mixin mat-grid-list-theme($theme) { }\n\n@mixin mat-grid-list-typography($config) {\n  .mat-grid-tile-header,\n  .mat-grid-tile-footer {\n    @include mat-line-base(mat-font-size($config, caption));\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n\n\n\n// Include this empty mixin for consistency with the other components.\n@mixin mat-icon-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-icon {\n    &.mat-primary {\n      color: mat-color($primary, text);\n    }\n\n    &.mat-accent {\n      color: mat-color($accent, text);\n    }\n\n    &.mat-warn {\n      color: mat-color($warn, text);\n    }\n  }\n}\n\n@mixin mat-icon-typography($config) { }\n\n\n\n\n\n// Renders a gradient for showing the dashed line when the input is disabled.\n// Unlike using a border, a gradient allows us to adjust the spacing of the dotted line\n// to match the Material Design spec.\n@mixin mat-control-disabled-underline($color) {\n  background-image: linear-gradient(to right, $color 0%, $color 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\n\n// Figures out the color of the placeholder for a form control.\n// Used primarily to prevent the various form controls from\n// becoming out of sync since these colors aren't in a palette.\n@function _mat-control-placeholder-color($theme) {\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n  @return mat-color($foreground, secondary-text, if($is-dark-theme, 0.5, 0.42));\n}\n\n\n/* stylelint-disable material/no-prefixes */\n@mixin user-select($value) {\n  -webkit-user-select: $value;\n  -moz-user-select: $value;\n  -ms-user-select: $value;\n  user-select: $value;\n}\n\n@mixin input-placeholder {\n  &::placeholder {\n    @content;\n  }\n\n  &::-moz-placeholder {\n    @content;\n  }\n\n  &::-webkit-input-placeholder {\n    @content;\n  }\n\n  &:-ms-input-placeholder {\n    @content;\n  }\n}\n\n@mixin cursor-grab {\n  cursor: -webkit-grab;\n  cursor: grab;\n}\n\n@mixin cursor-grabbing {\n  cursor: -webkit-grabbing;\n  cursor: grabbing;\n}\n\n@mixin backface-visibility($value) {\n  -webkit-backface-visibility: $value;\n  backface-visibility: $value;\n}\n/* stylelint-enable */\n\n\n\n@mixin mat-input-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $foreground: map-get($theme, foreground);\n\n  .mat-form-field-type-mat-native-select .mat-form-field-infix::after {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-input-element:disabled,\n  .mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\n    color: mat-color($foreground, disabled-text);\n  }\n\n  .mat-input-element {\n    caret-color: mat-color($primary, text);\n\n    @include input-placeholder {\n      color: _mat-control-placeholder-color($theme);\n    }\n\n    // On dark themes we set the native `select` color to some shade of white,\n    // however the color propagates to all of the `option` elements, which are\n    // always on a white background inside the dropdown, causing them to blend in.\n    // Since we can't change background of the dropdown, we need to explicitly\n    // reset the color of the options to something dark.\n    @if (map-get($theme, is-dark)) {\n      option {\n        color: $dark-primary-text;\n      }\n\n      option:disabled {\n        color: $dark-disabled-text;\n      }\n    }\n  }\n\n  .mat-accent .mat-input-element {\n    caret-color: mat-color($accent, text);\n  }\n\n  .mat-warn .mat-input-element,\n  .mat-form-field-invalid .mat-input-element {\n    caret-color: mat-color($warn, text);\n  }\n\n  .mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\n    color: mat-color($warn, text);\n  }\n}\n\n@mixin mat-input-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: ($line-height - 1) / 2;\n\n  // <input> elements seem to have their height set slightly too large on Safari causing the text to\n  // be misaligned w.r.t. the placeholder. Adding this margin corrects it.\n  input.mat-input-element {\n    margin-top: -$line-spacing * 1em;\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-list-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-list-base {\n    .mat-list-item {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-list-option {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-subheader {\n      color: mat-color($foreground, secondary-text);\n    }\n  }\n\n  .mat-list-item-disabled {\n    background-color: mat-color($background, disabled-list-option);\n  }\n\n  .mat-list-option,\n  .mat-nav-list .mat-list-item,\n  .mat-action-list .mat-list-item {\n    &:hover, &:focus {\n      background: mat-color($background, 'hover');\n    }\n  }\n\n  .mat-list-single-selected-option {\n    &, &:hover, &:focus {\n      background: mat-color($background, hover, 0.12);\n    }\n  }\n}\n\n@mixin mat-list-typography($config) {\n  $font-family: mat-font-family($config);\n\n  .mat-list-item {\n    font-family: $font-family;\n  }\n\n  .mat-list-option {\n    font-family: $font-family;\n  }\n\n  // Default list\n  .mat-list-base {\n    .mat-list-item {\n      font-size: mat-font-size($config, subheading-2);\n      @include mat-line-base(mat-font-size($config, body-1));\n    }\n\n    .mat-list-option {\n      font-size: mat-font-size($config, subheading-2);\n      @include mat-line-base(mat-font-size($config, body-1));\n    }\n\n    .mat-subheader {\n      font-family: mat-font-family($config, body-2);\n      font-size: mat-font-size($config, body-2);\n      font-weight: mat-font-weight($config, body-2);\n    }\n  }\n\n  // Dense list\n  .mat-list-base[dense] {\n    .mat-list-item {\n      font-size: mat-font-size($config, caption);\n      @include mat-line-base(mat-font-size($config, caption));\n    }\n\n    .mat-list-option {\n      font-size: mat-font-size($config, caption);\n      @include mat-line-base(mat-font-size($config, caption));\n    }\n\n    .mat-subheader {\n      font-family: $font-family;\n      font-size: mat-font-size($config, caption);\n      font-weight: mat-font-weight($config, body-2);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-menu-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-menu-panel {\n    @include _mat-theme-overridable-elevation(4, $theme);\n    background: mat-color($background, 'card');\n  }\n\n  .mat-menu-item {\n    background: transparent;\n    color: mat-color($foreground, 'text');\n\n    &[disabled] {\n      &, &::after {\n        color: mat-color($foreground, 'disabled');\n      }\n    }\n  }\n\n  .mat-menu-item .mat-icon-no-color,\n  .mat-menu-item-submenu-trigger::after {\n    color: mat-color($foreground, 'icon');\n  }\n\n  .mat-menu-item:hover,\n  .mat-menu-item.cdk-program-focused,\n  .mat-menu-item.cdk-keyboard-focused,\n  .mat-menu-item-highlighted {\n    &:not([disabled]) {\n      background: mat-color($background, 'hover');\n    }\n  }\n}\n\n@mixin mat-menu-typography($config) {\n  .mat-menu-item {\n    font: {\n      family: mat-font-family($config, body-1);\n      size: mat-font-size($config, body-1);\n      weight: mat-font-weight($config, body-1);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-paginator-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n\n  .mat-paginator {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-paginator-decrement,\n  .mat-paginator-increment {\n    border-top: 2px solid mat-color($foreground, 'icon');\n    border-right: 2px solid mat-color($foreground, 'icon');\n  }\n\n  .mat-paginator-first,\n  .mat-paginator-last {\n    border-top: 2px solid mat-color($foreground, 'icon');\n  }\n\n  .mat-icon-button[disabled] {\n    .mat-paginator-decrement,\n    .mat-paginator-increment,\n    .mat-paginator-first,\n    .mat-paginator-last {\n      border-color: mat-color($foreground, 'disabled');\n    }\n  }\n}\n\n@mixin mat-paginator-typography($config) {\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    font: {\n      family: mat-font-family($config, caption);\n      size: mat-font-size($config, caption);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-progress-bar-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .mat-progress-bar-background {\n    fill: mat-color($primary, lighter);\n  }\n\n  .mat-progress-bar-buffer {\n    background-color: mat-color($primary, lighter);\n  }\n\n  .mat-progress-bar-fill::after {\n    background-color: mat-color($primary);\n  }\n\n  .mat-progress-bar.mat-accent {\n    .mat-progress-bar-background {\n      fill: mat-color($accent, lighter);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: mat-color($accent, lighter);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: mat-color($accent);\n    }\n  }\n\n  .mat-progress-bar.mat-warn {\n    .mat-progress-bar-background {\n      fill: mat-color($warn, lighter);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: mat-color($warn, lighter);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-progress-bar-typography($config) { }\n\n\n\n\n\n\n@mixin mat-progress-spinner-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .mat-progress-spinner, .mat-spinner {\n    circle {\n      stroke: mat-color($primary);\n    }\n\n    &.mat-accent circle {\n      stroke: mat-color($accent);\n    }\n\n    &.mat-warn circle {\n      stroke: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-progress-spinner-typography($config) { }\n\n\n\n\n\n@mixin _mat-radio-color($palette) {\n  &.mat-radio-checked .mat-radio-outer-circle {\n    border-color: mat-color($palette);\n  }\n\n  .mat-radio-inner-circle,\n  .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\n  &.mat-radio-checked .mat-radio-persistent-ripple,\n  &:active .mat-radio-persistent-ripple {\n    background-color: mat-color($palette);\n  }\n}\n\n@mixin mat-radio-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-radio-outer-circle {\n    border-color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-radio-button {\n    &.mat-primary {\n      @include _mat-radio-color($primary);\n    }\n\n    &.mat-accent {\n      @include _mat-radio-color($accent);\n    }\n\n    &.mat-warn {\n      @include _mat-radio-color($warn);\n    }\n\n    // This needs extra specificity, because the classes above are combined\n    // (e.g. `.mat-radio-button.mat-accent`) which increases their specificity a lot.\n    // TODO: consider making the selectors into descendants (`.mat-primary .mat-radio-button`).\n    &.mat-radio-disabled {\n      &.mat-radio-checked .mat-radio-outer-circle,\n      .mat-radio-outer-circle {\n        border-color: mat-color($foreground, disabled);\n      }\n\n      .mat-radio-ripple .mat-ripple-element,\n      .mat-radio-inner-circle {\n        background-color: mat-color($foreground, disabled);\n      }\n\n      .mat-radio-label-content {\n        color: mat-color($foreground, disabled);\n      }\n    }\n\n    // Switch this to a solid color since we're using `opacity`\n    // to control how opaque the ripple should be.\n    .mat-ripple-element {\n      background-color: map_get($foreground, base);\n    }\n  }\n}\n\n@mixin mat-radio-typography($config) {\n  .mat-radio-button {\n    font-family: mat-font-family($config);\n  }\n}\n\n\n\n\n\n\n\n\n@mixin mat-select-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .mat-select-value {\n    color: mat-color($foreground, text);\n  }\n\n  .mat-select-placeholder {\n    color: _mat-control-placeholder-color($theme);\n  }\n\n  .mat-select-disabled .mat-select-value {\n    color: mat-color($foreground, disabled-text);\n  }\n\n  .mat-select-arrow {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-select-panel {\n    background: mat-color($background, card);\n    @include _mat-theme-overridable-elevation(4, $theme);\n\n    .mat-option.mat-selected:not(.mat-option-multiple) {\n      background: mat-color($background, hover, 0.12);\n    }\n  }\n\n  .mat-form-field {\n    &.mat-focused {\n      &.mat-primary .mat-select-arrow {\n        color: mat-color($primary, text);\n      }\n\n      &.mat-accent .mat-select-arrow {\n        color: mat-color($accent, text);\n      }\n\n      &.mat-warn .mat-select-arrow {\n        color: mat-color($warn, text);\n      }\n    }\n\n    .mat-select.mat-select-invalid .mat-select-arrow {\n      color: mat-color($warn, text);\n    }\n\n    .mat-select.mat-select-disabled .mat-select-arrow {\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n}\n\n@mixin mat-select-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  .mat-select {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-select-trigger {\n    height: $line-height * 1em;\n  }\n}\n\n\n\n\n\n\n@mixin mat-sidenav-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  $drawer-background-color: mat-color($background, dialog);\n  $drawer-container-background-color:  mat-color($background, background);\n  $drawer-push-background-color: mat-color($background, dialog);\n  $drawer-side-border: solid 1px mat-color($foreground, divider);\n\n  .mat-drawer-container {\n    background-color: $drawer-container-background-color;\n    color: mat-color($foreground, text);\n  }\n\n  .mat-drawer {\n    background-color: $drawer-background-color;\n    color: mat-color($foreground, text);\n\n    &.mat-drawer-push {\n      background-color: $drawer-push-background-color;\n    }\n\n    &:not(.mat-drawer-side) {\n      // The elevation of z-16 is noted in the design specifications.\n      // See https://material.io/design/components/navigation-drawer.html\n      @include _mat-theme-elevation(16, $theme);\n    }\n  }\n\n  .mat-drawer-side {\n    border-right: $drawer-side-border;\n\n    &.mat-drawer-end {\n      border-left: $drawer-side-border;\n      border-right: none;\n    }\n  }\n\n  [dir='rtl'] .mat-drawer-side {\n    border-left: $drawer-side-border;\n    border-right: none;\n\n    &.mat-drawer-end {\n      border-left: none;\n      border-right: $drawer-side-border;\n    }\n  }\n\n  .mat-drawer-backdrop.mat-drawer-shown {\n    $opacity: 0.6;\n    $backdrop-color: mat-color($background, card, $opacity);\n\n    @if (type-of($backdrop-color) == color) {\n      // We use invert() here to have the darken the background color expected to be used. If the\n      // background is light, we use a dark backdrop. If the background is dark,\n      // we use a light backdrop.\n      background-color: invert($backdrop-color);\n    }\n    @else {\n      // If we couldn't resolve the backdrop color to a color value, fall back to using\n      // `opacity` to make it opaque since its end value could be a solid color.\n      background-color: $backdrop-color;\n      opacity: $opacity;\n    }\n  }\n}\n\n@mixin mat-sidenav-typography($config) { }\n\n\n\n\n\n\n@mixin _mat-slide-toggle-checked($palette, $thumb-checked-hue) {\n  &.mat-checked {\n    .mat-slide-toggle-thumb {\n      background-color: mat-color($palette, $thumb-checked-hue);\n    }\n\n    .mat-slide-toggle-bar {\n      // Opacity is determined from the specs for the selection controls.\n      // See: https://material.io/design/components/selection-controls.html#specs\n      background-color: mat-color($palette, $thumb-checked-hue, 0.54);\n    }\n\n    .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: mat-color($palette, $thumb-checked-hue);\n    }\n  }\n}\n\n@mixin mat-slide-toggle-theme($theme) {\n  $is-dark: map_get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  // Color hues are based on the specs which briefly show the hues that are applied to a switch.\n  // The 2018 specs no longer describe how dark switches should look like. Due to the lack of\n  // information for dark themed switches, we partially keep the old behavior that is based on\n  // the previous specifications. For the checked color we always use the `default` hue because\n  // that follows MDC and also makes it easier for people to create a custom theme without needing\n  // to specify each hue individually.\n  $thumb-unchecked-hue: if($is-dark, 400, 50);\n  $thumb-checked-hue: default;\n\n  $bar-unchecked-color: mat-color($foreground, disabled);\n  $ripple-unchecked-color: mat-color($foreground, base);\n\n  .mat-slide-toggle {\n    @include _mat-slide-toggle-checked($accent, $thumb-checked-hue);\n\n    &.mat-primary {\n      @include _mat-slide-toggle-checked($primary, $thumb-checked-hue);\n    }\n\n    &.mat-warn {\n      @include _mat-slide-toggle-checked($warn, $thumb-checked-hue);\n    }\n\n    &:not(.mat-checked) .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: $ripple-unchecked-color;\n    }\n  }\n\n  .mat-slide-toggle-thumb {\n    @include _mat-theme-elevation(1, $theme);\n    background-color: mat-color($mat-grey, $thumb-unchecked-hue);\n  }\n\n  .mat-slide-toggle-bar {\n    background-color: $bar-unchecked-color;\n  }\n}\n\n@mixin mat-slide-toggle-typography($config) {\n  .mat-slide-toggle-content {\n    font-family: mat-font-family($config);\n  }\n}\n\n\n\n\n\n@mixin _mat-slider-inner-content-theme($palette) {\n  .mat-slider-track-fill,\n  .mat-slider-thumb,\n  .mat-slider-thumb-label {\n    background-color: mat-color($palette);\n  }\n\n  .mat-slider-thumb-label-text {\n    color: mat-color($palette, default-contrast);\n  }\n}\n\n@mixin mat-slider-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  $mat-slider-off-color: mat-color($foreground, slider-off);\n  $mat-slider-off-focused-color: mat-color($foreground, slider-off-active);\n  $mat-slider-disabled-color: mat-color($foreground, slider-off);\n  $mat-slider-labeled-min-value-thumb-color: mat-color($foreground, slider-min);\n  $mat-slider-labeled-min-value-thumb-label-color: mat-color($foreground, slider-off);\n  $mat-slider-tick-opacity: 0.7;\n  $mat-slider-tick-color: mat-color($foreground, base, $mat-slider-tick-opacity);\n  $mat-slider-tick-size: 2px;\n\n  .mat-slider-track-background {\n    background-color: $mat-slider-off-color;\n  }\n\n  .mat-primary {\n    @include _mat-slider-inner-content-theme($primary);\n  }\n\n  .mat-accent {\n    @include _mat-slider-inner-content-theme($accent);\n  }\n\n  .mat-warn {\n    @include _mat-slider-inner-content-theme($warn);\n  }\n\n  .mat-slider-focus-ring {\n    $opacity: 0.2;\n    $color: mat-color($accent, default, $opacity);\n    background-color: $color;\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (type-of($color) != color) {\n      opacity: $opacity;\n    }\n  }\n\n  .mat-slider:hover,\n  .cdk-focused {\n    .mat-slider-track-background {\n      background-color: $mat-slider-off-focused-color;\n    }\n  }\n\n  .mat-slider-disabled {\n    .mat-slider-track-background,\n    .mat-slider-track-fill,\n    .mat-slider-thumb {\n      background-color: $mat-slider-disabled-color;\n    }\n\n    &:hover {\n      .mat-slider-track-background {\n        background-color: $mat-slider-disabled-color;\n      }\n    }\n  }\n\n  .mat-slider-min-value {\n    .mat-slider-focus-ring {\n      $opacity: 0.12;\n      $color: mat-color($foreground, base, $opacity);\n      background-color: $color;\n\n      // `mat-color` uses `rgba` for the opacity which won't work with\n      // CSS variables so we need to use `opacity` as a fallback.\n      @if (type-of($color) != color) {\n        opacity: $opacity;\n      }\n    }\n\n    &.mat-slider-thumb-label-showing {\n      .mat-slider-thumb,\n      .mat-slider-thumb-label {\n        background-color: $mat-slider-labeled-min-value-thumb-color;\n      }\n\n      &.cdk-focused {\n        .mat-slider-thumb,\n        .mat-slider-thumb-label {\n          background-color: $mat-slider-labeled-min-value-thumb-label-color;\n        }\n      }\n    }\n\n    &:not(.mat-slider-thumb-label-showing) {\n      .mat-slider-thumb {\n        border-color: $mat-slider-off-color;\n        background-color: transparent;\n      }\n\n      &:hover,\n      &.cdk-focused {\n        .mat-slider-thumb {\n          border-color: $mat-slider-off-focused-color;\n        }\n\n        &.mat-slider-disabled .mat-slider-thumb {\n          border-color: $mat-slider-disabled-color;\n        }\n      }\n    }\n  }\n\n  .mat-slider-has-ticks .mat-slider-wrapper::after {\n    border-color: $mat-slider-tick-color;\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n\n  .mat-slider-horizontal .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to right, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n    // Firefox doesn't draw the gradient correctly with 'to right'\n    // (see https://bugzilla.mozilla.org/show_bug.cgi?id=1314319).\n    background-image: -moz-repeating-linear-gradient(0.0001deg, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n\n  .mat-slider-vertical .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to bottom, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n}\n\n@mixin mat-slider-typography($config) {\n  .mat-slider-thumb-label-text {\n    font: {\n      family: mat-font-family($config);\n      size: mat-font-size($config, caption);\n      weight: mat-font-weight($config, body-2);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-stepper-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  $primary: map-get($theme, primary);\n  $warn: map-get($theme, warn);\n\n  .mat-step-header {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused,\n    &:hover {\n      background-color: mat-color($background, hover);\n    }\n\n    // On touch devices the :hover state will linger on the element after a tap.\n    // Reset it via `@media` after the declaration, because the media query isn't\n    // supported by all browsers yet.\n    @media (hover: none) {\n      &:hover {\n        background: none;\n      }\n    }\n\n    .mat-step-label,\n    .mat-step-optional {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      color: mat-color($foreground, secondary-text);\n    }\n\n    .mat-step-icon {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      background-color: mat-color($foreground, secondary-text);\n      color: mat-color($primary, default-contrast);\n    }\n\n    .mat-step-icon-selected,\n    .mat-step-icon-state-done,\n    .mat-step-icon-state-edit {\n      background-color: mat-color($primary);\n      color: mat-color($primary, default-contrast);\n    }\n\n    .mat-step-icon-state-error {\n      background-color: transparent;\n      color: mat-color($warn, text);\n    }\n\n    .mat-step-label.mat-step-label-active {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-step-label.mat-step-label-error {\n      color: mat-color($warn, text);\n    }\n  }\n\n  .mat-stepper-horizontal, .mat-stepper-vertical {\n    background-color: mat-color($background, card);\n  }\n\n  .mat-stepper-vertical-line::before {\n    border-left-color: mat-color($foreground, divider);\n  }\n\n  .mat-horizontal-stepper-header::before,\n  .mat-horizontal-stepper-header::after,\n  .mat-stepper-horizontal-line {\n    border-top-color: mat-color($foreground, divider);\n  }\n}\n\n@mixin mat-stepper-typography($config) {\n  .mat-stepper-vertical, .mat-stepper-horizontal {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-step-label {\n    font: {\n      size: mat-font-size($config, body-1);\n      weight: mat-font-weight($config, body-1);\n    };\n  }\n\n  .mat-step-sub-label-error {\n    font-weight: normal;\n  }\n\n  .mat-step-label-error {\n    font-size: mat-font-size($config, body-2);\n  }\n\n  .mat-step-label-selected {\n    font: {\n      size: mat-font-size($config, body-2);\n      weight: mat-font-weight($config, body-2);\n    };\n  }\n}\n\n@mixin mat-sort-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-sort-header-arrow {\n    $table-background: mat-color($background, 'card');\n    $text-color: mat-color($foreground, secondary-text);\n\n    // Because the arrow is made up of multiple elements that are stacked on top of each other,\n    // we can't use the semi-trasparent color from the theme directly. If the value is a color\n    // *type*, we convert it into a solid color by taking the opacity from the rgba value and\n    // using the value to determine the percentage of the background to put into foreground\n    // when mixing the colors together. Otherwise, if it resolves to something different\n    // (e.g. it resolves to a CSS variable), we use the color directly.\n    @if (type-of($table-background) == color and type-of($text-color) == color) {\n      $text-opacity: opacity($text-color);\n      color: mix($table-background, rgba($text-color, 1), (1 - $text-opacity) * 100%);\n    }\n    @else {\n      color: $text-color;\n    }\n  }\n}\n\n@mixin mat-sort-typography($config) { }\n\n\n\n\n\n@mixin mat-tabs-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n  $header-border: 1px solid mat-color($foreground, divider);\n\n  .mat-tab-nav-bar,\n  .mat-tab-header {\n    border-bottom: $header-border;\n  }\n\n  .mat-tab-group-inverted-header {\n    .mat-tab-nav-bar,\n    .mat-tab-header {\n      border-top: $header-border;\n      border-bottom: none;\n    }\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    color: mat-color($foreground, text);\n\n    &.mat-tab-disabled {\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n\n  .mat-tab-header-pagination-chevron {\n    border-color: mat-color($foreground, text);\n  }\n\n  .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    border-color: mat-color($foreground, disabled-text);\n  }\n\n  // Remove header border when there is a background color\n  .mat-tab-group[class*='mat-background-'] .mat-tab-header,\n  .mat-tab-nav-bar[class*='mat-background-'] {\n    border-bottom: none;\n    border-top: none;\n  }\n\n  .mat-tab-group, .mat-tab-nav-bar {\n    $theme-colors: (\n      primary: $primary,\n      accent: $accent,\n      warn: $warn\n    );\n\n    @each $name, $color in $theme-colors {\n      // Set the foreground color of the tabs\n      &.mat-#{$name} {\n        @include _mat-tab-label-focus($color);\n        @include _mat-ink-bar($color);\n\n        // Override ink bar when background color is the same\n        &.mat-background-#{$name} {\n          @include _mat-ink-bar($color, default-contrast);\n        }\n      }\n    }\n\n    @each $name, $color in $theme-colors {\n      // Set background color of the tabs and override focus color\n      &.mat-background-#{$name} {\n        @include _mat-tab-label-focus($color);\n        @include _mat-tabs-background($color);\n      }\n    }\n  }\n}\n\n@mixin _mat-ink-bar($color, $hue: default) {\n  .mat-ink-bar {\n    background-color: mat-color($color, $hue);\n  }\n}\n\n@mixin _mat-tab-label-focus($tab-focus-color) {\n  .mat-tab-label,\n  .mat-tab-link {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused {\n      &:not(.mat-tab-disabled) {\n        background-color: mat-color($tab-focus-color, lighter, 0.3);\n      }\n    }\n  }\n}\n\n@mixin _mat-tabs-background($background-color) {\n  // Set background color for the tab group\n  .mat-tab-header, .mat-tab-links, .mat-tab-header-pagination {\n    background-color: mat-color($background-color);\n  }\n\n  // Set labels to contrast against background\n  .mat-tab-label, .mat-tab-link {\n    color: mat-color($background-color, default-contrast);\n\n    &.mat-tab-disabled {\n      color: mat-color($background-color, default-contrast, 0.4);\n    }\n  }\n\n  // Set pagination chevrons to contrast background\n  .mat-tab-header-pagination-chevron {\n    border-color: mat-color($background-color, default-contrast);\n  }\n\n  .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    border-color: mat-color($background-color, default-contrast, 0.4);\n  }\n\n  // Set ripples color to be the contrast color of the new background. Otherwise the ripple\n  // color will be based on the app background color.\n  .mat-ripple-element {\n    background-color: mat-color($background-color, default-contrast, 0.12);\n  }\n}\n\n@mixin mat-tabs-typography($config) {\n  .mat-tab-group {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    font: {\n      family: mat-font-family($config, button);\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin _mat-toolbar-color($palette) {\n  background: mat-color($palette);\n  color: mat-color($palette, default-contrast);\n}\n\n@mixin _mat-toolbar-form-field-overrides {\n  .mat-form-field-underline,\n  .mat-form-field-ripple,\n  .mat-focused .mat-form-field-ripple {\n    background-color: currentColor;\n  }\n\n  .mat-form-field-label,\n  .mat-focused .mat-form-field-label,\n  .mat-select-value,\n  .mat-select-arrow,\n  .mat-form-field.mat-focused .mat-select-arrow {\n    color: inherit;\n  }\n\n  .mat-input-element {\n    caret-color: currentColor;\n  }\n}\n\n@mixin mat-toolbar-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-toolbar {\n    background: mat-color($background, app-bar);\n    color: mat-color($foreground, text);\n\n    &.mat-primary {\n      @include _mat-toolbar-color($primary);\n    }\n\n    &.mat-accent {\n      @include _mat-toolbar-color($accent);\n    }\n\n    &.mat-warn {\n      @include _mat-toolbar-color($warn);\n    }\n\n    @include _mat-toolbar-form-field-overrides;\n  }\n}\n\n@mixin mat-toolbar-typography($config) {\n  .mat-toolbar,\n  .mat-toolbar h1,\n  .mat-toolbar h2,\n  .mat-toolbar h3,\n  .mat-toolbar h4,\n  .mat-toolbar h5,\n  .mat-toolbar h6 {\n    @include mat-typography-level-to-styles($config, title);\n    margin: 0;\n  }\n}\n\n\n\n\n\n$mat-tooltip-target-height: 22px;\n$mat-tooltip-font-size: 10px;\n$mat-tooltip-vertical-padding: ($mat-tooltip-target-height - $mat-tooltip-font-size) / 2;\n\n$mat-tooltip-handset-target-height: 30px;\n$mat-tooltip-handset-font-size: 14px;\n$mat-tooltip-handset-vertical-padding:\n    ($mat-tooltip-handset-target-height - $mat-tooltip-handset-font-size) / 2;\n\n@mixin mat-tooltip-theme($theme) {\n  $background: map-get($theme, background);\n\n  .mat-tooltip {\n    background: mat-color($background, tooltip, 0.9);\n  }\n}\n\n@mixin mat-tooltip-typography($config) {\n  .mat-tooltip {\n    font-family: mat-font-family($config);\n    font-size: $mat-tooltip-font-size;\n    padding-top: $mat-tooltip-vertical-padding;\n    padding-bottom: $mat-tooltip-vertical-padding;\n  }\n\n  .mat-tooltip-handset {\n    font-size: $mat-tooltip-handset-font-size;\n    padding-top: $mat-tooltip-handset-vertical-padding;\n    padding-bottom: $mat-tooltip-handset-vertical-padding;\n  }\n}\n\n\n\n\n\n@mixin mat-snack-bar-theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n  $accent: map-get($theme, accent);\n\n  .mat-snack-bar-container {\n    // Use the primary text on the dark theme, even though the lighter one uses\n    // a secondary, because the contrast on the light primary text is poor.\n    color: if($is-dark-theme, $dark-primary-text, $light-secondary-text);\n    background: if($is-dark-theme, map-get($mat-grey, 50), #323232);\n\n    @include _mat-theme-elevation(6, $theme);\n  }\n\n  .mat-simple-snackbar-action {\n    color: if($is-dark-theme, inherit, mat-color($accent, text));\n  }\n}\n\n@mixin mat-snack-bar-typography($config) {\n  .mat-simple-snackbar {\n    font: {\n      family: mat-font-family($config, body-1);\n      size: mat-font-size($config, body-1);\n    }\n  }\n\n  .mat-simple-snackbar-action {\n    line-height: 1;\n    font: {\n      family: inherit;\n      size: inherit;\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Theme styles that only apply to the fill appearance of the form-field.\n\n@mixin mat-form-field-fill-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  $fill-background: mat-color($foreground, base, if($is-dark-theme, 0.1, 0.04));\n  $fill-disabled-background: mat-color($foreground, base, if($is-dark-theme, 0.05, 0.02));\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.5, 0.42));\n  $label-disabled-color: mat-color($foreground, disabled-text);\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-flex {\n      background-color: $fill-background;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-flex {\n      background-color: $fill-disabled-background;\n    }\n\n    .mat-form-field-underline::before {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-underline::before {\n        background-color: transparent;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-fill-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-fill-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-fill-dedupe)\n             scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-fill-dedupe;\n\n  $mat-form-field-fill-dedupe: $mat-form-field-fill-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-fill-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding on top of the infix.\n  $infix-padding-top: 0.25em;\n  // The padding below the infix.\n  $infix-padding-bottom: 0.75em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The amount we offset the label from the input text in the fill appearance.\n  $fill-appearance-label-offset: -0.5em;\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-infix {\n      padding: $infix-padding-top 0 $infix-padding-bottom 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding-top;\n      margin-top: $fill-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-fill-label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-fill-label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n\n\n\n\n\n\n// Theme styles that only apply to the legacy appearance of the form-field.\n\n@mixin mat-form-field-legacy-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  $label-color: mat-color($foreground, secondary-text);\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-label {\n      color: $label-color;\n    }\n\n    .mat-hint {\n      color: $label-color;\n    }\n\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include mat-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-legacy-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-legacy-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  // We use perspective to fix the text blurriness as described here:\n  // http://www.useragentman.com/blog/2014/05/04/fixing-typography-inside-of-2-d-css-transforms/\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding) scale($font-scale) perspective(100px)\n  translateZ(0.001px + $mat-form-field-legacy-dedupe);\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\n  // worse on IE, so we don't include them in the IE version.\n  -ms-transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-legacy-dedupe)\n                  scale($font-scale);\n\n  width: 100% / $font-scale + $mat-form-field-legacy-dedupe;\n\n  $mat-form-field-legacy-dedupe: $mat-form-field-legacy-dedupe + 0.00001 !global;\n}\n\n// Same as mixin above, but omits the translateZ for printing purposes.\n@mixin _mat-form-field-legacy-label-floating-print($font-scale, $infix-padding, $infix-margin-top) {\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-legacy-dedupe)\n                  scale($font-scale);\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\n  // worse on IE, so we don't include them in the IE version.\n  $mat-form-field-legacy-dedupe: $mat-form-field-legacy-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-legacy-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: ($line-height - 1) / 2;\n  // The padding on the infix. Mocks show half of the text size, but seem to measure from the edge\n  // of the text itself, not the edge of the line; therefore we subtract off the line spacing.\n  $infix-padding: 0.5em - $line-spacing;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size. We again need to subtract off the line spacing since the mocks measure to the edge of the\n  // text, not the  edge of the line.\n  $subscript-margin-top: 0.5em / $subscript-font-scale - ($line-spacing * 2);\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-wrapper {\n      padding-bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-infix {\n      padding: $infix-padding 0;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n      .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n    }\n\n    .mat-form-field-underline {\n      // We want the underline to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount.\n      bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-subscript-wrapper {\n      margin-top: $subscript-margin-top;\n\n      // We want the subscript to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount (adjusted for the smaller font size);\n      top: calc(100% - #{$wrapper-padding-bottom / $subscript-font-scale});\n    }\n  }\n\n  // translateZ causes the label to not appear while printing, so we override it to not\n  // apply translateZ while printing\n  @media print {\n    .mat-form-field-appearance-legacy {\n      &.mat-form-field-can-float {\n        &.mat-form-field-should-float .mat-form-field-label,\n        .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n        .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // Server-side rendered matInput with a label attribute but label not shown\n        // (used as a pure CSS stand-in for mat-form-field-should-float).\n        .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n      }\n    }\n  }\n}\n\n\n\n\n\n\n\n// Theme styles that only apply to the outline appearance of the form-field.\n\n@mixin mat-form-field-outline-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  $label-disabled-color: mat-color($foreground, disabled-text);\n  $outline-color: mat-color($foreground, divider, if($is-dark-theme, 0.3, 0.12));\n  $outline-color-hover: mat-color($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $outline-color-primary: mat-color($primary);\n  $outline-color-accent: mat-color($accent);\n  $outline-color-warn: mat-color($warn);\n  $outline-color-disabled: mat-color($foreground, divider, if($is-dark-theme, 0.15, 0.06));\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-outline {\n      color: $outline-color;\n    }\n\n    .mat-form-field-outline-thick {\n      color: $outline-color-hover;\n    }\n\n    &.mat-focused {\n      .mat-form-field-outline-thick {\n        color: $outline-color-primary;\n      }\n\n      &.mat-accent .mat-form-field-outline-thick {\n        color: $outline-color-accent;\n      }\n\n      &.mat-warn .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    // Class repeated so that rule is specific enough to override focused accent color case.\n    &.mat-form-field-invalid.mat-form-field-invalid {\n      .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-outline {\n        color: $outline-color-disabled;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-outline-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-outline-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-outline-dedupe)\n  scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-outline-dedupe;\n\n  $mat-form-field-outline-dedupe: $mat-form-field-outline-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-outline-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding above and below the infix.\n  $infix-padding: 1em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: 0.5em / $subscript-font-scale;\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n  // The amount we offset the label from the input text in the outline appearance.\n  $outline-appearance-label-offset: -0.25em;\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-infix {\n      padding: $infix-padding 0 $infix-padding 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n      margin-top: $outline-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-outline-label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-outline-label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n\n\n\n\n\n\n// Theme styles that only apply to the standard appearance of the form-field.\n\n@mixin mat-form-field-standard-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-standard {\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include mat-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n@mixin mat-form-field-standard-typography($config) {}\n\n\n// Theme styles that apply to all appearances of the form-field.\n@mixin mat-form-field-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  // Label colors. Required is used for the `*` star shown in the label.\n  $label-color: mat-color($foreground, secondary-text, if($is-dark-theme, 0.7, 0.6));\n  $focused-label-color: mat-color($primary, text);\n  $required-label-color: mat-color($accent, text);\n\n  // Underline colors.\n  $underline-color-base: mat-color($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $underline-color-accent: mat-color($accent, text);\n  $underline-color-warn: mat-color($warn, text);\n  $underline-focused-color: mat-color($primary, text);\n\n  .mat-form-field-label {\n    color: $label-color;\n  }\n\n  .mat-hint {\n    color: $label-color;\n  }\n\n  .mat-form-field.mat-focused .mat-form-field-label {\n    color: $focused-label-color;\n\n    &.mat-accent {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn {\n      color: $underline-color-warn;\n    }\n  }\n\n  .mat-focused .mat-form-field-required-marker {\n    color: $required-label-color;\n  }\n\n  .mat-form-field-ripple {\n    background-color: $underline-color-base;\n  }\n\n  .mat-form-field.mat-focused {\n    .mat-form-field-ripple {\n      background-color: $underline-focused-color;\n\n      &.mat-accent {\n        background-color: $underline-color-accent;\n      }\n\n      &.mat-warn {\n        background-color: $underline-color-warn;\n      }\n    }\n  }\n\n  .mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) {\n    .mat-form-field-infix::after {\n      color: $underline-focused-color;\n    }\n\n    &.mat-accent .mat-form-field-infix::after {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn .mat-form-field-infix::after {\n      color: $underline-color-warn;\n    }\n  }\n\n  // Styling for the error state of the form field. Note that while the same can be\n  // achieved with the ng-* classes, we use this approach in order to ensure that the same\n  // logic is used to style the error state and to show the error messages.\n  .mat-form-field.mat-form-field-invalid {\n    .mat-form-field-label {\n      color: $underline-color-warn;\n\n      &.mat-accent,\n      .mat-form-field-required-marker {\n        color: $underline-color-warn;\n      }\n    }\n\n    .mat-form-field-ripple,\n    .mat-form-field-ripple.mat-accent {\n      background-color: $underline-color-warn;\n    }\n  }\n\n  .mat-error {\n    color: $underline-color-warn;\n  }\n\n  @include mat-form-field-legacy-theme($theme);\n  @include mat-form-field-standard-theme($theme);\n  @include mat-form-field-fill-theme($theme);\n  @include mat-form-field-outline-theme($theme);\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-dedupe)\n             scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-dedupe;\n\n  $mat-form-field-dedupe: $mat-form-field-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount to scale the font for the prefix and suffix icons.\n  $prefix-suffix-icon-font-scale: 1.5;\n\n  // The padding on the infix. Mocks show half of the text size.\n  $infix-padding: 0.5em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // Font size to use for the label and subscript text.\n  $subscript-font-size: $subscript-font-scale * 100%;\n  // Font size to use for the for the prefix and suffix icons.\n  $prefix-suffix-icon-font-size: $prefix-suffix-icon-font-scale * 100%;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: 0.5em / $subscript-font-scale;\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field {\n    @include mat-typography-level-to-styles($config, input);\n  }\n\n  .mat-form-field-wrapper {\n    padding-bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-prefix,\n  .mat-form-field-suffix {\n    // Allow icons in a prefix or suffix to adapt to the correct size.\n    .mat-icon {\n      font-size: $prefix-suffix-icon-font-size;\n      line-height: $line-height;\n    }\n\n    // Allow icon buttons in a prefix or suffix to adapt to the correct size.\n    .mat-icon-button {\n      height: $prefix-suffix-icon-font-scale * 1em;\n      width: $prefix-suffix-icon-font-scale * 1em;\n\n      .mat-icon {\n        height: $line-height * 1em;\n        line-height: $line-height;\n      }\n    }\n  }\n\n  .mat-form-field-infix {\n    padding: $infix-padding 0;\n    // Throws off the baseline if we do it as a real margin, so we do it as a border instead.\n    border-top: $infix-margin-top solid transparent;\n  }\n\n  .mat-form-field-can-float {\n    &.mat-form-field-should-float .mat-form-field-label,\n    .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n      @include _mat-form-field-label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n\n    // Server-side rendered matInput with a label attribute but label not shown\n    // (used as a pure CSS stand-in for mat-form-field-should-float).\n    .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n      @include _mat-form-field-label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n  }\n\n  .mat-form-field-label-wrapper {\n    top: -$infix-margin-top;\n    padding-top: $infix-margin-top;\n  }\n\n  .mat-form-field-label {\n    top: $infix-margin-top + $infix-padding;\n  }\n\n  .mat-form-field-underline {\n    // We want the underline to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount.\n    bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-subscript-wrapper {\n    font-size: $subscript-font-size;\n    margin-top: $subscript-margin-top;\n\n    // We want the subscript to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount (adjusted for the smaller font size);\n    top: calc(100% - #{$wrapper-padding-bottom / $subscript-font-scale});\n  }\n\n  @include mat-form-field-legacy-typography($config);\n  @include mat-form-field-standard-typography($config);\n  @include mat-form-field-fill-typography($config);\n  @include mat-form-field-outline-typography($config);\n}\n\n\n\n\n\n@mixin mat-tree-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-tree {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-tree-typography($config) {\n  .mat-tree {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    font-weight: mat-font-weight($config, body-1);\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n\n\n// Includes all of the typographic styles.\n@mixin angular-material-typography($config: null) {\n  @if $config == null {\n    $config: mat-typography-config();\n  }\n\n  @include mat-badge-typography($config);\n  @include mat-base-typography($config);\n  @include mat-autocomplete-typography($config);\n  @include mat-bottom-sheet-typography($config);\n  @include mat-button-typography($config);\n  @include mat-button-toggle-typography($config);\n  @include mat-card-typography($config);\n  @include mat-checkbox-typography($config);\n  @include mat-chips-typography($config);\n  @include mat-table-typography($config);\n  @include mat-datepicker-typography($config);\n  @include mat-dialog-typography($config);\n  @include mat-expansion-panel-typography($config);\n  @include mat-form-field-typography($config);\n  @include mat-grid-list-typography($config);\n  @include mat-icon-typography($config);\n  @include mat-input-typography($config);\n  @include mat-menu-typography($config);\n  @include mat-paginator-typography($config);\n  @include mat-progress-bar-typography($config);\n  @include mat-progress-spinner-typography($config);\n  @include mat-radio-typography($config);\n  @include mat-select-typography($config);\n  @include mat-sidenav-typography($config);\n  @include mat-slide-toggle-typography($config);\n  @include mat-slider-typography($config);\n  @include mat-stepper-typography($config);\n  @include mat-sort-typography($config);\n  @include mat-tabs-typography($config);\n  @include mat-toolbar-typography($config);\n  @include mat-tooltip-typography($config);\n  @include mat-list-typography($config);\n  @include mat-option-typography($config);\n  @include mat-optgroup-typography($config);\n  @include mat-snack-bar-typography($config);\n  @include mat-tree-typography($config);\n}\n\n\n// Mixin that renders all of the core styles that are not theme-dependent.\n@mixin mat-core($typography-config: null) {\n  @include angular-material-typography($typography-config);\n  @include mat-ripple();\n  @include cdk-a11y();\n  @include cdk-overlay();\n  @include cdk-text-field();\n}\n\n// Mixin that renders all of the core styles that depend on the theme.\n@mixin mat-core-theme($theme) {\n  @include mat-ripple-theme($theme);\n  @include mat-option-theme($theme);\n  @include mat-optgroup-theme($theme);\n  @include mat-pseudo-checkbox-theme($theme);\n\n  // Provides external CSS classes for each elevation value. Each CSS class is formatted as\n  // `mat-elevation-z$zValue` where `$zValue` corresponds to the z-space to which the element is\n  // elevated.\n  @for $zValue from 0 through 24 {\n    .#{$_mat-elevation-prefix}#{$zValue} {\n      @include _mat-theme-elevation($zValue, $theme);\n    }\n  }\n\n  // Wrapper element that provides the theme background when the user's content isn't\n  // inside of a `mat-sidenav-container`. Note that we need to exclude the ampersand\n  // selector in case the mixin is included at the top level.\n  .mat-app-background#{if(&, ', &.mat-app-background', '')} {\n    $background: map-get($theme, background);\n    $foreground: map-get($theme, foreground);\n\n    background-color: mat-color($background, background);\n    color: mat-color($foreground, text);\n  }\n\n  // Marker that is used to determine whether the user has added a theme to their page.\n  @at-root {\n    .mat-theme-loaded-marker {\n      display: none;\n    }\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@mixin mat-divider-theme($theme) {\n  $foreground: map-get($theme, foreground);\n\n  .mat-divider {\n    border-top-color: mat-color($foreground, divider);\n  }\n\n  .mat-divider-vertical {\n    border-right-color: mat-color($foreground, divider);\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Create a theme.\n@mixin angular-material-theme($theme) {\n  @include mat-core-theme($theme);\n  @include mat-autocomplete-theme($theme);\n  @include mat-badge-theme($theme);\n  @include mat-bottom-sheet-theme($theme);\n  @include mat-button-theme($theme);\n  @include mat-button-toggle-theme($theme);\n  @include mat-card-theme($theme);\n  @include mat-checkbox-theme($theme);\n  @include mat-chips-theme($theme);\n  @include mat-table-theme($theme);\n  @include mat-datepicker-theme($theme);\n  @include mat-dialog-theme($theme);\n  @include mat-divider-theme($theme);\n  @include mat-expansion-panel-theme($theme);\n  @include mat-form-field-theme($theme);\n  @include mat-grid-list-theme($theme);\n  @include mat-icon-theme($theme);\n  @include mat-input-theme($theme);\n  @include mat-list-theme($theme);\n  @include mat-menu-theme($theme);\n  @include mat-paginator-theme($theme);\n  @include mat-progress-bar-theme($theme);\n  @include mat-progress-spinner-theme($theme);\n  @include mat-radio-theme($theme);\n  @include mat-select-theme($theme);\n  @include mat-sidenav-theme($theme);\n  @include mat-slide-toggle-theme($theme);\n  @include mat-slider-theme($theme);\n  @include mat-stepper-theme($theme);\n  @include mat-sort-theme($theme);\n  @include mat-tabs-theme($theme);\n  @include mat-toolbar-theme($theme);\n  @include mat-tooltip-theme($theme);\n  @include mat-tree-theme($theme);\n  @include mat-snack-bar-theme($theme);\n}\n","/* You can add global styles to this file, and also import other style files */\n/*@import '@angular/material/prebuilt-themes/deeppurple-amber';*/\n@import './styles-variables.scss';\n@import '~@angular/material/theming';\n\n@include mat-core();\n\n// import our custom theme\n@import '../src/themes/default-theme.scss';\n@import '../src/themes/light-theme.scss';\n@import '../src/themes/formal-theme.scss';\n\n// import custom component themes\n@import './custom-components-theme.scss';\n\n// import custom typography \n@import './themes/typography.scss';\n\n\n@include angular-material-theme($jobs-app-theme);\n@include custom-components-theme($jobs-app-theme);\n\n\n\n.light-theme {\n    @include angular-material-theme($jobs-app-light-theme);\n    @include custom-components-theme($jobs-app-light-theme);\n}\n\n.formal-theme {\n    @include angular-material-theme($jobs-app-formal-theme);\n    @include custom-components-theme($jobs-app-formal-theme);\n}\n","@import '~@angular/material/theming';\n\n@mixin company-profile-component-theme($theme) {\n    $primary: map-get($theme, primary);\n    $accent: map-get($theme, accent);\n    $warn: map-get($theme, warn);\n    $foreground: map-get($theme, foreground);\n    $background: map-get($theme, background);\n\n    .mat-card-title, mat-form-field {\n        color: $font-color\n       \n    }\n    mat-form-field-infix {\n        border: 1px solid mat-color($primary, 700);\n    }\n    .mat-form-field-label {\n        color: mat-color($primary, 700);\n    }\n\n}","@import '~@angular/material/theming';\n\n@mixin personal-details-dialog-component-theme($theme) {\n    $primary: map-get($theme, primary);\n    $accent: map-get($theme, accent);\n    $warn: map-get($theme, warn);\n    .mat-option.mat-selected{\n        color: mat-color($primary);\n      }\n}","@import '~@angular/material/theming';\n\n@mixin work-experiences-component-theme($theme) {\n    $primary: map-get($theme, primary);\n    $accent: map-get($theme, accent);\n    $warn: map-get($theme, warn);\n    $foreground: map-get($theme, foreground);\n    $background: map-get($theme, background);\n    \n    h3 {\n        color:$font-color;\n    }\n    table.mat-table {\n        background-color: mat-color($background, background);\n        color: mat-color($foreground, text);\n        border: 1px solid #bdbbbb;\n    }\n    table.mat-table:hover {     \n        border: 2px solid black;\n    }\n}\n\n","@import '~@angular/material/theming';\n\n@mixin work-experience-details-dialog-component-theme($theme) {\n    $primary: map-get($theme, primary);\n    $accent: map-get($theme, accent);\n    $warn: map-get($theme, warn);\n    \n    .mat-option.mat-selected.mat-active {\n        color: mat-color($primary);\n    }\n}\n\n",".iti {\n  position: relative;\n  display: inline-block; }\n  .iti * {\n    box-sizing: border-box;\n    -moz-box-sizing: border-box; }\n  .iti__hide {\n    display: none; }\n  .iti__v-hide {\n    visibility: hidden; }\n  .iti input, .iti input[type=text], .iti input[type=tel] {\n    position: relative;\n    z-index: 0;\n    margin-top: 0 !important;\n    margin-bottom: 0 !important;\n    padding-right: 36px;\n    margin-right: 0; }\n  .iti__flag-container {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    padding: 1px; }\n  .iti__selected-flag {\n    z-index: 1;\n    position: relative;\n    display: flex;\n    align-items: center;\n    height: 100%;\n    padding: 0 6px 0 8px; }\n  .iti__arrow {\n    margin-left: 6px;\n    width: 0;\n    height: 0;\n    border-left: 3px solid transparent;\n    border-right: 3px solid transparent;\n    border-top: 4px solid #555; }\n    .iti__arrow--up {\n      border-top: none;\n      border-bottom: 4px solid #555; }\n  .iti__country-list {\n    position: absolute;\n    z-index: 2;\n    list-style: none;\n    text-align: left;\n    padding: 0;\n    margin: 0 0 0 -1px;\n    box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.2);\n    background-color: white;\n    border: 1px solid #CCC;\n    white-space: nowrap;\n    max-height: 200px;\n    overflow-y: scroll;\n    -webkit-overflow-scrolling: touch; }\n    .iti__country-list--dropup {\n      bottom: 100%;\n      margin-bottom: -1px; }\n    @media (max-width: 500px) {\n      .iti__country-list {\n        white-space: normal; } }\n  .iti__flag-box {\n    display: inline-block;\n    width: 20px; }\n  .iti__divider {\n    padding-bottom: 5px;\n    margin-bottom: 5px;\n    border-bottom: 1px solid #CCC; }\n  .iti__country {\n    padding: 5px 10px;\n    outline: none; }\n  .iti__dial-code {\n    color: #999; }\n  .iti__country.iti__highlight {\n    background-color: rgba(0, 0, 0, 0.05); }\n  .iti__flag-box, .iti__country-name, .iti__dial-code {\n    vertical-align: middle; }\n  .iti__flag-box, .iti__country-name {\n    margin-right: 6px; }\n  .iti--allow-dropdown input, .iti--allow-dropdown input[type=text], .iti--allow-dropdown input[type=tel], .iti--separate-dial-code input, .iti--separate-dial-code input[type=text], .iti--separate-dial-code input[type=tel] {\n    padding-right: 6px;\n    padding-left: 52px;\n    margin-left: 0; }\n  .iti--allow-dropdown .iti__flag-container, .iti--separate-dial-code .iti__flag-container {\n    right: auto;\n    left: 0; }\n  .iti--allow-dropdown .iti__flag-container:hover {\n    cursor: pointer; }\n    .iti--allow-dropdown .iti__flag-container:hover .iti__selected-flag {\n      background-color: rgba(0, 0, 0, 0.05); }\n  .iti--allow-dropdown input[disabled] + .iti__flag-container:hover,\n  .iti--allow-dropdown input[readonly] + .iti__flag-container:hover {\n    cursor: default; }\n    .iti--allow-dropdown input[disabled] + .iti__flag-container:hover .iti__selected-flag,\n    .iti--allow-dropdown input[readonly] + .iti__flag-container:hover .iti__selected-flag {\n      background-color: transparent; }\n  .iti--separate-dial-code .iti__selected-flag {\n    background-color: rgba(0, 0, 0, 0.05); }\n  .iti--separate-dial-code .iti__selected-dial-code {\n    margin-left: 6px; }\n  .iti--container {\n    position: absolute;\n    top: -1000px;\n    left: -1000px;\n    z-index: 1060;\n    padding: 1px; }\n    .iti--container:hover {\n      cursor: pointer; }\n\n.iti-mobile .iti--container {\n  top: 30px;\n  bottom: 30px;\n  left: 30px;\n  right: 30px;\n  position: fixed; }\n\n.iti-mobile .iti__country-list {\n  max-height: 100%;\n  width: 100%; }\n\n.iti-mobile .iti__country {\n  padding: 10px 10px;\n  line-height: 1.5em; }\n\n.iti__flag {\n  width: 20px; }\n  .iti__flag.iti__be {\n    width: 18px; }\n  .iti__flag.iti__ch {\n    width: 15px; }\n  .iti__flag.iti__mc {\n    width: 19px; }\n  .iti__flag.iti__ne {\n    width: 18px; }\n  .iti__flag.iti__np {\n    width: 13px; }\n  .iti__flag.iti__va {\n    width: 15px; }\n  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n    .iti__flag {\n      background-size: 5652px 15px; } }\n  .iti__flag.iti__ac {\n    height: 10px;\n    background-position: 0px 0px; }\n  .iti__flag.iti__ad {\n    height: 14px;\n    background-position: -22px 0px; }\n  .iti__flag.iti__ae {\n    height: 10px;\n    background-position: -44px 0px; }\n  .iti__flag.iti__af {\n    height: 14px;\n    background-position: -66px 0px; }\n  .iti__flag.iti__ag {\n    height: 14px;\n    background-position: -88px 0px; }\n  .iti__flag.iti__ai {\n    height: 10px;\n    background-position: -110px 0px; }\n  .iti__flag.iti__al {\n    height: 15px;\n    background-position: -132px 0px; }\n  .iti__flag.iti__am {\n    height: 10px;\n    background-position: -154px 0px; }\n  .iti__flag.iti__ao {\n    height: 14px;\n    background-position: -176px 0px; }\n  .iti__flag.iti__aq {\n    height: 14px;\n    background-position: -198px 0px; }\n  .iti__flag.iti__ar {\n    height: 13px;\n    background-position: -220px 0px; }\n  .iti__flag.iti__as {\n    height: 10px;\n    background-position: -242px 0px; }\n  .iti__flag.iti__at {\n    height: 14px;\n    background-position: -264px 0px; }\n  .iti__flag.iti__au {\n    height: 10px;\n    background-position: -286px 0px; }\n  .iti__flag.iti__aw {\n    height: 14px;\n    background-position: -308px 0px; }\n  .iti__flag.iti__ax {\n    height: 13px;\n    background-position: -330px 0px; }\n  .iti__flag.iti__az {\n    height: 10px;\n    background-position: -352px 0px; }\n  .iti__flag.iti__ba {\n    height: 10px;\n    background-position: -374px 0px; }\n  .iti__flag.iti__bb {\n    height: 14px;\n    background-position: -396px 0px; }\n  .iti__flag.iti__bd {\n    height: 12px;\n    background-position: -418px 0px; }\n  .iti__flag.iti__be {\n    height: 15px;\n    background-position: -440px 0px; }\n  .iti__flag.iti__bf {\n    height: 14px;\n    background-position: -460px 0px; }\n  .iti__flag.iti__bg {\n    height: 12px;\n    background-position: -482px 0px; }\n  .iti__flag.iti__bh {\n    height: 12px;\n    background-position: -504px 0px; }\n  .iti__flag.iti__bi {\n    height: 12px;\n    background-position: -526px 0px; }\n  .iti__flag.iti__bj {\n    height: 14px;\n    background-position: -548px 0px; }\n  .iti__flag.iti__bl {\n    height: 14px;\n    background-position: -570px 0px; }\n  .iti__flag.iti__bm {\n    height: 10px;\n    background-position: -592px 0px; }\n  .iti__flag.iti__bn {\n    height: 10px;\n    background-position: -614px 0px; }\n  .iti__flag.iti__bo {\n    height: 14px;\n    background-position: -636px 0px; }\n  .iti__flag.iti__bq {\n    height: 14px;\n    background-position: -658px 0px; }\n  .iti__flag.iti__br {\n    height: 14px;\n    background-position: -680px 0px; }\n  .iti__flag.iti__bs {\n    height: 10px;\n    background-position: -702px 0px; }\n  .iti__flag.iti__bt {\n    height: 14px;\n    background-position: -724px 0px; }\n  .iti__flag.iti__bv {\n    height: 15px;\n    background-position: -746px 0px; }\n  .iti__flag.iti__bw {\n    height: 14px;\n    background-position: -768px 0px; }\n  .iti__flag.iti__by {\n    height: 10px;\n    background-position: -790px 0px; }\n  .iti__flag.iti__bz {\n    height: 14px;\n    background-position: -812px 0px; }\n  .iti__flag.iti__ca {\n    height: 10px;\n    background-position: -834px 0px; }\n  .iti__flag.iti__cc {\n    height: 10px;\n    background-position: -856px 0px; }\n  .iti__flag.iti__cd {\n    height: 15px;\n    background-position: -878px 0px; }\n  .iti__flag.iti__cf {\n    height: 14px;\n    background-position: -900px 0px; }\n  .iti__flag.iti__cg {\n    height: 14px;\n    background-position: -922px 0px; }\n  .iti__flag.iti__ch {\n    height: 15px;\n    background-position: -944px 0px; }\n  .iti__flag.iti__ci {\n    height: 14px;\n    background-position: -961px 0px; }\n  .iti__flag.iti__ck {\n    height: 10px;\n    background-position: -983px 0px; }\n  .iti__flag.iti__cl {\n    height: 14px;\n    background-position: -1005px 0px; }\n  .iti__flag.iti__cm {\n    height: 14px;\n    background-position: -1027px 0px; }\n  .iti__flag.iti__cn {\n    height: 14px;\n    background-position: -1049px 0px; }\n  .iti__flag.iti__co {\n    height: 14px;\n    background-position: -1071px 0px; }\n  .iti__flag.iti__cp {\n    height: 14px;\n    background-position: -1093px 0px; }\n  .iti__flag.iti__cr {\n    height: 12px;\n    background-position: -1115px 0px; }\n  .iti__flag.iti__cu {\n    height: 10px;\n    background-position: -1137px 0px; }\n  .iti__flag.iti__cv {\n    height: 12px;\n    background-position: -1159px 0px; }\n  .iti__flag.iti__cw {\n    height: 14px;\n    background-position: -1181px 0px; }\n  .iti__flag.iti__cx {\n    height: 10px;\n    background-position: -1203px 0px; }\n  .iti__flag.iti__cy {\n    height: 14px;\n    background-position: -1225px 0px; }\n  .iti__flag.iti__cz {\n    height: 14px;\n    background-position: -1247px 0px; }\n  .iti__flag.iti__de {\n    height: 12px;\n    background-position: -1269px 0px; }\n  .iti__flag.iti__dg {\n    height: 10px;\n    background-position: -1291px 0px; }\n  .iti__flag.iti__dj {\n    height: 14px;\n    background-position: -1313px 0px; }\n  .iti__flag.iti__dk {\n    height: 15px;\n    background-position: -1335px 0px; }\n  .iti__flag.iti__dm {\n    height: 10px;\n    background-position: -1357px 0px; }\n  .iti__flag.iti__do {\n    height: 14px;\n    background-position: -1379px 0px; }\n  .iti__flag.iti__dz {\n    height: 14px;\n    background-position: -1401px 0px; }\n  .iti__flag.iti__ea {\n    height: 14px;\n    background-position: -1423px 0px; }\n  .iti__flag.iti__ec {\n    height: 14px;\n    background-position: -1445px 0px; }\n  .iti__flag.iti__ee {\n    height: 13px;\n    background-position: -1467px 0px; }\n  .iti__flag.iti__eg {\n    height: 14px;\n    background-position: -1489px 0px; }\n  .iti__flag.iti__eh {\n    height: 10px;\n    background-position: -1511px 0px; }\n  .iti__flag.iti__er {\n    height: 10px;\n    background-position: -1533px 0px; }\n  .iti__flag.iti__es {\n    height: 14px;\n    background-position: -1555px 0px; }\n  .iti__flag.iti__et {\n    height: 10px;\n    background-position: -1577px 0px; }\n  .iti__flag.iti__eu {\n    height: 14px;\n    background-position: -1599px 0px; }\n  .iti__flag.iti__fi {\n    height: 12px;\n    background-position: -1621px 0px; }\n  .iti__flag.iti__fj {\n    height: 10px;\n    background-position: -1643px 0px; }\n  .iti__flag.iti__fk {\n    height: 10px;\n    background-position: -1665px 0px; }\n  .iti__flag.iti__fm {\n    height: 11px;\n    background-position: -1687px 0px; }\n  .iti__flag.iti__fo {\n    height: 15px;\n    background-position: -1709px 0px; }\n  .iti__flag.iti__fr {\n    height: 14px;\n    background-position: -1731px 0px; }\n  .iti__flag.iti__ga {\n    height: 15px;\n    background-position: -1753px 0px; }\n  .iti__flag.iti__gb {\n    height: 10px;\n    background-position: -1775px 0px; }\n  .iti__flag.iti__gd {\n    height: 12px;\n    background-position: -1797px 0px; }\n  .iti__flag.iti__ge {\n    height: 14px;\n    background-position: -1819px 0px; }\n  .iti__flag.iti__gf {\n    height: 14px;\n    background-position: -1841px 0px; }\n  .iti__flag.iti__gg {\n    height: 14px;\n    background-position: -1863px 0px; }\n  .iti__flag.iti__gh {\n    height: 14px;\n    background-position: -1885px 0px; }\n  .iti__flag.iti__gi {\n    height: 10px;\n    background-position: -1907px 0px; }\n  .iti__flag.iti__gl {\n    height: 14px;\n    background-position: -1929px 0px; }\n  .iti__flag.iti__gm {\n    height: 14px;\n    background-position: -1951px 0px; }\n  .iti__flag.iti__gn {\n    height: 14px;\n    background-position: -1973px 0px; }\n  .iti__flag.iti__gp {\n    height: 14px;\n    background-position: -1995px 0px; }\n  .iti__flag.iti__gq {\n    height: 14px;\n    background-position: -2017px 0px; }\n  .iti__flag.iti__gr {\n    height: 14px;\n    background-position: -2039px 0px; }\n  .iti__flag.iti__gs {\n    height: 10px;\n    background-position: -2061px 0px; }\n  .iti__flag.iti__gt {\n    height: 13px;\n    background-position: -2083px 0px; }\n  .iti__flag.iti__gu {\n    height: 11px;\n    background-position: -2105px 0px; }\n  .iti__flag.iti__gw {\n    height: 10px;\n    background-position: -2127px 0px; }\n  .iti__flag.iti__gy {\n    height: 12px;\n    background-position: -2149px 0px; }\n  .iti__flag.iti__hk {\n    height: 14px;\n    background-position: -2171px 0px; }\n  .iti__flag.iti__hm {\n    height: 10px;\n    background-position: -2193px 0px; }\n  .iti__flag.iti__hn {\n    height: 10px;\n    background-position: -2215px 0px; }\n  .iti__flag.iti__hr {\n    height: 10px;\n    background-position: -2237px 0px; }\n  .iti__flag.iti__ht {\n    height: 12px;\n    background-position: -2259px 0px; }\n  .iti__flag.iti__hu {\n    height: 10px;\n    background-position: -2281px 0px; }\n  .iti__flag.iti__ic {\n    height: 14px;\n    background-position: -2303px 0px; }\n  .iti__flag.iti__id {\n    height: 14px;\n    background-position: -2325px 0px; }\n  .iti__flag.iti__ie {\n    height: 10px;\n    background-position: -2347px 0px; }\n  .iti__flag.iti__il {\n    height: 15px;\n    background-position: -2369px 0px; }\n  .iti__flag.iti__im {\n    height: 10px;\n    background-position: -2391px 0px; }\n  .iti__flag.iti__in {\n    height: 14px;\n    background-position: -2413px 0px; }\n  .iti__flag.iti__io {\n    height: 10px;\n    background-position: -2435px 0px; }\n  .iti__flag.iti__iq {\n    height: 14px;\n    background-position: -2457px 0px; }\n  .iti__flag.iti__ir {\n    height: 12px;\n    background-position: -2479px 0px; }\n  .iti__flag.iti__is {\n    height: 15px;\n    background-position: -2501px 0px; }\n  .iti__flag.iti__it {\n    height: 14px;\n    background-position: -2523px 0px; }\n  .iti__flag.iti__je {\n    height: 12px;\n    background-position: -2545px 0px; }\n  .iti__flag.iti__jm {\n    height: 10px;\n    background-position: -2567px 0px; }\n  .iti__flag.iti__jo {\n    height: 10px;\n    background-position: -2589px 0px; }\n  .iti__flag.iti__jp {\n    height: 14px;\n    background-position: -2611px 0px; }\n  .iti__flag.iti__ke {\n    height: 14px;\n    background-position: -2633px 0px; }\n  .iti__flag.iti__kg {\n    height: 12px;\n    background-position: -2655px 0px; }\n  .iti__flag.iti__kh {\n    height: 13px;\n    background-position: -2677px 0px; }\n  .iti__flag.iti__ki {\n    height: 10px;\n    background-position: -2699px 0px; }\n  .iti__flag.iti__km {\n    height: 12px;\n    background-position: -2721px 0px; }\n  .iti__flag.iti__kn {\n    height: 14px;\n    background-position: -2743px 0px; }\n  .iti__flag.iti__kp {\n    height: 10px;\n    background-position: -2765px 0px; }\n  .iti__flag.iti__kr {\n    height: 14px;\n    background-position: -2787px 0px; }\n  .iti__flag.iti__kw {\n    height: 10px;\n    background-position: -2809px 0px; }\n  .iti__flag.iti__ky {\n    height: 10px;\n    background-position: -2831px 0px; }\n  .iti__flag.iti__kz {\n    height: 10px;\n    background-position: -2853px 0px; }\n  .iti__flag.iti__la {\n    height: 14px;\n    background-position: -2875px 0px; }\n  .iti__flag.iti__lb {\n    height: 14px;\n    background-position: -2897px 0px; }\n  .iti__flag.iti__lc {\n    height: 10px;\n    background-position: -2919px 0px; }\n  .iti__flag.iti__li {\n    height: 12px;\n    background-position: -2941px 0px; }\n  .iti__flag.iti__lk {\n    height: 10px;\n    background-position: -2963px 0px; }\n  .iti__flag.iti__lr {\n    height: 11px;\n    background-position: -2985px 0px; }\n  .iti__flag.iti__ls {\n    height: 14px;\n    background-position: -3007px 0px; }\n  .iti__flag.iti__lt {\n    height: 12px;\n    background-position: -3029px 0px; }\n  .iti__flag.iti__lu {\n    height: 12px;\n    background-position: -3051px 0px; }\n  .iti__flag.iti__lv {\n    height: 10px;\n    background-position: -3073px 0px; }\n  .iti__flag.iti__ly {\n    height: 10px;\n    background-position: -3095px 0px; }\n  .iti__flag.iti__ma {\n    height: 14px;\n    background-position: -3117px 0px; }\n  .iti__flag.iti__mc {\n    height: 15px;\n    background-position: -3139px 0px; }\n  .iti__flag.iti__md {\n    height: 10px;\n    background-position: -3160px 0px; }\n  .iti__flag.iti__me {\n    height: 10px;\n    background-position: -3182px 0px; }\n  .iti__flag.iti__mf {\n    height: 14px;\n    background-position: -3204px 0px; }\n  .iti__flag.iti__mg {\n    height: 14px;\n    background-position: -3226px 0px; }\n  .iti__flag.iti__mh {\n    height: 11px;\n    background-position: -3248px 0px; }\n  .iti__flag.iti__mk {\n    height: 10px;\n    background-position: -3270px 0px; }\n  .iti__flag.iti__ml {\n    height: 14px;\n    background-position: -3292px 0px; }\n  .iti__flag.iti__mm {\n    height: 14px;\n    background-position: -3314px 0px; }\n  .iti__flag.iti__mn {\n    height: 10px;\n    background-position: -3336px 0px; }\n  .iti__flag.iti__mo {\n    height: 14px;\n    background-position: -3358px 0px; }\n  .iti__flag.iti__mp {\n    height: 10px;\n    background-position: -3380px 0px; }\n  .iti__flag.iti__mq {\n    height: 14px;\n    background-position: -3402px 0px; }\n  .iti__flag.iti__mr {\n    height: 14px;\n    background-position: -3424px 0px; }\n  .iti__flag.iti__ms {\n    height: 10px;\n    background-position: -3446px 0px; }\n  .iti__flag.iti__mt {\n    height: 14px;\n    background-position: -3468px 0px; }\n  .iti__flag.iti__mu {\n    height: 14px;\n    background-position: -3490px 0px; }\n  .iti__flag.iti__mv {\n    height: 14px;\n    background-position: -3512px 0px; }\n  .iti__flag.iti__mw {\n    height: 14px;\n    background-position: -3534px 0px; }\n  .iti__flag.iti__mx {\n    height: 12px;\n    background-position: -3556px 0px; }\n  .iti__flag.iti__my {\n    height: 10px;\n    background-position: -3578px 0px; }\n  .iti__flag.iti__mz {\n    height: 14px;\n    background-position: -3600px 0px; }\n  .iti__flag.iti__na {\n    height: 14px;\n    background-position: -3622px 0px; }\n  .iti__flag.iti__nc {\n    height: 10px;\n    background-position: -3644px 0px; }\n  .iti__flag.iti__ne {\n    height: 15px;\n    background-position: -3666px 0px; }\n  .iti__flag.iti__nf {\n    height: 10px;\n    background-position: -3686px 0px; }\n  .iti__flag.iti__ng {\n    height: 10px;\n    background-position: -3708px 0px; }\n  .iti__flag.iti__ni {\n    height: 12px;\n    background-position: -3730px 0px; }\n  .iti__flag.iti__nl {\n    height: 14px;\n    background-position: -3752px 0px; }\n  .iti__flag.iti__no {\n    height: 15px;\n    background-position: -3774px 0px; }\n  .iti__flag.iti__np {\n    height: 15px;\n    background-position: -3796px 0px; }\n  .iti__flag.iti__nr {\n    height: 10px;\n    background-position: -3811px 0px; }\n  .iti__flag.iti__nu {\n    height: 10px;\n    background-position: -3833px 0px; }\n  .iti__flag.iti__nz {\n    height: 10px;\n    background-position: -3855px 0px; }\n  .iti__flag.iti__om {\n    height: 10px;\n    background-position: -3877px 0px; }\n  .iti__flag.iti__pa {\n    height: 14px;\n    background-position: -3899px 0px; }\n  .iti__flag.iti__pe {\n    height: 14px;\n    background-position: -3921px 0px; }\n  .iti__flag.iti__pf {\n    height: 14px;\n    background-position: -3943px 0px; }\n  .iti__flag.iti__pg {\n    height: 15px;\n    background-position: -3965px 0px; }\n  .iti__flag.iti__ph {\n    height: 10px;\n    background-position: -3987px 0px; }\n  .iti__flag.iti__pk {\n    height: 14px;\n    background-position: -4009px 0px; }\n  .iti__flag.iti__pl {\n    height: 13px;\n    background-position: -4031px 0px; }\n  .iti__flag.iti__pm {\n    height: 14px;\n    background-position: -4053px 0px; }\n  .iti__flag.iti__pn {\n    height: 10px;\n    background-position: -4075px 0px; }\n  .iti__flag.iti__pr {\n    height: 14px;\n    background-position: -4097px 0px; }\n  .iti__flag.iti__ps {\n    height: 10px;\n    background-position: -4119px 0px; }\n  .iti__flag.iti__pt {\n    height: 14px;\n    background-position: -4141px 0px; }\n  .iti__flag.iti__pw {\n    height: 13px;\n    background-position: -4163px 0px; }\n  .iti__flag.iti__py {\n    height: 11px;\n    background-position: -4185px 0px; }\n  .iti__flag.iti__qa {\n    height: 8px;\n    background-position: -4207px 0px; }\n  .iti__flag.iti__re {\n    height: 14px;\n    background-position: -4229px 0px; }\n  .iti__flag.iti__ro {\n    height: 14px;\n    background-position: -4251px 0px; }\n  .iti__flag.iti__rs {\n    height: 14px;\n    background-position: -4273px 0px; }\n  .iti__flag.iti__ru {\n    height: 14px;\n    background-position: -4295px 0px; }\n  .iti__flag.iti__rw {\n    height: 14px;\n    background-position: -4317px 0px; }\n  .iti__flag.iti__sa {\n    height: 14px;\n    background-position: -4339px 0px; }\n  .iti__flag.iti__sb {\n    height: 10px;\n    background-position: -4361px 0px; }\n  .iti__flag.iti__sc {\n    height: 10px;\n    background-position: -4383px 0px; }\n  .iti__flag.iti__sd {\n    height: 10px;\n    background-position: -4405px 0px; }\n  .iti__flag.iti__se {\n    height: 13px;\n    background-position: -4427px 0px; }\n  .iti__flag.iti__sg {\n    height: 14px;\n    background-position: -4449px 0px; }\n  .iti__flag.iti__sh {\n    height: 10px;\n    background-position: -4471px 0px; }\n  .iti__flag.iti__si {\n    height: 10px;\n    background-position: -4493px 0px; }\n  .iti__flag.iti__sj {\n    height: 15px;\n    background-position: -4515px 0px; }\n  .iti__flag.iti__sk {\n    height: 14px;\n    background-position: -4537px 0px; }\n  .iti__flag.iti__sl {\n    height: 14px;\n    background-position: -4559px 0px; }\n  .iti__flag.iti__sm {\n    height: 15px;\n    background-position: -4581px 0px; }\n  .iti__flag.iti__sn {\n    height: 14px;\n    background-position: -4603px 0px; }\n  .iti__flag.iti__so {\n    height: 14px;\n    background-position: -4625px 0px; }\n  .iti__flag.iti__sr {\n    height: 14px;\n    background-position: -4647px 0px; }\n  .iti__flag.iti__ss {\n    height: 10px;\n    background-position: -4669px 0px; }\n  .iti__flag.iti__st {\n    height: 10px;\n    background-position: -4691px 0px; }\n  .iti__flag.iti__sv {\n    height: 12px;\n    background-position: -4713px 0px; }\n  .iti__flag.iti__sx {\n    height: 14px;\n    background-position: -4735px 0px; }\n  .iti__flag.iti__sy {\n    height: 14px;\n    background-position: -4757px 0px; }\n  .iti__flag.iti__sz {\n    height: 14px;\n    background-position: -4779px 0px; }\n  .iti__flag.iti__ta {\n    height: 10px;\n    background-position: -4801px 0px; }\n  .iti__flag.iti__tc {\n    height: 10px;\n    background-position: -4823px 0px; }\n  .iti__flag.iti__td {\n    height: 14px;\n    background-position: -4845px 0px; }\n  .iti__flag.iti__tf {\n    height: 14px;\n    background-position: -4867px 0px; }\n  .iti__flag.iti__tg {\n    height: 13px;\n    background-position: -4889px 0px; }\n  .iti__flag.iti__th {\n    height: 14px;\n    background-position: -4911px 0px; }\n  .iti__flag.iti__tj {\n    height: 10px;\n    background-position: -4933px 0px; }\n  .iti__flag.iti__tk {\n    height: 10px;\n    background-position: -4955px 0px; }\n  .iti__flag.iti__tl {\n    height: 10px;\n    background-position: -4977px 0px; }\n  .iti__flag.iti__tm {\n    height: 14px;\n    background-position: -4999px 0px; }\n  .iti__flag.iti__tn {\n    height: 14px;\n    background-position: -5021px 0px; }\n  .iti__flag.iti__to {\n    height: 10px;\n    background-position: -5043px 0px; }\n  .iti__flag.iti__tr {\n    height: 14px;\n    background-position: -5065px 0px; }\n  .iti__flag.iti__tt {\n    height: 12px;\n    background-position: -5087px 0px; }\n  .iti__flag.iti__tv {\n    height: 10px;\n    background-position: -5109px 0px; }\n  .iti__flag.iti__tw {\n    height: 14px;\n    background-position: -5131px 0px; }\n  .iti__flag.iti__tz {\n    height: 14px;\n    background-position: -5153px 0px; }\n  .iti__flag.iti__ua {\n    height: 14px;\n    background-position: -5175px 0px; }\n  .iti__flag.iti__ug {\n    height: 14px;\n    background-position: -5197px 0px; }\n  .iti__flag.iti__um {\n    height: 11px;\n    background-position: -5219px 0px; }\n  .iti__flag.iti__un {\n    height: 14px;\n    background-position: -5241px 0px; }\n  .iti__flag.iti__us {\n    height: 11px;\n    background-position: -5263px 0px; }\n  .iti__flag.iti__uy {\n    height: 14px;\n    background-position: -5285px 0px; }\n  .iti__flag.iti__uz {\n    height: 10px;\n    background-position: -5307px 0px; }\n  .iti__flag.iti__va {\n    height: 15px;\n    background-position: -5329px 0px; }\n  .iti__flag.iti__vc {\n    height: 14px;\n    background-position: -5346px 0px; }\n  .iti__flag.iti__ve {\n    height: 14px;\n    background-position: -5368px 0px; }\n  .iti__flag.iti__vg {\n    height: 10px;\n    background-position: -5390px 0px; }\n  .iti__flag.iti__vi {\n    height: 14px;\n    background-position: -5412px 0px; }\n  .iti__flag.iti__vn {\n    height: 14px;\n    background-position: -5434px 0px; }\n  .iti__flag.iti__vu {\n    height: 12px;\n    background-position: -5456px 0px; }\n  .iti__flag.iti__wf {\n    height: 14px;\n    background-position: -5478px 0px; }\n  .iti__flag.iti__ws {\n    height: 10px;\n    background-position: -5500px 0px; }\n  .iti__flag.iti__xk {\n    height: 15px;\n    background-position: -5522px 0px; }\n  .iti__flag.iti__ye {\n    height: 14px;\n    background-position: -5544px 0px; }\n  .iti__flag.iti__yt {\n    height: 14px;\n    background-position: -5566px 0px; }\n  .iti__flag.iti__za {\n    height: 14px;\n    background-position: -5588px 0px; }\n  .iti__flag.iti__zm {\n    height: 14px;\n    background-position: -5610px 0px; }\n  .iti__flag.iti__zw {\n    height: 10px;\n    background-position: -5632px 0px; }\n\n.iti__flag {\n  height: 15px;\n  box-shadow: 0px 0px 1px 0px #888;\n  background-image: url(\"../img/flags.png\");\n  background-repeat: no-repeat;\n  background-color: #DBDBDB;\n  background-position: 20px 0; }\n  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n    .iti__flag {\n      background-image: url(\"../img/flags@2x.png\"); } }\n\n.iti__flag.iti__np {\n  background-color: transparent; }\n"],"sourceRoot":"webpack:///"}